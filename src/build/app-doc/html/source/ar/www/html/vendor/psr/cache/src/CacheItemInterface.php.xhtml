<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of CacheItemInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file CacheItemInterface.php</h1><p>
                        Size: 3,772 Bytes - Last Modified: 2016-08-06T20:24:11+00:00</p><section><h2><small>//var/www/html/vendor/psr/cache/src/</small>CacheItemInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Psr</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Cache</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * CacheItemInterface defines an interface for interacting with objects inside a cache.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * Each Item object MUST be associated with a specific key, which can be set</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * according to the implementing system and is typically passed by the</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * Cache\CacheItemPoolInterface object.</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * The Cache\CacheItemInterface object encapsulates the storage and retrieval of</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * cache items. Each Cache\CacheItemInterface is generated by a</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * Cache\CacheItemPoolInterface object, which is responsible for any required</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * setup as well as associating the object with a unique Key.</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * Cache\CacheItemInterface objects MUST be able to store and retrieve any type</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * of PHP value defined in the Data section of the specification.</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * Calling Libraries MUST NOT instantiate Item objects themselves. They may only</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * be requested from a Pool object via the getItem() method.  Calling Libraries</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * SHOULD NOT assume that an Item created by one Implementing Library is</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * compatible with a Pool from another Implementing Library.</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line24"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CacheItemInterface</span></pre></div><div id="line25"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">     * Returns the key for the current cache item.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     * The key is loaded by the Implementing Library, but should be available to</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">     * the higher level callers when needed.</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT">     *   The key string for this cache item.</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getKey</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     * Retrieves the value of the item from the cache associated with this object's key.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * The value returned must be identical to the value originally stored by set().</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     * If isHit() returns false, this method MUST return null. Note that null</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     * is a legitimate cached value, so the isHit() method SHOULD be used to</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * differentiate between "null value was found" and "no value was found."</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT">     * @return mixed</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT">     *   The value corresponding to this cache item's key, or null if not found.</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">get</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><br/></div><div id="line51"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">     * Confirms if the cache item lookup resulted in a cache hit.</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     * Note: This method MUST NOT have a race condition between calling isHit()</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     * and calling get().</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">     *   True if the request resulted in a cache hit. False otherwise.</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isHit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line61"><br/></div><div id="line62"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     * Sets the value represented by this cache item.</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     * The $value argument may be any item that can be serialized by PHP,</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     * although the method of serialization is left up to the Implementing</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">     * Library.</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">     * @param mixed $value</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">     *   The serializable value to be stored.</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">     *   The invoked object.</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">set</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line76"><br/></div><div id="line77"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">     * Sets the expiration time for this cache item.</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">     * @param \DateTimeInterface|null $expiration</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">     *   The point in time after which the item MUST be considered expired.</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">     *   If null is passed explicitly, a default value MAY be used. If none is set,</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">     *   the value should be stored permanently or for as long as the</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">     *   implementation allows.</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">     *   The called object.</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">expiresAt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expiration</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line90"><br/></div><div id="line91"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT">     * Sets the expiration time for this cache item.</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT">     * @param int|\DateInterval|null $time</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">     *   The period of time from the present after which the item MUST be considered</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     *   expired. An integer parameter is understood to be the time in seconds until</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     *   expiration. If null is passed explicitly, a default value MAY be used.</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     *   If none is set, the value should be stored permanently or for as long as the</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     *   implementation allows.</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     *   The called object.</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">expiresAfter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$time</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line105"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line106"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span></footer></body></html>
