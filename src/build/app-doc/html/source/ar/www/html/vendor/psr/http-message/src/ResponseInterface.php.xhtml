<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of ResponseInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file ResponseInterface.php</h1><p>
                        Size: 2,591 Bytes - Last Modified: 2016-08-06T14:39:51+00:00</p><section><h2><small>//var/www/html/vendor/psr/http-message/src/</small>ResponseInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Psr</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Http</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Message</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * Representation of an outgoing, server-side response.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * Per the HTTP specification, this interface includes properties for</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * each of the following:</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * - Protocol version</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * - Status code and reason phrase</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * - Headers</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * - Message body</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * Responses are considered immutable; all methods that might change state MUST</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * be implemented such that they retain the internal state of the current</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * message and return an instance that contains the changed state.</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line20"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ResponseInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">MessageInterface</span></pre></div><div id="line21"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line22"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT">     * Gets the response status code.</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT">     * The status code is a 3-digit integer result code of the server's attempt</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT">     * to understand and satisfy the request.</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">     * @return int Status code.</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line30"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getStatusCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line31"><br/></div><div id="line32"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT">     * Return an instance with the specified status code and, optionally, reason phrase.</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT">     * If no reason phrase is specified, implementations MAY choose to default</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT">     * to the RFC 7231 or IANA recommended reason phrase for the response's</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT">     * status code.</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     * This method MUST be implemented in such a way as to retain the</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * immutability of the message, and MUST return an instance that has the</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     * updated status and reason phrase.</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     * @link http://tools.ietf.org/html/rfc7231#section-6</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * @link http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     * @param int $code The 3-digit integer result code to set.</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT">     * @param string $reasonPhrase The reason phrase to use with the</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT">     *     provided status code; if none is provided, implementations MAY</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">     *     use the defaults as suggested in the HTTP specification.</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">     * @throws \InvalidArgumentException For invalid status code arguments.</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">withStatus</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$code</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$reasonPhrase</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><br/></div><div id="line54"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     * Gets the response reason phrase associated with the status code.</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">     * Because a reason phrase is not a required element in a response</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">     * status line, the reason phrase value MAY be null. Implementations MAY</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">     * choose to return the default RFC 7231 recommended reason phrase (or those</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">     * listed in the IANA HTTP Status Code Registry) for the response's</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     * status code.</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     * @link http://tools.ietf.org/html/rfc7231#section-6</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     * @link http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     * @return string Reason phrase; must return an empty string if none present.</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getReasonPhrase</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line69"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span></footer></body></html>
