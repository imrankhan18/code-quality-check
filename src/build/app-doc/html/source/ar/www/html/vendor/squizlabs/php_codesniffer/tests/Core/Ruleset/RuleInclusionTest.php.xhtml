<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of RuleInclusionTest.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file RuleInclusionTest.php</h1><p>
                        Size: 9,501 Bytes - Last Modified: 2021-12-12T21:44:58+00:00</p><section><h2><small>//var/www/html/vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/</small>RuleInclusionTest.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker" href="#line220">220</a><a class="anker" href="#line221">221</a><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker" href="#line224">224</a><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker" href="#line246">246</a><a class="anker" href="#line247">247</a><a class="anker" href="#line248">248</a><a class="anker" href="#line249">249</a><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker" href="#line263">263</a><a class="anker" href="#line264">264</a><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker" href="#line268">268</a><a class="anker" href="#line269">269</a><a class="anker" href="#line270">270</a><a class="anker" href="#line271">271</a><a class="anker" href="#line272">272</a><a class="anker" href="#line273">273</a><a class="anker" href="#line274">274</a><a class="anker" href="#line275">275</a><a class="anker" href="#line276">276</a><a class="anker" href="#line277">277</a><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker" href="#line290">290</a><a class="anker" href="#line291">291</a><a class="anker" href="#line292">292</a><a class="anker" href="#line293">293</a><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Tests for the \PHP_CodeSniffer\Ruleset class.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * @author    Juliette Reinders Folmer &lt;phpcs_nospam@adviesenzo.nl&gt;</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * @copyright 2019 Juliette Reinders Folmer. All rights reserved.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line9"><br/></div><div id="line10"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tests</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Core</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Ruleset</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Config</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Ruleset</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line14"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHPUnit</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Framework</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">TestCase</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RuleInclusionTest</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TestCase</span></pre></div><div id="line17"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line18"><br/></div><div id="line19"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT">     * The Ruleset object.</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT">     * @var \PHP_CodeSniffer\Ruleset</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line24"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ruleset</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line25"><br/></div><div id="line26"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">     * Path to the ruleset file.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line31"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$standard</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">     * The original content of the ruleset.</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line38"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$contents</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line39"><br/></div><div id="line40"><br/></div><div id="line41"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     * Initialize the test.</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setUp</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$GLOBALS</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CODESNIFFER_PEAR'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// PEAR installs test and sniff files into different locations</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// so these tests will not pass as they directly reference files</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// by relative location.</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">markTestSkipped</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Test cannot run from a PEAR install'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line54"><br/></div><div id="line55"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end setUp()</span></pre></div><div id="line56"><br/></div><div id="line57"><br/></div><div id="line58"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">     * Initialize the config and ruleset objects based on the `RuleInclusionTest.xml` ruleset file.</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line63"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setUpBeforeClass</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$GLOBALS</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CODESNIFFER_PEAR'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// This test will be skipped.</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line69"><br/></div><div id="line70"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$standard</span><span class="token T_WHITESPACE">       </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_DIR">__DIR__</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_FILE">__FILE__</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'.php'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_CONSTANT_ENCAPSED_STRING">'.xml'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$standard</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$standard</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line72"><br/></div><div id="line73"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// On-the-fly adjust the ruleset test file to be able to test</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// sniffs included with relative paths.</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$contents</span><span class="token T_WHITESPACE">       </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">file_get_contents</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$standard</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$contents</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$contents</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line77"><br/></div><div id="line78"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$repoRootDir</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">dirname</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">dirname</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">dirname</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_DIR">__DIR__</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line79"><br/></div><div id="line80"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$newPath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$repoRootDir</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">DIRECTORY_SEPARATOR</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$newPath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$repoRootDir</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line84"><br/></div><div id="line85"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$adjusted</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'%path_root_dir%'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$newPath</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$contents</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><br/></div><div id="line87"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">file_put_contents</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$standard</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$adjusted</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">markTestSkipped</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'On the fly ruleset adjustment failed'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line90"><br/></div><div id="line91"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$config</span><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Config</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">--standard=</span><span class="token T_VARIABLE">$standard</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Ruleset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$config</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><br/></div><div id="line94"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end setUpBeforeClass()</span></pre></div><div id="line95"><br/></div><div id="line96"><br/></div><div id="line97"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     * Reset ruleset file.</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">tearDown</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line103"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">file_put_contents</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$standard</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$contents</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line105"><br/></div><div id="line106"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end tearDown()</span></pre></div><div id="line107"><br/></div><div id="line108"><br/></div><div id="line109"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">     * Test that sniffs are registered.</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">testHasSniffCodes</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line116"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertObjectHasAttribute</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'sniffCodes'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line117"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertCount</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">14</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffCodes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line118"><br/></div><div id="line119"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end testHasSniffCodes()</span></pre></div><div id="line120"><br/></div><div id="line121"><br/></div><div id="line122"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line123"><pre><span class="token T_DOC_COMMENT">     * Test that sniffs are correctly registered, independently on the syntax used to include the sniff.</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line125"><pre><span class="token T_DOC_COMMENT">     * @param string $key   Expected array key.</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">     * @param string $value Expected array value.</span></pre></div><div id="line127"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line128"><pre><span class="token T_DOC_COMMENT">     * @dataProvider dataRegisteredSniffCodes</span></pre></div><div id="line129"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line130"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line131"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line132"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">testRegisteredSniffCodes</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line133"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line134"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertArrayHasKey</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffCodes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line135"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertSame</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffCodes</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line136"><br/></div><div id="line137"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end testRegisteredSniffCodes()</span></pre></div><div id="line138"><br/></div><div id="line139"><br/></div><div id="line140"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line141"><pre><span class="token T_DOC_COMMENT">     * Data provider.</span></pre></div><div id="line142"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">     * @see self::testRegisteredSniffCodes()</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line145"><pre><span class="token T_DOC_COMMENT">     * @return array</span></pre></div><div id="line146"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">dataRegisteredSniffCodes</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line148"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line149"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line150"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line151"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PSR1.Classes.ClassDeclaration'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line152"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\PSR1\Sniffs\Classes\ClassDeclarationSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line153"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line154"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line155"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PSR1.Files.SideEffects'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line156"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\PSR1\Sniffs\Files\SideEffectsSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line157"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line158"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PSR1.Methods.CamelCapsMethodName'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line160"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\PSR1\Sniffs\Methods\CamelCapsMethodNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line161"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line162"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.PHP.DisallowAlternativePHPTags'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\DisallowAlternativePHPTagsSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line165"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line167"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.PHP.DisallowShortOpenTag'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line168"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line169"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line170"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line171"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.Files.ByteOrderMark'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line172"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Files\ByteOrderMarkSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line174"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line175"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Squiz.Classes.ValidClassName'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line176"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line177"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line178"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line179"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.NamingConventions.UpperCaseConstantName'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line180"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line181"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line182"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line183"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Zend.NamingConventions.ValidVariableName'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line184"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Zend\Sniffs\NamingConventions\ValidVariableNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line185"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line186"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line187"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.Arrays.ArrayIndent'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line188"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line189"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line190"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line191"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.Metrics.CyclomaticComplexity'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line192"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line193"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line194"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line195"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.Files.LineLength'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line196"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line197"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line198"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line199"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.NamingConventions.CamelCapsFunctionName'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line200"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\CamelCapsFunctionNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line201"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line202"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line203"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Generic.Metrics.NestingLevel'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line204"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line205"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line206"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line207"><br/></div><div id="line208"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end dataRegisteredSniffCodes()</span></pre></div><div id="line209"><br/></div><div id="line210"><br/></div><div id="line211"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line212"><pre><span class="token T_DOC_COMMENT">     * Test that setting properties for standards, categories, sniffs works for all supported rule</span></pre></div><div id="line213"><pre><span class="token T_DOC_COMMENT">     * inclusion methods.</span></pre></div><div id="line214"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line215"><pre><span class="token T_DOC_COMMENT">     * @param string $sniffClass    The name of the sniff class.</span></pre></div><div id="line216"><pre><span class="token T_DOC_COMMENT">     * @param string $propertyName  The name of the changed property.</span></pre></div><div id="line217"><pre><span class="token T_DOC_COMMENT">     * @param mixed  $expectedValue The value expected for the property.</span></pre></div><div id="line218"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line219"><pre><span class="token T_DOC_COMMENT">     * @dataProvider dataSettingProperties</span></pre></div><div id="line220"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line221"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line222"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line223"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">testSettingProperties</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$sniffClass</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$propertyName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expectedValue</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line224"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line225"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertObjectHasAttribute</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'sniffs'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line226"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertArrayHasKey</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$sniffClass</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffs</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line227"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertObjectHasAttribute</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$propertyName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffs</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$sniffClass</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line228"><br/></div><div id="line229"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$actualValue</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$ruleset</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sniffs</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$sniffClass</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_VARIABLE">$propertyName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line230"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">assertSame</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expectedValue</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$actualValue</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line231"><br/></div><div id="line232"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end testSettingProperties()</span></pre></div><div id="line233"><br/></div><div id="line234"><br/></div><div id="line235"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line236"><pre><span class="token T_DOC_COMMENT">     * Data provider.</span></pre></div><div id="line237"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line238"><pre><span class="token T_DOC_COMMENT">     * @see self::testSettingProperties()</span></pre></div><div id="line239"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line240"><pre><span class="token T_DOC_COMMENT">     * @return array</span></pre></div><div id="line241"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line242"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">dataSettingProperties</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line243"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line244"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line245"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'ClassDeclarationSniff'</span><span class="token T_WHITESPACE">                           </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line246"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\PSR1\Sniffs\Classes\ClassDeclarationSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line247"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'setforallsniffs'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line248"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line249"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line250"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'SideEffectsSniff'</span><span class="token T_WHITESPACE">                                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line251"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\PSR1\Sniffs\Files\SideEffectsSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line252"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'setforallsniffs'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line253"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line254"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line255"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'ValidVariableNameSniff'</span><span class="token T_WHITESPACE">                          </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line256"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Zend\Sniffs\NamingConventions\ValidVariableNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line257"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'setforallincategory'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line258"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line259"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line260"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'ArrayIndentSniff'</span><span class="token T_WHITESPACE">                                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line261"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line262"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'indent'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line263"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'2'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line264"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line265"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'LineLengthSniff'</span><span class="token T_WHITESPACE">                                 </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line266"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line267"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'lineLimit'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line268"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'10'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line269"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line270"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'CamelCapsFunctionNameSniff'</span><span class="token T_WHITESPACE">                      </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line271"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\CamelCapsFunctionNameSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line272"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'strict'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line273"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line274"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line275"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'NestingLevelSniff-nestingLevel'</span><span class="token T_WHITESPACE">                  </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line276"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line277"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'nestingLevel'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line278"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'2'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line279"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line280"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'NestingLevelSniff-setforsniffsinincludedruleset'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line281"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line282"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'setforsniffsinincludedruleset'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line283"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line284"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line285"><br/></div><div id="line286"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Testing that setting a property at error code level does *not* work.</span></pre></div><div id="line287"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'CyclomaticComplexitySniff'</span><span class="token T_WHITESPACE">                       </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line288"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line289"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'complexity'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line290"><pre><span class="token T_WHITESPACE">                </span><span class="token T_LNUMBER">10</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line291"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line292"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line293"><br/></div><div id="line294"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end dataSettingProperties()</span></pre></div><div id="line295"><br/></div><div id="line296"><br/></div><div id="line297"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end class</span></pre></div><div id="line298"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span></footer></body></html>
