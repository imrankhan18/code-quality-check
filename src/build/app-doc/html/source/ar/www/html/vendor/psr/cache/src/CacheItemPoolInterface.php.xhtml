<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of CacheItemPoolInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file CacheItemPoolInterface.php</h1><p>
                        Size: 4,389 Bytes - Last Modified: 2016-08-06T20:24:11+00:00</p><section><h2><small>//var/www/html/vendor/psr/cache/src/</small>CacheItemPoolInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Psr</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Cache</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * CacheItemPoolInterface generates CacheItemInterface objects.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * The primary purpose of Cache\CacheItemPoolInterface is to accept a key from</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * the Calling Library and return the associated Cache\CacheItemInterface object.</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * It is also the primary point of interaction with the entire cache collection.</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * All configuration and initialization of the Pool is left up to an</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * Implementing Library.</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line14"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CacheItemPoolInterface</span></pre></div><div id="line15"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line16"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT">     * Returns a Cache Item representing the specified key.</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT">     * This method must always return a CacheItemInterface object, even in case of</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT">     * a cache miss. It MUST NOT return null.</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT">     *   The key for which to return the corresponding Cache Item.</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT">     * @throws InvalidArgumentException</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT">     *   If the $key string is not a legal value a \Psr\Cache\InvalidArgumentException</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">     *   MUST be thrown.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     * @return CacheItemInterface</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">     *   The corresponding Cache Item.</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line32"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getItem</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line33"><br/></div><div id="line34"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT">     * Returns a traversable set of cache items.</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT">     * @param string[] $keys</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     *   An indexed array of keys of items to retrieve.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * @throws InvalidArgumentException</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     *   If any of the keys in $keys are not a legal value a \Psr\Cache\InvalidArgumentException</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     *   MUST be thrown.</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * @return array|\Traversable</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     *   A traversable collection of Cache Items keyed by the cache keys of</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT">     *   each item. A Cache item will be returned for each key, even if that</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT">     *   key is not found. However, if no keys are specified then an empty</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">     *   traversable MUST be returned instead.</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getItems</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$keys</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line51"><br/></div><div id="line52"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     * Confirms if the cache contains specified cache item.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     * Note: This method MAY avoid retrieving the cached value for performance reasons.</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">     * This could result in a race condition with CacheItemInterface::get(). To avoid</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">     * such situation use CacheItemInterface::isHit() instead.</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">     *   The key for which to check existence.</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     * @throws InvalidArgumentException</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     *   If the $key string is not a legal value a \Psr\Cache\InvalidArgumentException</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     *   MUST be thrown.</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">     *   True if item exists in the cache, false otherwise.</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">hasItem</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line70"><br/></div><div id="line71"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">     * Deletes all items in the pool.</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">     *   True if the pool was successfully cleared. False if there was an error.</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">clear</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line78"><br/></div><div id="line79"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">     * Removes the item from the pool.</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">     *   The key to delete.</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">     * @throws InvalidArgumentException</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">     *   If the $key string is not a legal value a \Psr\Cache\InvalidArgumentException</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">     *   MUST be thrown.</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line89"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line90"><pre><span class="token T_DOC_COMMENT">     *   True if the item was successfully removed. False if there was an error.</span></pre></div><div id="line91"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">deleteItem</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><br/></div><div id="line94"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">     * Removes multiple items from the pool.</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     * @param string[] $keys</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     *   An array of keys that should be removed from the pool.</span></pre></div><div id="line99"><br/></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * @throws InvalidArgumentException</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     *   If any of the keys in $keys are not a legal value a \Psr\Cache\InvalidArgumentException</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     *   MUST be thrown.</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line105"><pre><span class="token T_DOC_COMMENT">     *   True if the items were successfully removed. False if there was an error.</span></pre></div><div id="line106"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line107"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">deleteItems</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$keys</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line108"><br/></div><div id="line109"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">     * Persists a cache item immediately.</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">     * @param CacheItemInterface $item</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">     *   The cache item to save.</span></pre></div><div id="line114"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line115"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line116"><pre><span class="token T_DOC_COMMENT">     *   True if the item was successfully persisted. False if there was an error.</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line118"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">save</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">CacheItemInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$item</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line119"><br/></div><div id="line120"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line121"><pre><span class="token T_DOC_COMMENT">     * Sets a cache item to be persisted later.</span></pre></div><div id="line122"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line123"><pre><span class="token T_DOC_COMMENT">     * @param CacheItemInterface $item</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">     *   The cache item to save.</span></pre></div><div id="line125"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line127"><pre><span class="token T_DOC_COMMENT">     *   False if the item could not be queued or if a commit was attempted and failed. True otherwise.</span></pre></div><div id="line128"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">saveDeferred</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">CacheItemInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$item</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line130"><br/></div><div id="line131"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line132"><pre><span class="token T_DOC_COMMENT">     * Persists any deferred cache items.</span></pre></div><div id="line133"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line134"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">     *   True if all not-yet-saved items were successfully saved or there were none. False otherwise.</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line137"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">commit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line138"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line139"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span></footer></body></html>
