<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PhpCsFixer\DocBlock\TypeExpression</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PhpCsFixer_DocBlock">PhpCsFixer\DocBlock</a>
          </li>
          <li class="separator">TypeExpression</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/friendsofphp/php-cs-fixer/src/DocBlock/TypeExpression.php.xhtml#line25">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PhpCsFixer\DocBlock\</small>TypeExpression</h1>
        <h4/>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class TypeExpression
            {<br/><ul class="none"><li>// constants</li><li>const REGEX_TYPES = '
    (?&lt;types&gt; # several types separated by `|` or `&amp;`
        (?&lt;type&gt; # single type
            (?&lt;nullable&gt;\??)
            (?:
                (?&lt;object_like_array&gt;
                    (?&lt;object_like_array_start&gt;array\h*\{)
                        (?&lt;object_like_array_keys&gt;
                            (?&lt;object_like_array_key&gt;
                                \h*[^?:\h]+\h*\??\h*:\h*(?&amp;types)
                            )
                            (?:\h*,(?&amp;object_like_array_key))*
                        )
                    \h*\}
                )
                |
                (?&lt;callable&gt; # callable syntax, e.g. `callable(string): bool`
                    (?&lt;callable_start&gt;(?:callable|Closure)\h*\(\h*)
                        (?&lt;callable_arguments&gt;
                            (?&amp;types)
                            (?:
                                \h*,\h*
                                (?&amp;types)
                            )*
                        )?
                    \h*\)
                    (?:
                        \h*\:\h*
                        (?&lt;callable_return&gt;(?&amp;types))
                    )?
                )
                |
                (?&lt;generic&gt; # generic syntax, e.g.: `array&lt;int, \Foo\Bar&gt;`
                    (?&lt;generic_start&gt;
                        (?&amp;name)+
                        \h*&lt;\h*
                    )
                        (?&lt;generic_types&gt;
                            (?&amp;types)
                            (?:
                                \h*,\h*
                                (?&amp;types)
                            )*
                        )
                    \h*&gt;
                )
                |
                (?&lt;class_constant&gt; # class constants with optional wildcard, e.g.: `Foo::*`, `Foo::CONST_A`, `FOO::CONST_*`
                    (?&amp;name)::(\*|\w+\*?)
                )
                |
                (?&lt;array&gt; # array expression, e.g.: `string[]`, `string[][]`
                    (?&amp;name)(\[\])+
                )
                |
                (?&lt;constant&gt; # single constant value (case insensitive), e.g.: 1, `\'a\'`
                    (?i)
                    null | true | false
                    | [\d.]+
                    | \'[^\']+?\' | "[^"]+?"
                    | [@$]?(?:this | self | static)
                    (?-i)
                )
                |
                (?&lt;name&gt; # single type, e.g.: `null`, `int`, `\Foo\Bar`
                    [\\\\\w-]++
                )
            )
        )
        (?:
            \h*(?&lt;glue&gt;[|&amp;])\h*
            (?&amp;type)
        )*
    )
    ';</li></ul><ul class="none"><li>// members</li><li>private  <a href="#members">$value</a>;
                    </li><li>private boolean <a href="#members">$isUnionType</a> =
                        false;
                    </li><li>private <span title="PhpCsFixer\DocBlock\list&lt;array{start_index:">list&lt;array{start_index:</span> <a href="#members">$innerTypeExpressions</a> =
                        ;
                    </li><li>private string <a href="#members">$typesGlue</a> =
                        '|';
                    </li><li>private <span title="PhpCsFixer\DocBlock\null|NamespaceAnalysis">null|NamespaceAnalysis</span> <a href="#members">$namespace</a>;
                    </li><li>private  <a href="#members">$namespaceUses</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/__construct.xhtml">__construct</a>()
                    </li><li>public string <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/toString.xhtml">toString</a>()
                    </li><li>public array <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getTypes.xhtml">getTypes</a>()
                    </li><li>public void <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/sortTypes.xhtml">sortTypes</a>()
                    </li><li>public string <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getTypesGlue.xhtml">getTypesGlue</a>()
                    </li><li>public ?string <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getCommonType.xhtml">getCommonType</a>()
                    </li><li>public bool <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/allowsNull.xhtml">allowsNull</a>()
                    </li><li>private void <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parse.xhtml">parse</a>()
                    </li><li>private void <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parseCommaSeparatedInnerTypes.xhtml">parseCommaSeparatedInnerTypes</a>()
                    </li><li>private void <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parseObjectLikeArrayKeys.xhtml">parseObjectLikeArrayKeys</a>()
                    </li><li>private <span title="TypeExpression">TypeExpression</span> <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/inner.xhtml">inner</a>()
                    </li><li>private ?string <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getParentType.xhtml">getParentType</a>()
                    </li><li>private string <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/normalize.xhtml">normalize</a>()
                    </li><li>private array <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getAliases.xhtml">getAliases</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="REGEX_TYPES">REGEX_TYPES</td>
              <td>'
    (?&lt;types&gt; # several types separated by `|` or `&amp;`
        (?&lt;type&gt; # single type
            (?&lt;nullable&gt;\??)
            (?:
                (?&lt;object_like_array&gt;
                    (?&lt;object_like_array_start&gt;array\h*\{)
                        (?&lt;object_like_array_keys&gt;
                            (?&lt;object_like_array_key&gt;
                                \h*[^?:\h]+\h*\??\h*:\h*(?&amp;types)
                            )
                            (?:\h*,(?&amp;object_like_array_key))*
                        )
                    \h*\}
                )
                |
                (?&lt;callable&gt; # callable syntax, e.g. `callable(string): bool`
                    (?&lt;callable_start&gt;(?:callable|Closure)\h*\(\h*)
                        (?&lt;callable_arguments&gt;
                            (?&amp;types)
                            (?:
                                \h*,\h*
                                (?&amp;types)
                            )*
                        )?
                    \h*\)
                    (?:
                        \h*\:\h*
                        (?&lt;callable_return&gt;(?&amp;types))
                    )?
                )
                |
                (?&lt;generic&gt; # generic syntax, e.g.: `array&lt;int, \Foo\Bar&gt;`
                    (?&lt;generic_start&gt;
                        (?&amp;name)+
                        \h*&lt;\h*
                    )
                        (?&lt;generic_types&gt;
                            (?&amp;types)
                            (?:
                                \h*,\h*
                                (?&amp;types)
                            )*
                        )
                    \h*&gt;
                )
                |
                (?&lt;class_constant&gt; # class constants with optional wildcard, e.g.: `Foo::*`, `Foo::CONST_A`, `FOO::CONST_*`
                    (?&amp;name)::(\*|\w+\*?)
                )
                |
                (?&lt;array&gt; # array expression, e.g.: `string[]`, `string[][]`
                    (?&amp;name)(\[\])+
                )
                |
                (?&lt;constant&gt; # single constant value (case insensitive), e.g.: 1, `\'a\'`
                    (?i)
                    null | true | false
                    | [\d.]+
                    | \'[^\']+?\' | "[^"]+?"
                    | [@$]?(?:this | self | static)
                    (?-i)
                )
                |
                (?&lt;name&gt; # single type, e.g.: `null`, `int`, `\Foo\Bar`
                    [\\\\\w-]++
                )
            )
        )
        (?:
            \h*(?&lt;glue&gt;[|&amp;])\h*
            (?&amp;type)
        )*
    )
    '</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="innerTypeExpressions"><strong>$innerTypeExpressions</strong>
                —
                <a title="PhpCsFixer\DocBlock\list&lt;array{start_index:" href="../classes/PhpCsFixer_DocBlock_list&lt;array{start_index:.xhtml">PhpCsFixer\DocBlock\list&lt;array{start_index:</a></li>
            <li id="isUnionType">
              <strong>$isUnionType</strong>
            </li>
            <li id="namespace"><strong>$namespace</strong>
                —
                <a title="PhpCsFixer\DocBlock\null|NamespaceAnalysis" href="../classes/PhpCsFixer_DocBlock_null|NamespaceAnalysis.xhtml">PhpCsFixer\DocBlock\null|NamespaceAnalysis</a></li>
            <li id="namespaceUses"><strong>$namespaceUses</strong>
                —
                array</li>
            <li id="typesGlue">
              <strong>$typesGlue</strong>
            </li>
            <li id="value"><strong>$value</strong>
                —
                string</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getAliases">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getAliases.xhtml">getAliases()</a>
            </li>
            <li id="getParentType">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getParentType.xhtml">getParentType()</a>
            </li>
            <li id="inner">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/inner.xhtml">inner()</a>
            </li>
            <li id="normalize">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/normalize.xhtml">normalize()</a>
            </li>
            <li id="parse">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parse.xhtml">parse()</a>
            </li>
            <li id="parseCommaSeparatedInnerTypes">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parseCommaSeparatedInnerTypes.xhtml">parseCommaSeparatedInnerTypes()</a>
            </li>
            <li id="parseObjectLikeArrayKeys">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/parseObjectLikeArrayKeys.xhtml">parseObjectLikeArrayKeys()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/__construct.xhtml">__construct()</a>
            </li>
            <li id="allowsNull">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/allowsNull.xhtml">allowsNull()</a>
            </li>
            <li id="getCommonType">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getCommonType.xhtml">getCommonType()</a>
            </li>
            <li id="getTypes">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getTypes.xhtml">getTypes()</a>
            </li>
            <li id="getTypesGlue">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/getTypesGlue.xhtml">getTypesGlue()</a>
            </li>
            <li id="sortTypes">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/sortTypes.xhtml">sortTypes()</a>
            </li>
            <li id="toString">
              <a title="PhpCsFixer\DocBlock\TypeExpression" href="../classes/PhpCsFixer_DocBlock_TypeExpression/toString.xhtml">toString()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
