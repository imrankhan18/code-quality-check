<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GuzzleHttp\Psr7\Utils::streamFor</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#GuzzleHttp_Psr7">GuzzleHttp\Psr7</a>
          </li>
          <li class="separator">
            <a title="GuzzleHttp\Psr7\Utils" href="../../classes/GuzzleHttp_Psr7_Utils.xhtml">Utils</a>
          </li>
          <li class="separator">streamFor</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#throws">Throws</a>
          </li>
          <li>
            <a href="../../source/ar/www/html/vendor/guzzlehttp/psr7/src/Utils.php.xhtml#line286">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>GuzzleHttp\Psr7\Utils::</small>streamFor</h1>
        <h4>Create a new stream based on the input type.</h4>
        <p>Options is an associative array that can contain the following keys:
- metadata: Array of custom metadata.
- size: Size of the stream.

This method accepts the following `$resource` types:
- `Psr\Http\Message\StreamInterface`: Returns the value as-is.
- `string`: Creates a stream object that uses the given string as the contents.
- `resource`: Creates a stream object that wraps the given PHP stream resource.
- `Iterator`: If the provided value implements `Iterator`, then a read-only
  stream object will be created that wraps the given iterable. Each time the
  stream is read from, data from the iterator will fill a buffer and will be
  continuously called until the buffer is equal to the requested read size.
  Subsequent read calls will first read from the buffer and then call `next`
  on the underlying iterator until it is exhausted.
- `object` with `__toString()`: If the object has the `__toString()` method,
  the object will be cast to a string and then a stream will be returned that
  uses the string value.
- `NULL`: When `null` is passed, an empty stream object is returned.
- `callable` When a callable is passed, a read-only stream object will be
  created that invokes the given callable. The callable is invoked with the
  number of suggested bytes to read. The callable can return any number of
  bytes, but MUST return `false` when there is no more data to return. The
  stream object that wraps the callable will invoke the callable until the
  number of requested bytes are available. Any additional bytes will be
  buffered and used in subsequent reads.</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function streamFor([string
        $resource = '',
            [array
        $options = ]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$resource</code>
                —
                string</dt>
          <dd>Entity body data<br/><br/><br/>      </dd>
          <dt><code>$options</code>
                —
                array</dt>
          <dd/>
        </dl>
        <h2 id="throws">Errors/Exceptions</h2>
        <dl class="styled">
          <dt>
            <code>
              <a title="\InvalidArgumentException" href="../../classes/_InvalidArgumentException.xhtml">InvalidArgumentException</a>
            </code>
          </dt>
          <dd>if the $resource arg is not valid.</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
