<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PHP_CodeSniffer\Util\Tokens</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PHP_CodeSniffer_Util">PHP_CodeSniffer\Util</a>
          </li>
          <li class="separator">Tokens</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/squizlabs/php_codesniffer/src/Util/Tokens.php.xhtml#line181">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PHP_CodeSniffer\Util\</small>Tokens</h1>
        <h4/>
        <p/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Tokens
            {<br/><ul class="none"><li>// members</li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$weightings</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$assignmentTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$equalityTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$comparisonTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$arithmeticTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$operators</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$booleanOperators</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$castTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$parenthesisOpeners</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$scopeOpeners</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$scopeModifiers</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$methodPrefixes</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$blockOpeners</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$emptyTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$commentTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$phpcsCommentTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$stringTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$textStringTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$bracketTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$includeTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$heredocTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$functionNameTokens</a> =
                        ;
                    </li><li>public static <span title="PHP_CodeSniffer\Util\array&lt;int|string">array&lt;int|string</span> <a href="#members">$ooScopeTokens</a> =
                        ;
                    </li><li>public static array <a href="#members">$magicConstants</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public static string <a title="PHP_CodeSniffer\Util\Tokens" href="../classes/PHP_CodeSniffer_Util_Tokens/tokenName.xhtml">tokenName</a>()
                    </li><li>public static int|false <a title="PHP_CodeSniffer\Util\Tokens" href="../classes/PHP_CodeSniffer_Util_Tokens/getHighestWeightedToken.xhtml">getHighestWeightedToken</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>public</h4>
          <ul class="members">
            <li id="arithmeticTokens"><strong>$arithmeticTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent arithmetic operators.</span></li>
            <li id="assignmentTokens"><strong>$assignmentTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent assignments.</span></li>
            <li id="blockOpeners"><strong>$blockOpeners</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that open code blocks.</span></li>
            <li id="booleanOperators"><strong>$booleanOperators</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that perform boolean operations.</span></li>
            <li id="bracketTokens"><strong>$bracketTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent brackets and parenthesis.</span></li>
            <li id="castTokens"><strong>$castTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent casting.</span></li>
            <li id="commentTokens"><strong>$commentTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that are comments.</span></li>
            <li id="comparisonTokens"><strong>$comparisonTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent comparison operator.</span></li>
            <li id="emptyTokens"><strong>$emptyTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that don't represent code.</span></li>
            <li id="equalityTokens"><strong>$equalityTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent equality comparisons.</span></li>
            <li id="functionNameTokens"><strong>$functionNameTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent the names of called functions.</span></li>
            <li id="heredocTokens"><strong>$heredocTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that make up a heredoc string.</span></li>
            <li id="includeTokens"><strong>$includeTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that include files.</span></li>
            <li id="magicConstants"><strong>$magicConstants</strong>
                —
                array<br/><span class="indent">Tokens representing PHP magic constants.</span></li>
            <li id="methodPrefixes"><strong>$methodPrefixes</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that can prefix a method name</span></li>
            <li id="ooScopeTokens"><strong>$ooScopeTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that open class and object scopes.</span></li>
            <li id="operators"><strong>$operators</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that perform operations.</span></li>
            <li id="parenthesisOpeners"><strong>$parenthesisOpeners</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Token types that open parenthesis.</span></li>
            <li id="phpcsCommentTokens"><strong>$phpcsCommentTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that are comments containing PHPCS instructions.</span></li>
            <li id="scopeModifiers"><strong>$scopeModifiers</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent scope modifiers.</span></li>
            <li id="scopeOpeners"><strong>$scopeOpeners</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that are allowed to open scopes.</span></li>
            <li id="stringTokens"><strong>$stringTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent strings.</span></li>
            <li id="textStringTokens"><strong>$textStringTokens</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">Tokens that represent text strings.</span></li>
            <li id="weightings"><strong>$weightings</strong>
                —
                <a title="PHP_CodeSniffer\Util\array&lt;int|string" href="../classes/PHP_CodeSniffer_Util_array&lt;int|string.xhtml">PHP_CodeSniffer\Util\array&lt;int|string</a><br/><span class="indent">The token weightings.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="getHighestWeightedToken"><a title="PHP_CodeSniffer\Util\Tokens" href="../classes/PHP_CodeSniffer_Util_Tokens/getHighestWeightedToken.xhtml">getHighestWeightedToken()</a>
                — Returns the highest weighted token type.</li>
            <li id="tokenName"><a title="PHP_CodeSniffer\Util\Tokens" href="../classes/PHP_CodeSniffer_Util_Tokens/tokenName.xhtml">tokenName()</a>
                — Given a token, returns the name of the token.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
