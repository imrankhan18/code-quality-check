<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Doctrine\Common\Lexer\AbstractLexer</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Doctrine_Common_Lexer">Doctrine\Common\Lexer</a>
          </li>
          <li class="separator">AbstractLexer</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/doctrine/lexer/lib/Doctrine/Common/Lexer/AbstractLexer.php.xhtml#line24">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Doctrine\Common\Lexer\</small>AbstractLexer</h1>
        <h4>Base class for writing simple lexers, i.e. for creating small DSLs.</h4>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class AbstractLexer
            {<br/><ul class="none"><li>// members</li><li>private  <a href="#members">$input</a>;
                    </li><li>private array <a href="#members">$tokens</a> =
                        ;
                    </li><li>private integer <a href="#members">$position</a> =
                        0;
                    </li><li>private integer <a href="#members">$peek</a> =
                        0;
                    </li><li>public  <a href="#members">$lookahead</a>;
                    </li><li>public  <a href="#members">$token</a>;
                    </li><li>private <span title="Doctrine\Common\Lexer\string|null">string|null</span> <a href="#members">$regex</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/setInput.xhtml">setInput</a>()
                    </li><li>public void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/reset.xhtml">reset</a>()
                    </li><li>public void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/resetPeek.xhtml">resetPeek</a>()
                    </li><li>public void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/resetPosition.xhtml">resetPosition</a>()
                    </li><li>public string <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getInputUntilPosition.xhtml">getInputUntilPosition</a>()
                    </li><li>public bool <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isNextToken.xhtml">isNextToken</a>()
                    </li><li>public bool <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isNextTokenAny.xhtml">isNextTokenAny</a>()
                    </li><li>public bool <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/moveNext.xhtml">moveNext</a>()
                    </li><li>public void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/skipUntil.xhtml">skipUntil</a>()
                    </li><li>public bool <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isA.xhtml">isA</a>()
                    </li><li>public array <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/peek.xhtml">peek</a>()
                    </li><li>public array <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/glimpse.xhtml">glimpse</a>()
                    </li><li>protected void <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/scan.xhtml">scan</a>()
                    </li><li>public int|string <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getLiteral.xhtml">getLiteral</a>()
                    </li><li>protected string <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getModifiers.xhtml">getModifiers</a>()
                    </li><li>protected abstract array <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getCatchablePatterns.xhtml">getCatchablePatterns</a>()
                    </li><li>protected abstract array <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns</a>()
                    </li><li>protected abstract int|string|null <a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getType.xhtml">getType</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="input"><strong>$input</strong>
                —
                string<br/><span class="indent">Lexer original input string.</span></li>
            <li id="peek"><strong>$peek</strong>
                —
                int<br/><span class="indent">Current peek of current lexer position.</span></li>
            <li id="position"><strong>$position</strong>
                —
                int<br/><span class="indent">Current lexer position in input string.</span></li>
            <li id="regex"><strong>$regex</strong>
                —
                <a title="Doctrine\Common\Lexer\string|null" href="../classes/Doctrine_Common_Lexer_string|null.xhtml">Doctrine\Common\Lexer\string|null</a><br/><span class="indent">Composed regex for input parsing.</span></li>
            <li id="tokens"><strong>$tokens</strong>
                —
                array<br/><span class="indent">Array of scanned tokens.</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="lookahead"><strong>$lookahead</strong>
                —
                array<br/><span class="indent">The next token in the input.</span></li>
            <li id="token"><strong>$token</strong>
                —
                array<br/><span class="indent">The last matched/seen token.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="getCatchablePatterns"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getCatchablePatterns.xhtml">getCatchablePatterns()</a>
                — Lexical catchable patterns.</li>
            <li id="getModifiers"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getModifiers.xhtml">getModifiers()</a>
                — Regex modifiers</li>
            <li id="getNonCatchablePatterns"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns()</a>
                — Lexical non-catchable patterns.</li>
            <li id="getType"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getType.xhtml">getType()</a>
                — Retrieve token type. Also processes the token value if necessary.</li>
            <li id="scan"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/scan.xhtml">scan()</a>
                — Scans the input string for tokens.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="getInputUntilPosition"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getInputUntilPosition.xhtml">getInputUntilPosition()</a>
                — Retrieve the original lexer's input until a given position.</li>
            <li id="getLiteral"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/getLiteral.xhtml">getLiteral()</a>
                — Gets the literal for a given token.</li>
            <li id="glimpse"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/glimpse.xhtml">glimpse()</a>
                — Peeks at the next token, returns it and immediately resets the peek.</li>
            <li id="isA"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isA.xhtml">isA()</a>
                — Checks if given value is identical to the given token.</li>
            <li id="isNextToken"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isNextToken.xhtml">isNextToken()</a>
                — Checks whether a given token matches the current lookahead.</li>
            <li id="isNextTokenAny"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/isNextTokenAny.xhtml">isNextTokenAny()</a>
                — Checks whether any of the given tokens matches the current lookahead.</li>
            <li id="moveNext"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/moveNext.xhtml">moveNext()</a>
                — Moves to the next token in the input string.</li>
            <li id="peek"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/peek.xhtml">peek()</a>
                — Moves the lookahead token forward.</li>
            <li id="reset"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/reset.xhtml">reset()</a>
                — Resets the lexer.</li>
            <li id="resetPeek"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/resetPeek.xhtml">resetPeek()</a>
                — Resets the peek pointer to 0.</li>
            <li id="resetPosition"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/resetPosition.xhtml">resetPosition()</a>
                — Resets the lexer position on the input to the given position.</li>
            <li id="setInput"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/setInput.xhtml">setInput()</a>
                — Sets the input data to be tokenized.</li>
            <li id="skipUntil"><a title="Doctrine\Common\Lexer\AbstractLexer" href="../classes/Doctrine_Common_Lexer_AbstractLexer/skipUntil.xhtml">skipUntil()</a>
                — Tells the lexer to skip input tokens until it sees a token with the given value.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
