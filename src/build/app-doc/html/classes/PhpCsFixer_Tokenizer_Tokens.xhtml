<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PhpCsFixer\Tokenizer\Tokens</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PhpCsFixer_Tokenizer">PhpCsFixer\Tokenizer</a>
          </li>
          <li class="separator">Tokens</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Tokens.php.xhtml#line32">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PhpCsFixer\Tokenizer\</small>Tokens</h1>
        <h4>Collection of code tokens.</h4>
        <p>Its role is to provide the ability to manage collection and navigate through it.<br/><br/>As a token prototype you should understand a single element generated by token_get_all.</p>
        <ul>
          <li>Author: Dariusz Rumiński &lt;dariusz.ruminski@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Tokens
                extends <a title="SplFixedArray" href="../classes/SplFixedArray.xhtml">SplFixedArray</a>
            {<br/><ul class="none"><li>// constants</li><li>const BLOCK_TYPE_PARENTHESIS_BRACE = 1;</li><li>const BLOCK_TYPE_CURLY_BRACE = 2;</li><li>const BLOCK_TYPE_INDEX_SQUARE_BRACE = 3;</li><li>const BLOCK_TYPE_ARRAY_SQUARE_BRACE = 4;</li><li>const BLOCK_TYPE_DYNAMIC_PROP_BRACE = 5;</li><li>const BLOCK_TYPE_DYNAMIC_VAR_BRACE = 6;</li><li>const BLOCK_TYPE_ARRAY_INDEX_CURLY_BRACE = 7;</li><li>const BLOCK_TYPE_GROUP_IMPORT_BRACE = 8;</li><li>const BLOCK_TYPE_DESTRUCTURING_SQUARE_BRACE = 9;</li><li>const BLOCK_TYPE_BRACE_CLASS_INSTANTIATION = 10;</li><li>const BLOCK_TYPE_ATTRIBUTE = 11;</li></ul><ul class="none"><li>// members</li><li>private static array <a href="#members">$cache</a> =
                        ;
                    </li><li>private <span title="PhpCsFixer\Tokenizer\array&lt;int">array&lt;int</span> <a href="#members">$blockStartCache</a> =
                        ;
                    </li><li>private <span title="PhpCsFixer\Tokenizer\array&lt;int">array&lt;int</span> <a href="#members">$blockEndCache</a> =
                        ;
                    </li><li>private  <a href="#members">$codeHash</a>;
                    </li><li>private boolean <a href="#members">$changed</a> =
                        false;
                    </li><li>private <span title="PhpCsFixer\Tokenizer\array&lt;int|string">array&lt;int|string</span> <a href="#members">$foundTokenKinds</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/__clone.xhtml">__clone</a>()
                    </li><li>public static void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearCache.xhtml">clearCache</a>()
                    </li><li>public static ?array <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/detectBlockType.xhtml">detectBlockType</a>()
                    </li><li>public static <span title="Tokens">Tokens</span> <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/fromArray.xhtml">fromArray</a>()
                    </li><li>public static <span title="Tokens">Tokens</span> <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/fromCode.xhtml">fromCode</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getBlockEdgeDefinitions.xhtml">getBlockEdgeDefinitions</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setSize.xhtml">setSize</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/offsetUnset.xhtml">offsetUnset</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/offsetSet.xhtml">offsetSet</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearChanged.xhtml">clearChanged</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearEmptyTokens.xhtml">clearEmptyTokens</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/ensureWhitespaceAtIndex.xhtml">ensureWhitespaceAtIndex</a>()
                    </li><li>public int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findBlockEnd.xhtml">findBlockEnd</a>()
                    </li><li>public int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findBlockStart.xhtml">findBlockStart</a>()
                    </li><li>public array <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findGivenKind.xhtml">findGivenKind</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/generateCode.xhtml">generateCode</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/generatePartialCode.xhtml">generatePartialCode</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getCodeHash.xhtml">getCodeHash</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextNonWhitespace.xhtml">getNextNonWhitespace</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextTokenOfKind.xhtml">getNextTokenOfKind</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNonWhitespaceSibling.xhtml">getNonWhitespaceSibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevNonWhitespace.xhtml">getPrevNonWhitespace</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevTokenOfKind.xhtml">getPrevTokenOfKind</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenOfKindSibling.xhtml">getTokenOfKindSibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKindSibling.xhtml">getTokenNotOfKindSibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKindsSibling.xhtml">getTokenNotOfKindsSibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getMeaningfulTokenSibling.xhtml">getMeaningfulTokenSibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNonEmptySibling.xhtml">getNonEmptySibling</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextMeaningfulToken.xhtml">getNextMeaningfulToken</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevMeaningfulToken.xhtml">getPrevMeaningfulToken</a>()
                    </li><li>public ?array <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findSequence.xhtml">findSequence</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/insertAt.xhtml">insertAt</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/insertSlices.xhtml">insertSlices</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isChanged.xhtml">isChanged</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isEmptyAt.xhtml">isEmptyAt</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearAt.xhtml">clearAt</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/overrideRange.xhtml">overrideRange</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeLeadingWhitespace.xhtml">removeLeadingWhitespace</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeTrailingWhitespace.xhtml">removeTrailingWhitespace</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setCode.xhtml">setCode</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/toJson.xhtml">toJson</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isAllTokenKindsFound.xhtml">isAllTokenKindsFound</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isAnyTokenKindsFound.xhtml">isAnyTokenKindsFound</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isTokenKindFound.xhtml">isTokenKindFound</a>()
                    </li><li>public int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/countTokenKind.xhtml">countTokenKind</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearRange.xhtml">clearRange</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isMonolithicPhp.xhtml">isMonolithicPhp</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isPartialCodeMultiline.xhtml">isPartialCodeMultiline</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/hasAlternativeSyntax.xhtml">hasAlternativeSyntax</a>()
                    </li><li>public void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearTokenAndMergeSurroundingWhitespace.xhtml">clearTokenAndMergeSurroundingWhitespace</a>()
                    </li><li>protected void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/applyTransformers.xhtml">applyTransformers</a>()
                    </li><li>private void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeWhitespaceSafely.xhtml">removeWhitespaceSafely</a>()
                    </li><li>private int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findOppositeBlockEdge.xhtml">findOppositeBlockEdge</a>()
                    </li><li>private static string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/calculateCodeHash.xhtml">calculateCodeHash</a>()
                    </li><li>private static <span title="Tokens">Tokens</span> <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getCache.xhtml">getCache</a>()
                    </li><li>private static bool <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/hasCache.xhtml">hasCache</a>()
                    </li><li>private static void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setCache.xhtml">setCache</a>()
                    </li><li>private void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/changeCodeHash.xhtml">changeCodeHash</a>()
                    </li><li>private void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/registerFoundToken.xhtml">registerFoundToken</a>()
                    </li><li>private void <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/unregisterFoundToken.xhtml">unregisterFoundToken</a>()
                    </li><li>private int|string <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/extractTokenKind.xhtml">extractTokenKind</a>()
                    </li><li>private ?int <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKind.xhtml">getTokenNotOfKind</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="SplFixedArray">SplFixedArray</span></li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/__construct.xhtml">__construct</a>()
                        </li><li>public int <a title="SplFixedArray" href="../classes/SplFixedArray/count.xhtml">count</a>()
                        </li><li>public mixed <a title="SplFixedArray" href="../classes/SplFixedArray/current.xhtml">current</a>()
                        </li><li>public SplFixedArray <a title="SplFixedArray" href="../classes/SplFixedArray/fromArray.xhtml">fromArray</a>()
                        </li><li>public int <a title="SplFixedArray" href="../classes/SplFixedArray/getSize.xhtml">getSize</a>()
                        </li><li>public int <a title="SplFixedArray" href="../classes/SplFixedArray/key.xhtml">key</a>()
                        </li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/next.xhtml">next</a>()
                        </li><li>public bool <a title="SplFixedArray" href="../classes/SplFixedArray/offsetExists.xhtml">offsetExists</a>()
                        </li><li>public mixed <a title="SplFixedArray" href="../classes/SplFixedArray/offsetGet.xhtml">offsetGet</a>()
                        </li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/offsetSet.xhtml">offsetSet</a>()
                        </li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/offsetUnset.xhtml">offsetUnset</a>()
                        </li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/rewind.xhtml">rewind</a>()
                        </li><li>public bool <a title="SplFixedArray" href="../classes/SplFixedArray/setSize.xhtml">setSize</a>()
                        </li><li>public array <a title="SplFixedArray" href="../classes/SplFixedArray/toArray.xhtml">toArray</a>()
                        </li><li>public bool <a title="SplFixedArray" href="../classes/SplFixedArray/valid.xhtml">valid</a>()
                        </li><li>public void <a title="SplFixedArray" href="../classes/SplFixedArray/__wakeup.xhtml">__wakeup</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="SplFixedArray" href="../classes/SplFixedArray.xhtml">SplFixedArray</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">243</td>
            <td>drop condition when PHP 8.0+ is required</td>
          </tr>
        </table>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="BLOCK_TYPE_PARENTHESIS_BRACE">BLOCK_TYPE_PARENTHESIS_BRACE</td>
              <td>1</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_CURLY_BRACE">BLOCK_TYPE_CURLY_BRACE</td>
              <td>2</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_INDEX_SQUARE_BRACE">BLOCK_TYPE_INDEX_SQUARE_BRACE</td>
              <td>3</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_ARRAY_SQUARE_BRACE">BLOCK_TYPE_ARRAY_SQUARE_BRACE</td>
              <td>4</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_DYNAMIC_PROP_BRACE">BLOCK_TYPE_DYNAMIC_PROP_BRACE</td>
              <td>5</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_DYNAMIC_VAR_BRACE">BLOCK_TYPE_DYNAMIC_VAR_BRACE</td>
              <td>6</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_ARRAY_INDEX_CURLY_BRACE">BLOCK_TYPE_ARRAY_INDEX_CURLY_BRACE</td>
              <td>7</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_GROUP_IMPORT_BRACE">BLOCK_TYPE_GROUP_IMPORT_BRACE</td>
              <td>8</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_DESTRUCTURING_SQUARE_BRACE">BLOCK_TYPE_DESTRUCTURING_SQUARE_BRACE</td>
              <td>9</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_BRACE_CLASS_INSTANTIATION">BLOCK_TYPE_BRACE_CLASS_INSTANTIATION</td>
              <td>10</td>
            </tr>
            <tr>
              <td id="BLOCK_TYPE_ATTRIBUTE">BLOCK_TYPE_ATTRIBUTE</td>
              <td>11</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="blockEndCache"><strong>$blockEndCache</strong>
                —
                <a title="PhpCsFixer\Tokenizer\array&lt;int" href="../classes/PhpCsFixer_Tokenizer_array&lt;int.xhtml">PhpCsFixer\Tokenizer\array&lt;int</a><br/><span class="indent">Cache of block ends. Any change in collection will invalidate it.</span></li>
            <li id="blockStartCache"><strong>$blockStartCache</strong>
                —
                <a title="PhpCsFixer\Tokenizer\array&lt;int" href="../classes/PhpCsFixer_Tokenizer_array&lt;int.xhtml">PhpCsFixer\Tokenizer\array&lt;int</a><br/><span class="indent">Cache of block starts. Any change in collection will invalidate it.</span></li>
            <li id="cache">
              <strong>$cache</strong>
              <br/>
              <span class="indent">Static class cache.</span>
            </li>
            <li id="changed">
              <strong>$changed</strong>
              <br/>
              <span class="indent">Flag is collection was changed.</span>
            </li>
            <li id="codeHash"><strong>$codeHash</strong>
                —
                string<br/><span class="indent">crc32 hash of code string.</span></li>
            <li id="foundTokenKinds"><strong>$foundTokenKinds</strong>
                —
                <a title="PhpCsFixer\Tokenizer\array&lt;int|string" href="../classes/PhpCsFixer_Tokenizer_array&lt;int|string.xhtml">PhpCsFixer\Tokenizer\array&lt;int|string</a><br/><span class="indent">Set of found token kinds.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="calculateCodeHash"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/calculateCodeHash.xhtml">calculateCodeHash()</a>
                — Calculate hash for code.</li>
            <li id="changeCodeHash"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/changeCodeHash.xhtml">changeCodeHash()</a>
                — Change code hash.</li>
            <li id="extractTokenKind">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/extractTokenKind.xhtml">extractTokenKind()</a>
            </li>
            <li id="findOppositeBlockEdge">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findOppositeBlockEdge.xhtml">findOppositeBlockEdge()</a>
            </li>
            <li id="getCache"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getCache.xhtml">getCache()</a>
                — Get cache value for given key.</li>
            <li id="getTokenNotOfKind">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKind.xhtml">getTokenNotOfKind()</a>
            </li>
            <li id="hasCache"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/hasCache.xhtml">hasCache()</a>
                — Check if given key exists in cache.</li>
            <li id="registerFoundToken"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/registerFoundToken.xhtml">registerFoundToken()</a>
                — Register token as found.</li>
            <li id="removeWhitespaceSafely">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeWhitespaceSafely.xhtml">removeWhitespaceSafely()</a>
            </li>
            <li id="setCache">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setCache.xhtml">setCache()</a>
            </li>
            <li id="unregisterFoundToken"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/unregisterFoundToken.xhtml">unregisterFoundToken()</a>
                — Register token as found.</li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="applyTransformers">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/applyTransformers.xhtml">applyTransformers()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__clone"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/__clone.xhtml">__clone()</a>
                — Clone tokens collection.</li>
            <li id="clearAt">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearAt.xhtml">clearAt()</a>
            </li>
            <li id="clearCache"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearCache.xhtml">clearCache()</a>
                — Clear cache - one position or all of them.</li>
            <li id="clearChanged"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearChanged.xhtml">clearChanged()</a>
                — Clear internal flag if collection was changed and flag for all collection's items.</li>
            <li id="clearEmptyTokens"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearEmptyTokens.xhtml">clearEmptyTokens()</a>
                — Clear empty tokens.</li>
            <li id="clearRange"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearRange.xhtml">clearRange()</a>
                — Clear tokens in the given range.</li>
            <li id="clearTokenAndMergeSurroundingWhitespace">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/clearTokenAndMergeSurroundingWhitespace.xhtml">clearTokenAndMergeSurroundingWhitespace()</a>
            </li>
            <li id="countTokenKind">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/countTokenKind.xhtml">countTokenKind()</a>
            </li>
            <li id="detectBlockType"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/detectBlockType.xhtml">detectBlockType()</a>
                — Detect type of block.</li>
            <li id="ensureWhitespaceAtIndex"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/ensureWhitespaceAtIndex.xhtml">ensureWhitespaceAtIndex()</a>
                — Ensure that on given index is a whitespace with given kind.</li>
            <li id="findBlockEnd">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findBlockEnd.xhtml">findBlockEnd()</a>
            </li>
            <li id="findBlockStart">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findBlockStart.xhtml">findBlockStart()</a>
            </li>
            <li id="findGivenKind">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findGivenKind.xhtml">findGivenKind()</a>
            </li>
            <li id="findSequence"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/findSequence.xhtml">findSequence()</a>
                — Find a sequence of meaningful tokens and returns the array of their locations.</li>
            <li id="fromArray"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/fromArray.xhtml">fromArray()</a>
                — Create token collection from array.</li>
            <li id="fromCode"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/fromCode.xhtml">fromCode()</a>
                — Create token collection directly from code.</li>
            <li id="generateCode">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/generateCode.xhtml">generateCode()</a>
            </li>
            <li id="generatePartialCode"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/generatePartialCode.xhtml">generatePartialCode()</a>
                — Generate code from tokens between given indices.</li>
            <li id="getBlockEdgeDefinitions">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getBlockEdgeDefinitions.xhtml">getBlockEdgeDefinitions()</a>
            </li>
            <li id="getCodeHash"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getCodeHash.xhtml">getCodeHash()</a>
                — Get hash of code.</li>
            <li id="getMeaningfulTokenSibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getMeaningfulTokenSibling.xhtml">getMeaningfulTokenSibling()</a>
                — Get index for closest sibling token that is not a whitespace, comment or attribute.</li>
            <li id="getNextMeaningfulToken"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextMeaningfulToken.xhtml">getNextMeaningfulToken()</a>
                — Get index for closest next token that is not a whitespace or comment.</li>
            <li id="getNextNonWhitespace"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextNonWhitespace.xhtml">getNextNonWhitespace()</a>
                — Get index for closest next token which is non whitespace.</li>
            <li id="getNextTokenOfKind"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNextTokenOfKind.xhtml">getNextTokenOfKind()</a>
                — Get index for closest next token of given kind.</li>
            <li id="getNonEmptySibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNonEmptySibling.xhtml">getNonEmptySibling()</a>
                — Get index for closest sibling token which is not empty.</li>
            <li id="getNonWhitespaceSibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getNonWhitespaceSibling.xhtml">getNonWhitespaceSibling()</a>
                — Get index for closest sibling token which is non whitespace.</li>
            <li id="getPrevMeaningfulToken"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevMeaningfulToken.xhtml">getPrevMeaningfulToken()</a>
                — Get index for closest previous token that is not a whitespace or comment.</li>
            <li id="getPrevNonWhitespace"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevNonWhitespace.xhtml">getPrevNonWhitespace()</a>
                — Get index for closest previous token which is non whitespace.</li>
            <li id="getPrevTokenOfKind"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getPrevTokenOfKind.xhtml">getPrevTokenOfKind()</a>
                — Get index for closest previous token of given kind.</li>
            <li id="getTokenNotOfKindSibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKindSibling.xhtml">getTokenNotOfKindSibling()</a>
                — Get index for closest sibling token not of given kind.</li>
            <li id="getTokenNotOfKindsSibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenNotOfKindsSibling.xhtml">getTokenNotOfKindsSibling()</a>
                — Get index for closest sibling token not of given kind.</li>
            <li id="getTokenOfKindSibling"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/getTokenOfKindSibling.xhtml">getTokenOfKindSibling()</a>
                — Get index for closest sibling token of given kind.</li>
            <li id="hasAlternativeSyntax">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/hasAlternativeSyntax.xhtml">hasAlternativeSyntax()</a>
            </li>
            <li id="insertAt"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/insertAt.xhtml">insertAt()</a>
                — Insert instances of Token inside collection.</li>
            <li id="insertSlices"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/insertSlices.xhtml">insertSlices()</a>
                — Insert a slices or individual Tokens into multiple places in a single run.</li>
            <li id="isAllTokenKindsFound"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isAllTokenKindsFound.xhtml">isAllTokenKindsFound()</a>
                — Check if all token kinds given as argument are found.</li>
            <li id="isAnyTokenKindsFound"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isAnyTokenKindsFound.xhtml">isAnyTokenKindsFound()</a>
                — Check if any token kind given as argument is found.</li>
            <li id="isChanged"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isChanged.xhtml">isChanged()</a>
                — Check if collection was change: collection itself (like insert new tokens) or any of collection's elements.</li>
            <li id="isEmptyAt">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isEmptyAt.xhtml">isEmptyAt()</a>
            </li>
            <li id="isMonolithicPhp"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isMonolithicPhp.xhtml">isMonolithicPhp()</a>
                — Checks for monolithic PHP code.</li>
            <li id="isPartialCodeMultiline">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isPartialCodeMultiline.xhtml">isPartialCodeMultiline()</a>
            </li>
            <li id="isTokenKindFound"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/isTokenKindFound.xhtml">isTokenKindFound()</a>
                — Check if token kind given as argument is found.</li>
            <li id="offsetSet"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/offsetSet.xhtml">offsetSet()</a>
                — Set collection item.</li>
            <li id="offsetUnset"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/offsetUnset.xhtml">offsetUnset()</a>
                — Unset collection item.</li>
            <li id="overrideRange"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/overrideRange.xhtml">overrideRange()</a>
                — Override tokens at given range.</li>
            <li id="removeLeadingWhitespace">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeLeadingWhitespace.xhtml">removeLeadingWhitespace()</a>
            </li>
            <li id="removeTrailingWhitespace">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/removeTrailingWhitespace.xhtml">removeTrailingWhitespace()</a>
            </li>
            <li id="setCode"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setCode.xhtml">setCode()</a>
                — Set code. Clear all current content and replace it by new Token items generated from code directly.</li>
            <li id="setSize"><a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/setSize.xhtml">setSize()</a>
                — Set new size of collection.</li>
            <li id="toJson">
              <a title="PhpCsFixer\Tokenizer\Tokens" href="../classes/PhpCsFixer_Tokenizer_Tokens/toJson.xhtml">toJson()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="SplFixedArray" href="../classes/SplFixedArray.xhtml">SplFixedArray</a></h3>
          <h4>public</h4>
          <ul>
            <li id="__wakeup"><a title="SplFixedArray" href="../classes/SplFixedArray/__wakeup.xhtml">__wakeup()</a>
                — Reinitialises the array after being unserialised</li>
            <li id="count"><a title="SplFixedArray" href="../classes/SplFixedArray/count.xhtml">count()</a>
                — Returns the size of the array</li>
            <li id="current"><a title="SplFixedArray" href="../classes/SplFixedArray/current.xhtml">current()</a>
                — Return current array entry</li>
            <li id="fromArray"><a title="SplFixedArray" href="../classes/SplFixedArray/fromArray.xhtml">fromArray()</a>
                — Import a PHP array in a SplFixedArray instance</li>
            <li id="getSize"><a title="SplFixedArray" href="../classes/SplFixedArray/getSize.xhtml">getSize()</a>
                — Gets the size of the array</li>
            <li id="key"><a title="SplFixedArray" href="../classes/SplFixedArray/key.xhtml">key()</a>
                — Return current array index</li>
            <li id="next"><a title="SplFixedArray" href="../classes/SplFixedArray/next.xhtml">next()</a>
                — Move to next entry</li>
            <li id="offsetExists"><a title="SplFixedArray" href="../classes/SplFixedArray/offsetExists.xhtml">offsetExists()</a>
                — Returns whether the requested index exists</li>
            <li id="offsetGet"><a title="SplFixedArray" href="../classes/SplFixedArray/offsetGet.xhtml">offsetGet()</a>
                — Returns the value at the specified index</li>
            <li id="offsetSet"><a title="SplFixedArray" href="../classes/SplFixedArray/offsetSet.xhtml">offsetSet()</a>
                — Sets a new value at a specified index</li>
            <li id="offsetUnset"><a title="SplFixedArray" href="../classes/SplFixedArray/offsetUnset.xhtml">offsetUnset()</a>
                — Unsets the value at the specified $index</li>
            <li id="rewind"><a title="SplFixedArray" href="../classes/SplFixedArray/rewind.xhtml">rewind()</a>
                — Rewind iterator back to the start</li>
            <li id="setSize"><a title="SplFixedArray" href="../classes/SplFixedArray/setSize.xhtml">setSize()</a>
                — Change the size of an array</li>
            <li id="toArray"><a title="SplFixedArray" href="../classes/SplFixedArray/toArray.xhtml">toArray()</a>
                — Returns a PHP array from the fixed array</li>
            <li id="valid"><a title="SplFixedArray" href="../classes/SplFixedArray/valid.xhtml">valid()</a>
                — Check whether the array contains more elements</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
