<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PEAR_Installer</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">PEAR_Installer</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/sr/local/lib/php/PEAR/Installer.php.xhtml#line42">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>PEAR_Installer</h1>
        <h4>Administration class used to install PEAR packages and maintain the installed package database.</h4>
        <p/>
        <ul>
          <li>Author: Stig Bakken &lt;ssb@php.net&gt;</li>
          <li>Copyright: 1997-2009 The Authors</li>
          <li>License: http://opensource.org/licenses/bsd-license.php New BSD License</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class PEAR_Installer
                extends <a title="PEAR_Downloader" href="../classes/PEAR_Downloader.xhtml">PEAR_Downloader</a>
            {<br/><ul class="none"><li>// members</li><li>public  <a href="#members">$pkgdir</a>;
                    </li><li>public  <a href="#members">$phpdir</a>;
                    </li><li>public  <a href="#members">$extdir</a>;
                    </li><li>public  <a href="#members">$docdir</a>;
                    </li><li>public string <a href="#members">$installroot</a> =
                        '';
                    </li><li>public integer <a href="#members">$debug</a> =
                        1;
                    </li><li>public  <a href="#members">$tmpdir</a>;
                    </li><li>public <span title="PEAR_Registry">PEAR_Registry</span> <a href="#members">$registry</a>;
                    </li><li>public  <a href="#members">$_downloadedPackages</a>;
                    </li><li>public array <a href="#members">$file_operations</a> =
                        ;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="PEAR_Downloader">PEAR_Downloader</span></li><li>public <span title="PEAR_Registry">PEAR_Registry</span> <a href="#members">$_registry</a>;
                        </li><li>public <span title="string|null">string|null</span> <a href="#members">$_preferredState</a>;
                        </li><li>public  <a href="#members">$_options</a>;
                        </li><li>public array <a href="#members">$_downloadedPackages</a>;
                        </li><li>public array <a href="#members">$_toDownload</a>;
                        </li><li>public array <a href="#members">$_installed</a>;
                        </li><li>public array <a href="#members">$_errorStack</a>;
                        </li><li>public boolean <a href="#members">$_internalDownload</a>;
                        </li><li>public  <a href="#members">$_packageSortTree</a>;
                        </li><li>public  <a href="#members">$_downloadDir</a>;
                        </li><li>protected static array <a href="#members">$bivalentMethods</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="PEAR_Common">PEAR_Common</span></li><li>public <span title=""/> <a href="#members">$ui</a>;
                        </li><li>public <span title="PEAR_Config">PEAR_Config</span> <a href="#members">$config</a>;
                        </li><li>public array <a href="#members">$element_stack</a>;
                        </li><li>public  <a href="#members">$current_element</a>;
                        </li><li>public array <a href="#members">$current_attributes</a>;
                        </li><li>public array <a href="#members">$pkginfo</a>;
                        </li><li>public  <a href="#members">$current_path</a>;
                        </li><li>public  <a href="#members">$_validPackageFile</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="PEAR">PEAR</span></li><li>public <span title="bool">bool</span> <a href="#members">$_debug</a>;
                        </li><li>public  <a href="#members">$_default_error_mode</a>;
                        </li><li>public  <a href="#members">$_default_error_options</a>;
                        </li><li>public string <a href="#members">$_default_error_handler</a>;
                        </li><li>public string <a href="#members">$_error_class</a>;
                        </li><li>public array <a href="#members">$_expected_errors</a>;
                        </li><li>protected static array <a href="#members">$bivalentMethods</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/setOptions.xhtml">setOptions</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/setConfig.xhtml">setConfig</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_removeBackups.xhtml">_removeBackups</a>()
                    </li><li>public bool <a title="PEAR_Installer" href="../classes/PEAR_Installer/_deletePackageFiles.xhtml">_deletePackageFiles</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_installFile.xhtml">_installFile</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_installFile2.xhtml">_installFile2</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/addFileOperation.xhtml">addFileOperation</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/startFileTransaction.xhtml">startFileTransaction</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/commitFileTransaction.xhtml">commitFileTransaction</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/rollbackFileTransaction.xhtml">rollbackFileTransaction</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/mkDirHier.xhtml">mkDirHier</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_parsePackageXml.xhtml">_parsePackageXml</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/setDownloadedPackages.xhtml">setDownloadedPackages</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/setUninstallPackages.xhtml">setUninstallPackages</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/getInstallPackages.xhtml">getInstallPackages</a>()
                    </li><li>public array|PEAR_Error <a title="PEAR_Installer" href="../classes/PEAR_Installer/install.xhtml">install</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_compileSourceFiles.xhtml">_compileSourceFiles</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/getUninstallPackages.xhtml">getUninstallPackages</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/uninstall.xhtml">uninstall</a>()
                    </li><li>public array|PEAR_Error <a title="PEAR_Installer" href="../classes/PEAR_Installer/sortPackagesForUninstall.xhtml">sortPackagesForUninstall</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_sortUninstall.xhtml">_sortUninstall</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_sortDirs.xhtml">_sortDirs</a>()
                    </li><li>public void <a title="PEAR_Installer" href="../classes/PEAR_Installer/_buildCallback.xhtml">_buildCallback</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="PEAR_Downloader">PEAR_Downloader</span></li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/__construct.xhtml">__construct</a>()
                        </li><li>public boolean <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/discover.xhtml">discover</a>()
                        </li><li>public PEAR_Downloader_Package <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/newDownloaderPackage.xhtml">newDownloaderPackage</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDependency2Object.xhtml">getDependency2Object</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/download.xhtml">download</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/analyzeDependencies.xhtml">analyzeDependencies</a>()
                        </li><li>public string <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDownloadDir.xhtml">getDownloadDir</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/setDownloadDir.xhtml">setDownloadDir</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/configSet.xhtml">configSet</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/setOptions.xhtml">setOptions</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getOptions.xhtml">getOptions</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_getPackageDownloadUrl.xhtml">_getPackageDownloadUrl</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_getDepPackageDownloadUrl.xhtml">_getDepPackageDownloadUrl</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getPackageDownloadUrl.xhtml">getPackageDownloadUrl</a>()
                        </li><li>public array <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDownloadedPackages.xhtml">getDownloadedPackages</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_downloadCallback.xhtml">_downloadCallback</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_prependPath.xhtml">_prependPath</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/pushError.xhtml">pushError</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getErrorMsgs.xhtml">getErrorMsgs</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/sortPkgDeps.xhtml">sortPkgDeps</a>()
                        </li><li>public array <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/sortPackagesForInstall.xhtml">sortPackagesForInstall</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_detectDepCycle.xhtml">_detectDepCycle</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_testCycle.xhtml">_testCycle</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_setupGraph.xhtml">_setupGraph</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_dependsOn.xhtml">_dependsOn</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_checkDepTree.xhtml">_checkDepTree</a>()
                        </li><li>public void <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_sortInstall.xhtml">_sortInstall</a>()
                        </li><li>public static mixed <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_downloadHttp.xhtml">_downloadHttp</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="PEAR_Common">PEAR_Common</span></li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/_PEAR_Common.xhtml">_PEAR_Common</a>()
                        </li><li>public static void <a title="PEAR_Common" href="../classes/PEAR_Common/addTempFile.xhtml">addTempFile</a>()
                        </li><li>public bool <a title="PEAR_Common" href="../classes/PEAR_Common/mkDirHier.xhtml">mkDirHier</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/log.xhtml">log</a>()
                        </li><li>public string <a title="PEAR_Common" href="../classes/PEAR_Common/mkTempDir.xhtml">mkTempDir</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/setFrontendObject.xhtml">setFrontendObject</a>()
                        </li><li>public static false|array <a title="PEAR_Common" href="../classes/PEAR_Common/betterStates.xhtml">betterStates</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getUserRoles.xhtml">getUserRoles</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getReleaseStates.xhtml">getReleaseStates</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getDependencyTypes.xhtml">getDependencyTypes</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getDependencyRelations.xhtml">getDependencyRelations</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getFileRoles.xhtml">getFileRoles</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getReplacementTypes.xhtml">getReplacementTypes</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getProvideTypes.xhtml">getProvideTypes</a>()
                        </li><li>public static array <a title="PEAR_Common" href="../classes/PEAR_Common/getScriptPhases.xhtml">getScriptPhases</a>()
                        </li><li>public bool <a title="PEAR_Common" href="../classes/PEAR_Common/validPackageName.xhtml">validPackageName</a>()
                        </li><li>public bool <a title="PEAR_Common" href="../classes/PEAR_Common/validPackageVersion.xhtml">validPackageVersion</a>()
                        </li><li>public static boolean <a title="PEAR_Common" href="../classes/PEAR_Common/isIncludeable.xhtml">isIncludeable</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/_postProcessChecks.xhtml">_postProcessChecks</a>()
                        </li><li>public array <a title="PEAR_Common" href="../classes/PEAR_Common/infoFromTgzFile.xhtml">infoFromTgzFile</a>()
                        </li><li>public array <a title="PEAR_Common" href="../classes/PEAR_Common/infoFromDescriptionFile.xhtml">infoFromDescriptionFile</a>()
                        </li><li>public array <a title="PEAR_Common" href="../classes/PEAR_Common/infoFromString.xhtml">infoFromString</a>()
                        </li><li>public array <a title="PEAR_Common" href="../classes/PEAR_Common/_postProcessValidPackagexml.xhtml">_postProcessValidPackagexml</a>()
                        </li><li>public string <a title="PEAR_Common" href="../classes/PEAR_Common/infoFromAny.xhtml">infoFromAny</a>()
                        </li><li>public string <a title="PEAR_Common" href="../classes/PEAR_Common/xmlFromInfo.xhtml">xmlFromInfo</a>()
                        </li><li>public boolean <a title="PEAR_Common" href="../classes/PEAR_Common/validatePackageInfo.xhtml">validatePackageInfo</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/buildProvidesArray.xhtml">buildProvidesArray</a>()
                        </li><li>public static mixed <a title="PEAR_Common" href="../classes/PEAR_Common/analyzeSourceCode.xhtml">analyzeSourceCode</a>()
                        </li><li>public void <a title="PEAR_Common" href="../classes/PEAR_Common/detectDependencies.xhtml">detectDependencies</a>()
                        </li><li>public mixed <a title="PEAR_Common" href="../classes/PEAR_Common/downloadHttp.xhtml">downloadHttp</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="PEAR">PEAR</span></li><li>public void <a title="PEAR" href="../classes/PEAR/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/PEAR.xhtml">PEAR</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/_PEAR.xhtml">_PEAR</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/__call.xhtml">__call</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/__callStatic.xhtml">__callStatic</a>()
                        </li><li>public static mixed <a title="PEAR" href="../classes/PEAR/getStaticProperty.xhtml">getStaticProperty</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/registerShutdownFunc.xhtml">registerShutdownFunc</a>()
                        </li><li>public static bool <a title="PEAR" href="../classes/PEAR/isError.xhtml">isError</a>()
                        </li><li>protected static void <a title="PEAR" href="../classes/PEAR/_setErrorHandling.xhtml">_setErrorHandling</a>()
                        </li><li>public int <a title="PEAR" href="../classes/PEAR/expectError.xhtml">expectError</a>()
                        </li><li>public array <a title="PEAR" href="../classes/PEAR/popExpect.xhtml">popExpect</a>()
                        </li><li>public bool <a title="PEAR" href="../classes/PEAR/_checkDelExpect.xhtml">_checkDelExpect</a>()
                        </li><li>public mixed <a title="PEAR" href="../classes/PEAR/delExpect.xhtml">delExpect</a>()
                        </li><li>protected static  <a title="PEAR" href="../classes/PEAR/_raiseError.xhtml">_raiseError</a>()
                        </li><li>protected static  <a title="PEAR" href="../classes/PEAR/_throwError.xhtml">_throwError</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/staticPushErrorHandling.xhtml">staticPushErrorHandling</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/staticPopErrorHandling.xhtml">staticPopErrorHandling</a>()
                        </li><li>protected static bool <a title="PEAR" href="../classes/PEAR/_pushErrorHandling.xhtml">_pushErrorHandling</a>()
                        </li><li>protected static bool <a title="PEAR" href="../classes/PEAR/_popErrorHandling.xhtml">_popErrorHandling</a>()
                        </li><li>public static bool <a title="PEAR" href="../classes/PEAR/loadExtension.xhtml">loadExtension</a>()
                        </li><li>public static int <a title="PEAR" href="../classes/PEAR/getSourceDateEpoch.xhtml">getSourceDateEpoch</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader.xhtml">PEAR_Downloader</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="bivalentMethods"><strong>$bivalentMethods</strong>
                —
                array<br/><span class="indent">List of methods that can be called both statically and non-statically.</span></li>
            <li id="bivalentMethods"><strong>$bivalentMethods</strong>
                —
                array<br/><span class="indent">List of methods that can be called both statically and non-statically.</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="_debug"><strong>$_debug</strong>
                —
                <a title="bool" href="../classes/bool.xhtml">bool</a><br/><span class="indent">Whether to enable internal debug messages.</span></li>
            <li id="_default_error_handler"><strong>$_default_error_handler</strong>
                —
                string<br/><span class="indent">Default error handler (callback) for this object, if error mode is PEAR_ERROR_CALLBACK.</span></li>
            <li id="_default_error_mode"><strong>$_default_error_mode</strong>
                —
                int<br/><span class="indent">Default error mode for this object.</span></li>
            <li id="_default_error_options"><strong>$_default_error_options</strong>
                —
                int<br/><span class="indent">Default error options used for this object when error mode is PEAR_ERROR_TRIGGER.</span></li>
            <li id="_downloadDir"><strong>$_downloadDir</strong>
                —
                string<br/><span class="indent">Temporary directory, or configuration value where downloads will occur</span></li>
            <li id="_downloadedPackages"><strong>$_downloadedPackages</strong>
                —
                array<br/><span class="indent">array of PEAR_Downloader_Packages</span></li>
            <li id="_downloadedPackages"><strong>$_downloadedPackages</strong>
                —
                array<br/><span class="indent">Downloaded Packages after a call to download().</span></li>
            <li id="_errorStack"><strong>$_errorStack</strong>
                —
                array</li>
            <li id="_error_class"><strong>$_error_class</strong>
                —
                string<br/><span class="indent">Which class to use for error objects.</span></li>
            <li id="_expected_errors"><strong>$_expected_errors</strong>
                —
                array<br/><span class="indent">An array of expected errors.</span></li>
            <li id="_installed"><strong>$_installed</strong>
                —
                array<br/><span class="indent">Array of every package installed, with names lower-cased.</span></li>
            <li id="_internalDownload"><strong>$_internalDownload</strong>
                —
                boolean</li>
            <li id="_options"><strong>$_options</strong>
                —
                array<br/><span class="indent">Options from command-line passed to Install.</span></li>
            <li id="_packageSortTree"><strong>$_packageSortTree</strong>
                —
                array<br/><span class="indent">Temporary variable used in sorting packages by dependency in {@link sortPkgDeps()}</span></li>
            <li id="_preferredState"><strong>$_preferredState</strong>
                —
                <a title="string|null" href="../classes/string|null.xhtml">string|null</a><br/><span class="indent">Preferred Installation State (snapshot, devel, alpha, beta, stable)</span></li>
            <li id="_registry"><strong>$_registry</strong>
                —
                <a title="PEAR_Registry" href="../classes/PEAR_Registry.xhtml">PEAR_Registry</a></li>
            <li id="_toDownload"><strong>$_toDownload</strong>
                —
                array<br/><span class="indent">Packages slated for download.</span></li>
            <li id="_validPackageFile"><strong>$_validPackageFile</strong>
                —
                boolean<br/><span class="indent">Flag variable used to mark a valid package file</span></li>
            <li id="config"><strong>$config</strong>
                —
                <a title="PEAR_Config" href="../classes/PEAR_Config.xhtml">PEAR_Config</a><br/><span class="indent">Configuration object (PEAR_Config).</span></li>
            <li id="current_attributes">
              <strong>$current_attributes</strong>
              <br/>
              <span class="indent">array of attributes of the currently parsed XML element</span>
            </li>
            <li id="current_element">
              <strong>$current_element</strong>
              <br/>
              <span class="indent">name of currently parsed XML element</span>
            </li>
            <li id="current_path">
              <strong>$current_path</strong>
            </li>
            <li id="debug"><strong>$debug</strong>
                —
                int<br/><span class="indent">debug level</span></li>
            <li id="docdir"><strong>$docdir</strong>
                —
                string<br/><span class="indent">directory where documentation goes</span></li>
            <li id="element_stack">
              <strong>$element_stack</strong>
              <br/>
              <span class="indent">stack of elements, gives some sort of XML context</span>
            </li>
            <li id="extdir"><strong>$extdir</strong>
                —
                string<br/><span class="indent">directory where PHP extension files go</span></li>
            <li id="file_operations"><strong>$file_operations</strong>
                —
                array<br/><span class="indent">List of file transactions queued for an install/upgrade/uninstall.</span></li>
            <li id="installroot"><strong>$installroot</strong>
                —
                string<br/><span class="indent">installation root directory (ala PHP's INSTALL_ROOT or automake's DESTDIR</span></li>
            <li id="phpdir"><strong>$phpdir</strong>
                —
                string<br/><span class="indent">directory where PHP code files go</span></li>
            <li id="pkgdir"><strong>$pkgdir</strong>
                —
                string<br/><span class="indent">name of the package directory, for example Foo-1.0</span></li>
            <li id="pkginfo">
              <strong>$pkginfo</strong>
              <br/>
              <span class="indent">assoc with information about a package</span>
            </li>
            <li id="registry"><strong>$registry</strong>
                —
                <a title="PEAR_Registry" href="../classes/PEAR_Registry.xhtml">PEAR_Registry</a><br/><span class="indent">PEAR_Registry object used by the installer</span></li>
            <li id="tmpdir"><strong>$tmpdir</strong>
                —
                string<br/><span class="indent">temporary directory</span></li>
            <li id="ui"><strong>$ui</strong>
                —
                <a title="" href="../classes/.xhtml"/><br/><span class="indent">User Interface object (PEAR_Frontend_* class).  If null, the log() method uses print.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="PEAR_Installer" href="../classes/PEAR_Installer/__construct.xhtml">__construct()</a>
                — PEAR_Installer constructor.</li>
            <li id="_buildCallback">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_buildCallback.xhtml">_buildCallback()</a>
            </li>
            <li id="_compileSourceFiles">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_compileSourceFiles.xhtml">_compileSourceFiles()</a>
            </li>
            <li id="_deletePackageFiles"><a title="PEAR_Installer" href="../classes/PEAR_Installer/_deletePackageFiles.xhtml">_deletePackageFiles()</a>
                — Delete a package's installed files, does not remove empty directories.</li>
            <li id="_installFile">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_installFile.xhtml">_installFile()</a>
            </li>
            <li id="_installFile2">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_installFile2.xhtml">_installFile2()</a>
            </li>
            <li id="_parsePackageXml">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_parsePackageXml.xhtml">_parsePackageXml()</a>
            </li>
            <li id="_removeBackups">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_removeBackups.xhtml">_removeBackups()</a>
            </li>
            <li id="_sortDirs">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_sortDirs.xhtml">_sortDirs()</a>
            </li>
            <li id="_sortUninstall">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/_sortUninstall.xhtml">_sortUninstall()</a>
            </li>
            <li id="addFileOperation"><a title="PEAR_Installer" href="../classes/PEAR_Installer/addFileOperation.xhtml">addFileOperation()</a>
                — Add a file operation to the current file transaction.</li>
            <li id="commitFileTransaction">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/commitFileTransaction.xhtml">commitFileTransaction()</a>
            </li>
            <li id="getInstallPackages">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/getInstallPackages.xhtml">getInstallPackages()</a>
            </li>
            <li id="getUninstallPackages">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/getUninstallPackages.xhtml">getUninstallPackages()</a>
            </li>
            <li id="install"><a title="PEAR_Installer" href="../classes/PEAR_Installer/install.xhtml">install()</a>
                — Installs the files within the package file specified.</li>
            <li id="mkDirHier">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/mkDirHier.xhtml">mkDirHier()</a>
            </li>
            <li id="rollbackFileTransaction">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/rollbackFileTransaction.xhtml">rollbackFileTransaction()</a>
            </li>
            <li id="setConfig">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/setConfig.xhtml">setConfig()</a>
            </li>
            <li id="setDownloadedPackages"><a title="PEAR_Installer" href="../classes/PEAR_Installer/setDownloadedPackages.xhtml">setDownloadedPackages()</a>
                — Set the list of PEAR_Downloader_Package objects to allow more sane dependency validation</li>
            <li id="setOptions">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/setOptions.xhtml">setOptions()</a>
            </li>
            <li id="setUninstallPackages"><a title="PEAR_Installer" href="../classes/PEAR_Installer/setUninstallPackages.xhtml">setUninstallPackages()</a>
                — Set the list of PEAR_Downloader_Package objects to allow more sane dependency validation</li>
            <li id="sortPackagesForUninstall"><a title="PEAR_Installer" href="../classes/PEAR_Installer/sortPackagesForUninstall.xhtml">sortPackagesForUninstall()</a>
                — Sort a list of arrays of array(downloaded packagefilename) by dependency.</li>
            <li id="startFileTransaction">
              <a title="PEAR_Installer" href="../classes/PEAR_Installer/startFileTransaction.xhtml">startFileTransaction()</a>
            </li>
            <li id="uninstall"><a title="PEAR_Installer" href="../classes/PEAR_Installer/uninstall.xhtml">uninstall()</a>
                — Uninstall a package</li>
          </ul>
          <h3>Inherited from <a title="PEAR_Downloader" href="../classes/PEAR_Downloader.xhtml">PEAR_Downloader</a></h3>
          <h4>public</h4>
          <ul>
            <li id="_checkDepTree">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_checkDepTree.xhtml">_checkDepTree()</a>
            </li>
            <li id="_dependsOn">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_dependsOn.xhtml">_dependsOn()</a>
            </li>
            <li id="_detectDepCycle"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_detectDepCycle.xhtml">_detectDepCycle()</a>
                — Detect recursive links between dependencies and break the cycles</li>
            <li id="_downloadCallback">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_downloadCallback.xhtml">_downloadCallback()</a>
            </li>
            <li id="_downloadHttp"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_downloadHttp.xhtml">_downloadHttp()</a>
                — Download a file through HTTP.  Considers suggested file name in Content-disposition: header and can run a callback function for different events.  The callback will be called with two parameters: the callback type, and parameters.  The implemented callback types are:</li>
            <li id="_getDepPackageDownloadUrl">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_getDepPackageDownloadUrl.xhtml">_getDepPackageDownloadUrl()</a>
            </li>
            <li id="_getPackageDownloadUrl">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_getPackageDownloadUrl.xhtml">_getPackageDownloadUrl()</a>
            </li>
            <li id="_prependPath">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_prependPath.xhtml">_prependPath()</a>
            </li>
            <li id="_setupGraph"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_setupGraph.xhtml">_setupGraph()</a>
                — Set up the dependency for installation parsing</li>
            <li id="_sortInstall">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_sortInstall.xhtml">_sortInstall()</a>
            </li>
            <li id="_testCycle">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/_testCycle.xhtml">_testCycle()</a>
            </li>
            <li id="analyzeDependencies">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/analyzeDependencies.xhtml">analyzeDependencies()</a>
            </li>
            <li id="configSet">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/configSet.xhtml">configSet()</a>
            </li>
            <li id="discover"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/discover.xhtml">discover()</a>
                — Attempt to discover a channel's remote capabilities from its server name</li>
            <li id="download">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/download.xhtml">download()</a>
            </li>
            <li id="getDependency2Object"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDependency2Object.xhtml">getDependency2Object()</a>
                — For simpler unit-testing</li>
            <li id="getDownloadDir"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDownloadDir.xhtml">getDownloadDir()</a>
                — Retrieve the directory that downloads will happen in</li>
            <li id="getDownloadedPackages"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getDownloadedPackages.xhtml">getDownloadedPackages()</a>
                — Retrieve a list of downloaded packages after a call to {@link download()}.</li>
            <li id="getErrorMsgs">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getErrorMsgs.xhtml">getErrorMsgs()</a>
            </li>
            <li id="getOptions">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getOptions.xhtml">getOptions()</a>
            </li>
            <li id="getPackageDownloadUrl">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/getPackageDownloadUrl.xhtml">getPackageDownloadUrl()</a>
            </li>
            <li id="newDownloaderPackage"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/newDownloaderPackage.xhtml">newDownloaderPackage()</a>
                — For simpler unit-testing</li>
            <li id="pushError">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/pushError.xhtml">pushError()</a>
            </li>
            <li id="setDownloadDir">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/setDownloadDir.xhtml">setDownloadDir()</a>
            </li>
            <li id="setOptions">
              <a title="PEAR_Downloader" href="../classes/PEAR_Downloader/setOptions.xhtml">setOptions()</a>
            </li>
            <li id="sortPackagesForInstall"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/sortPackagesForInstall.xhtml">sortPackagesForInstall()</a>
                — Sort a list of arrays of array(downloaded packagefilename) by dependency.</li>
            <li id="sortPkgDeps"><a title="PEAR_Downloader" href="../classes/PEAR_Downloader/sortPkgDeps.xhtml">sortPkgDeps()</a>
                — for BC</li>
          </ul>
          <h3>Inherited from <a title="PEAR_Common" href="../classes/PEAR_Common.xhtml">PEAR_Common</a></h3>
          <h4>public</h4>
          <ul>
            <li id="_PEAR_Common"><a title="PEAR_Common" href="../classes/PEAR_Common/_PEAR_Common.xhtml">_PEAR_Common()</a>
                — PEAR_Common destructor</li>
            <li id="_postProcessChecks">
              <a title="PEAR_Common" href="../classes/PEAR_Common/_postProcessChecks.xhtml">_postProcessChecks()</a>
            </li>
            <li id="_postProcessValidPackagexml">
              <a title="PEAR_Common" href="../classes/PEAR_Common/_postProcessValidPackagexml.xhtml">_postProcessValidPackagexml()</a>
            </li>
            <li id="addTempFile"><a title="PEAR_Common" href="../classes/PEAR_Common/addTempFile.xhtml">addTempFile()</a>
                — Register a temporary file or directory.  When the destructor is executed, all registered temporary files and directories are removed.</li>
            <li id="analyzeSourceCode"><a title="PEAR_Common" href="../classes/PEAR_Common/analyzeSourceCode.xhtml">analyzeSourceCode()</a>
                — Analyze the source code of the given PHP file</li>
            <li id="betterStates"><a title="PEAR_Common" href="../classes/PEAR_Common/betterStates.xhtml">betterStates()</a>
                — Return an array containing all of the states that are more stable than or equal to the passed in state</li>
            <li id="buildProvidesArray"><a title="PEAR_Common" href="../classes/PEAR_Common/buildProvidesArray.xhtml">buildProvidesArray()</a>
                — Build a "provides" array from data returned by analyzeSourceCode().  The format of the built array is like this:</li>
            <li id="detectDependencies">
              <a title="PEAR_Common" href="../classes/PEAR_Common/detectDependencies.xhtml">detectDependencies()</a>
            </li>
            <li id="downloadHttp"><a title="PEAR_Common" href="../classes/PEAR_Common/downloadHttp.xhtml">downloadHttp()</a>
                — Download a file through HTTP.  Considers suggested file name in Content-disposition: header and can run a callback function for different events.  The callback will be called with two parameters: the callback type, and parameters.  The implemented callback types are:</li>
            <li id="getDependencyRelations"><a title="PEAR_Common" href="../classes/PEAR_Common/getDependencyRelations.xhtml">getDependencyRelations()</a>
                — Get the implemented dependency relations (has, lt, ge etc.)</li>
            <li id="getDependencyTypes"><a title="PEAR_Common" href="../classes/PEAR_Common/getDependencyTypes.xhtml">getDependencyTypes()</a>
                — Get the implemented dependency types (php, ext, pkg etc.)</li>
            <li id="getFileRoles"><a title="PEAR_Common" href="../classes/PEAR_Common/getFileRoles.xhtml">getFileRoles()</a>
                — Get the implemented file roles</li>
            <li id="getProvideTypes"><a title="PEAR_Common" href="../classes/PEAR_Common/getProvideTypes.xhtml">getProvideTypes()</a>
                — Get the implemented file replacement types in</li>
            <li id="getReleaseStates"><a title="PEAR_Common" href="../classes/PEAR_Common/getReleaseStates.xhtml">getReleaseStates()</a>
                — Get the valid package release states of packages</li>
            <li id="getReplacementTypes"><a title="PEAR_Common" href="../classes/PEAR_Common/getReplacementTypes.xhtml">getReplacementTypes()</a>
                — Get the implemented file replacement types in</li>
            <li id="getScriptPhases"><a title="PEAR_Common" href="../classes/PEAR_Common/getScriptPhases.xhtml">getScriptPhases()</a>
                — Get the implemented file replacement types in</li>
            <li id="getUserRoles"><a title="PEAR_Common" href="../classes/PEAR_Common/getUserRoles.xhtml">getUserRoles()</a>
                — Get the valid roles for a PEAR package maintainer</li>
            <li id="infoFromAny"><a title="PEAR_Common" href="../classes/PEAR_Common/infoFromAny.xhtml">infoFromAny()</a>
                — Returns package information from different sources</li>
            <li id="infoFromDescriptionFile"><a title="PEAR_Common" href="../classes/PEAR_Common/infoFromDescriptionFile.xhtml">infoFromDescriptionFile()</a>
                — Returns information about a package file.  Expects the name of a package xml file as input.</li>
            <li id="infoFromString"><a title="PEAR_Common" href="../classes/PEAR_Common/infoFromString.xhtml">infoFromString()</a>
                — Returns information about a package file.  Expects the contents of a package xml file as input.</li>
            <li id="infoFromTgzFile"><a title="PEAR_Common" href="../classes/PEAR_Common/infoFromTgzFile.xhtml">infoFromTgzFile()</a>
                — Returns information about a package file.  Expects the name of a gzipped tar file as input.</li>
            <li id="isIncludeable">
              <a title="PEAR_Common" href="../classes/PEAR_Common/isIncludeable.xhtml">isIncludeable()</a>
            </li>
            <li id="log"><a title="PEAR_Common" href="../classes/PEAR_Common/log.xhtml">log()</a>
                — Logging method.</li>
            <li id="mkDirHier"><a title="PEAR_Common" href="../classes/PEAR_Common/mkDirHier.xhtml">mkDirHier()</a>
                — Wrapper to System::mkDir(), creates a directory as well as any necessary parent directories.</li>
            <li id="mkTempDir"><a title="PEAR_Common" href="../classes/PEAR_Common/mkTempDir.xhtml">mkTempDir()</a>
                — Create and register a temporary directory.</li>
            <li id="setFrontendObject"><a title="PEAR_Common" href="../classes/PEAR_Common/setFrontendObject.xhtml">setFrontendObject()</a>
                — Set object that represents the frontend to be used.</li>
            <li id="validPackageName"><a title="PEAR_Common" href="../classes/PEAR_Common/validPackageName.xhtml">validPackageName()</a>
                — Test whether a string contains a valid package name.</li>
            <li id="validPackageVersion"><a title="PEAR_Common" href="../classes/PEAR_Common/validPackageVersion.xhtml">validPackageVersion()</a>
                — Test whether a string contains a valid package version.</li>
            <li id="validatePackageInfo"><a title="PEAR_Common" href="../classes/PEAR_Common/validatePackageInfo.xhtml">validatePackageInfo()</a>
                — Validate XML package definition file.</li>
            <li id="xmlFromInfo"><a title="PEAR_Common" href="../classes/PEAR_Common/xmlFromInfo.xhtml">xmlFromInfo()</a>
                — Return an XML document based on the package info (as returned by the PEAR_Common::infoFrom* methods).</li>
          </ul>
          <h3>Inherited from <a title="PEAR" href="../classes/PEAR.xhtml">PEAR</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="_popErrorHandling"><a title="PEAR" href="../classes/PEAR/_popErrorHandling.xhtml">_popErrorHandling()</a>
                — Pop the last error handler used</li>
            <li id="_pushErrorHandling"><a title="PEAR" href="../classes/PEAR/_pushErrorHandling.xhtml">_pushErrorHandling()</a>
                — Push a new error handler on top of the error handler options stack. With this you can easily override the actual error handler for some code and restore it later with popErrorHandling.</li>
            <li id="_raiseError"><a title="PEAR" href="../classes/PEAR/_raiseError.xhtml">_raiseError()</a>
                — This method is a wrapper that returns an instance of the configured error class with this object's default error handling applied.  If the $mode and $options parameters are not specified, the object's defaults are used.</li>
            <li id="_setErrorHandling"><a title="PEAR" href="../classes/PEAR/_setErrorHandling.xhtml">_setErrorHandling()</a>
                — Sets how errors generated by this object should be handled.</li>
            <li id="_throwError"><a title="PEAR" href="../classes/PEAR/_throwError.xhtml">_throwError()</a>
                — Simpler form of raiseError with fewer options.  In most cases message, code and userinfo are enough.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="PEAR"><a title="PEAR" href="../classes/PEAR/PEAR.xhtml">PEAR()</a>
                — Only here for backwards compatibility.</li>
            <li id="_PEAR"><a title="PEAR" href="../classes/PEAR/_PEAR.xhtml">_PEAR()</a>
                — Destructor (the emulated type of...).  Does nothing right now, but is included for forward compatibility, so subclass destructors should always call it.</li>
            <li id="__call">
              <a title="PEAR" href="../classes/PEAR/__call.xhtml">__call()</a>
            </li>
            <li id="__callStatic">
              <a title="PEAR" href="../classes/PEAR/__callStatic.xhtml">__callStatic()</a>
            </li>
            <li id="_checkDelExpect"><a title="PEAR" href="../classes/PEAR/_checkDelExpect.xhtml">_checkDelExpect()</a>
                — This method checks unsets an error code if available</li>
            <li id="delExpect"><a title="PEAR" href="../classes/PEAR/delExpect.xhtml">delExpect()</a>
                — This method deletes all occurrences of the specified element from the expected error codes stack.</li>
            <li id="expectError"><a title="PEAR" href="../classes/PEAR/expectError.xhtml">expectError()</a>
                — This method is used to tell which errors you expect to get.</li>
            <li id="getSourceDateEpoch"><a title="PEAR" href="../classes/PEAR/getSourceDateEpoch.xhtml">getSourceDateEpoch()</a>
                — Get SOURCE_DATE_EPOCH environment variable See https://reproducible-builds.org/specs/source-date-epoch/</li>
            <li id="getStaticProperty"><a title="PEAR" href="../classes/PEAR/getStaticProperty.xhtml">getStaticProperty()</a>
                — If you have a class that's mostly/entirely static, and you need static properties, you can use this method to simulate them. Eg. in your method(s) do this: $myVar = &amp;PEAR::getStaticProperty('myclass', 'myVar'); You MUST use a reference, or they will not persist!</li>
            <li id="isError"><a title="PEAR" href="../classes/PEAR/isError.xhtml">isError()</a>
                — Tell whether a value is a PEAR error.</li>
            <li id="loadExtension"><a title="PEAR" href="../classes/PEAR/loadExtension.xhtml">loadExtension()</a>
                — OS independent PHP extension load. Remember to take care on the correct extension name for case sensitive OSes.</li>
            <li id="popExpect"><a title="PEAR" href="../classes/PEAR/popExpect.xhtml">popExpect()</a>
                — This method pops one element off the expected error codes stack.</li>
            <li id="registerShutdownFunc"><a title="PEAR" href="../classes/PEAR/registerShutdownFunc.xhtml">registerShutdownFunc()</a>
                — Use this function to register a shutdown method for static classes.</li>
            <li id="staticPopErrorHandling">
              <a title="PEAR" href="../classes/PEAR/staticPopErrorHandling.xhtml">staticPopErrorHandling()</a>
            </li>
            <li id="staticPushErrorHandling">
              <a title="PEAR" href="../classes/PEAR/staticPushErrorHandling.xhtml">staticPushErrorHandling()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
