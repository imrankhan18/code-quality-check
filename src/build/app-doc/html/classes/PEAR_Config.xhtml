<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PEAR_Config</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">PEAR_Config</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/sr/local/lib/php/PEAR/Config.php.xhtml#line271">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>PEAR_Config</h1>
        <h4>This is a class for storing configuration data, keeping track of which are system-defined, user-defined or defaulted.</h4>
        <p/>
        <ul>
          <li>Author: Stig Bakken &lt;ssb@php.net&gt;</li>
          <li>Copyright: 1997-2009 The Authors</li>
          <li>License: http://opensource.org/licenses/bsd-license.php New BSD License</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class PEAR_Config
                extends <a title="PEAR" href="../classes/PEAR.xhtml">PEAR</a>
            {<br/><ul class="none"><li>// members</li><li>public array <a href="#members">$files</a> =
                        ;
                    </li><li>public array <a href="#members">$layers</a> =
                        ;
                    </li><li>public array <a href="#members">$configuration</a> =
                        ;
                    </li><li>public array <a href="#members">$_channelConfigInfo</a> =
                        ;
                    </li><li>public array <a href="#members">$_channels</a> =
                        ;
                    </li><li>public <span title="string|false">string|false</span> <a href="#members">$_installRoot</a> =
                        false;
                    </li><li>public <span title="PEAR_Registry">PEAR_Registry</span> <a href="#members">$_registry</a> =
                        ;
                    </li><li>public array <a href="#members">$_regInitialized</a> =
                        ;
                    </li><li>public <span title="bool">bool</span> <a href="#members">$_noRegistry</a> =
                        false;
                    </li><li>public integer <a href="#members">$_errorsFound</a> =
                        0;
                    </li><li>public  <a href="#members">$_lastError</a> =
                        NULL;
                    </li><li>public array <a href="#members">$configuration_info</a> =
                        ;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="PEAR">PEAR</span></li><li>public <span title="bool">bool</span> <a href="#members">$_debug</a>;
                        </li><li>public  <a href="#members">$_default_error_mode</a>;
                        </li><li>public  <a href="#members">$_default_error_options</a>;
                        </li><li>public string <a href="#members">$_default_error_handler</a>;
                        </li><li>public string <a href="#members">$_error_class</a>;
                        </li><li>public array <a href="#members">$_expected_errors</a>;
                        </li><li>protected static array <a href="#members">$bivalentMethods</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/__construct.xhtml">__construct</a>()
                    </li><li>public static void <a title="PEAR_Config" href="../classes/PEAR_Config/getDefaultConfigFiles.xhtml">getDefaultConfigFiles</a>()
                    </li><li>public static  <a title="PEAR_Config" href="../classes/PEAR_Config/singleton.xhtml">singleton</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/validConfiguration.xhtml">validConfiguration</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/readConfigFile.xhtml">readConfigFile</a>()
                    </li><li>public true|PEAR_Error <a title="PEAR_Config" href="../classes/PEAR_Config/readFTPConfigFile.xhtml">readFTPConfigFile</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/_setupChannels.xhtml">_setupChannels</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/deleteChannel.xhtml">deleteChannel</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/mergeConfigFile.xhtml">mergeConfigFile</a>()
                    </li><li>public static array <a title="PEAR_Config" href="../classes/PEAR_Config/arrayMergeRecursive.xhtml">arrayMergeRecursive</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/writeConfigFile.xhtml">writeConfigFile</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/_readConfigDataFrom.xhtml">_readConfigDataFrom</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/getConfFile.xhtml">getConfFile</a>()
                    </li><li>public true|PEAR_Error <a title="PEAR_Config" href="../classes/PEAR_Config/_addConfigVars.xhtml">_addConfigVars</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/_encodeOutput.xhtml">_encodeOutput</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/_decodeInput.xhtml">_decodeInput</a>()
                    </li><li>public string|false <a title="PEAR_Config" href="../classes/PEAR_Config/getDefaultChannel.xhtml">getDefaultChannel</a>()
                    </li><li>public mixed <a title="PEAR_Config" href="../classes/PEAR_Config/get.xhtml">get</a>()
                    </li><li>public mixed <a title="PEAR_Config" href="../classes/PEAR_Config/_getChannelValue.xhtml">_getChannelValue</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/set.xhtml">set</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/_lazyChannelSetup.xhtml">_lazyChannelSetup</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/setChannels.xhtml">setChannels</a>()
                    </li><li>public string <a title="PEAR_Config" href="../classes/PEAR_Config/getType.xhtml">getType</a>()
                    </li><li>public string <a title="PEAR_Config" href="../classes/PEAR_Config/getDocs.xhtml">getDocs</a>()
                    </li><li>public string <a title="PEAR_Config" href="../classes/PEAR_Config/getPrompt.xhtml">getPrompt</a>()
                    </li><li>public string <a title="PEAR_Config" href="../classes/PEAR_Config/getGroup.xhtml">getGroup</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/getGroups.xhtml">getGroups</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/getGroupKeys.xhtml">getGroupKeys</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/getSetValues.xhtml">getSetValues</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/getKeys.xhtml">getKeys</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/remove.xhtml">remove</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/removeLayer.xhtml">removeLayer</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/store.xhtml">store</a>()
                    </li><li>public string|array <a title="PEAR_Config" href="../classes/PEAR_Config/definedBy.xhtml">definedBy</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/isDefined.xhtml">isDefined</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/isDefinedLayer.xhtml">isDefinedLayer</a>()
                    </li><li>public array <a title="PEAR_Config" href="../classes/PEAR_Config/getLayers.xhtml">getLayers</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/apiVersion.xhtml">apiVersion</a>()
                    </li><li>public PEAR_Registry <a title="PEAR_Config" href="../classes/PEAR_Config/getRegistry.xhtml">getRegistry</a>()
                    </li><li>public bool <a title="PEAR_Config" href="../classes/PEAR_Config/setRegistry.xhtml">setRegistry</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/noRegistry.xhtml">noRegistry</a>()
                    </li><li>public PEAR_REST <a title="PEAR_Config" href="../classes/PEAR_Config/getREST.xhtml">getREST</a>()
                    </li><li>public PEAR_FTP|false <a title="PEAR_Config" href="../classes/PEAR_Config/getFTP.xhtml">getFTP</a>()
                    </li><li>public static void <a title="PEAR_Config" href="../classes/PEAR_Config/_prependPath.xhtml">_prependPath</a>()
                    </li><li>public void <a title="PEAR_Config" href="../classes/PEAR_Config/setInstallRoot.xhtml">setInstallRoot</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="PEAR">PEAR</span></li><li>public void <a title="PEAR" href="../classes/PEAR/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/PEAR.xhtml">PEAR</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/_PEAR.xhtml">_PEAR</a>()
                        </li><li>public void <a title="PEAR" href="../classes/PEAR/__call.xhtml">__call</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/__callStatic.xhtml">__callStatic</a>()
                        </li><li>public static mixed <a title="PEAR" href="../classes/PEAR/getStaticProperty.xhtml">getStaticProperty</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/registerShutdownFunc.xhtml">registerShutdownFunc</a>()
                        </li><li>public static bool <a title="PEAR" href="../classes/PEAR/isError.xhtml">isError</a>()
                        </li><li>protected static void <a title="PEAR" href="../classes/PEAR/_setErrorHandling.xhtml">_setErrorHandling</a>()
                        </li><li>public int <a title="PEAR" href="../classes/PEAR/expectError.xhtml">expectError</a>()
                        </li><li>public array <a title="PEAR" href="../classes/PEAR/popExpect.xhtml">popExpect</a>()
                        </li><li>public bool <a title="PEAR" href="../classes/PEAR/_checkDelExpect.xhtml">_checkDelExpect</a>()
                        </li><li>public mixed <a title="PEAR" href="../classes/PEAR/delExpect.xhtml">delExpect</a>()
                        </li><li>protected static  <a title="PEAR" href="../classes/PEAR/_raiseError.xhtml">_raiseError</a>()
                        </li><li>protected static  <a title="PEAR" href="../classes/PEAR/_throwError.xhtml">_throwError</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/staticPushErrorHandling.xhtml">staticPushErrorHandling</a>()
                        </li><li>public static void <a title="PEAR" href="../classes/PEAR/staticPopErrorHandling.xhtml">staticPopErrorHandling</a>()
                        </li><li>protected static bool <a title="PEAR" href="../classes/PEAR/_pushErrorHandling.xhtml">_pushErrorHandling</a>()
                        </li><li>protected static bool <a title="PEAR" href="../classes/PEAR/_popErrorHandling.xhtml">_popErrorHandling</a>()
                        </li><li>public static bool <a title="PEAR" href="../classes/PEAR/loadExtension.xhtml">loadExtension</a>()
                        </li><li>public static int <a title="PEAR" href="../classes/PEAR/getSourceDateEpoch.xhtml">getSourceDateEpoch</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="PEAR" href="../classes/PEAR.xhtml">PEAR</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="bivalentMethods"><strong>$bivalentMethods</strong>
                —
                array<br/><span class="indent">List of methods that can be called both statically and non-statically.</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="_channelConfigInfo"><strong>$_channelConfigInfo</strong>
                —
                array<br/><span class="indent">Configuration values that can be set for a channel</span></li>
            <li id="_channels"><strong>$_channels</strong>
                —
                array<br/><span class="indent">Channels that can be accessed</span></li>
            <li id="_debug"><strong>$_debug</strong>
                —
                <a title="bool" href="../classes/bool.xhtml">bool</a><br/><span class="indent">Whether to enable internal debug messages.</span></li>
            <li id="_default_error_handler"><strong>$_default_error_handler</strong>
                —
                string<br/><span class="indent">Default error handler (callback) for this object, if error mode is PEAR_ERROR_CALLBACK.</span></li>
            <li id="_default_error_mode"><strong>$_default_error_mode</strong>
                —
                int<br/><span class="indent">Default error mode for this object.</span></li>
            <li id="_default_error_options"><strong>$_default_error_options</strong>
                —
                int<br/><span class="indent">Default error options used for this object when error mode is PEAR_ERROR_TRIGGER.</span></li>
            <li id="_error_class"><strong>$_error_class</strong>
                —
                string<br/><span class="indent">Which class to use for error objects.</span></li>
            <li id="_errorsFound"><strong>$_errorsFound</strong>
                —
                integer<br/><span class="indent">amount of errors found while parsing config</span></li>
            <li id="_expected_errors"><strong>$_expected_errors</strong>
                —
                array<br/><span class="indent">An array of expected errors.</span></li>
            <li id="_installRoot"><strong>$_installRoot</strong>
                —
                <a title="string|false" href="../classes/string|false.xhtml">string|false</a><br/><span class="indent">This variable is used to control the directory values returned</span></li>
            <li id="_lastError">
              <strong>$_lastError</strong>
            </li>
            <li id="_noRegistry"><strong>$_noRegistry</strong>
                —
                <a title="bool" href="../classes/bool.xhtml">bool</a></li>
            <li id="_regInitialized"><strong>$_regInitialized</strong>
                —
                array</li>
            <li id="_registry"><strong>$_registry</strong>
                —
                <a title="PEAR_Registry" href="../classes/PEAR_Registry.xhtml">PEAR_Registry</a><br/><span class="indent">If requested, this will always refer to the registry contained in php_dir</span></li>
            <li id="configuration"><strong>$configuration</strong>
                —
                array<br/><span class="indent">Configuration data, two-dimensional array where the first dimension is the config layer ('user', 'system' and 'default'), and the second dimension is keyname =&gt; value.</span></li>
            <li id="configuration_info"><strong>$configuration_info</strong>
                —
                array<br/><span class="indent">Information about the configuration data.  Stores the type, default value and a documentation string for each configuration value.</span></li>
            <li id="files"><strong>$files</strong>
                —
                array<br/><span class="indent">Array of config files used.</span></li>
            <li id="layers">
              <strong>$layers</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="PEAR_Config" href="../classes/PEAR_Config/__construct.xhtml">__construct()</a>
                — Constructor.</li>
            <li id="_addConfigVars">
              <a title="PEAR_Config" href="../classes/PEAR_Config/_addConfigVars.xhtml">_addConfigVars()</a>
            </li>
            <li id="_decodeInput"><a title="PEAR_Config" href="../classes/PEAR_Config/_decodeInput.xhtml">_decodeInput()</a>
                — Decodes/unscrambles configuration data after reading from files.</li>
            <li id="_encodeOutput"><a title="PEAR_Config" href="../classes/PEAR_Config/_encodeOutput.xhtml">_encodeOutput()</a>
                — Encodes/scrambles configuration data before writing to files.</li>
            <li id="_getChannelValue"><a title="PEAR_Config" href="../classes/PEAR_Config/_getChannelValue.xhtml">_getChannelValue()</a>
                — Returns a channel-specific configuration value, prioritizing layers as per the layers property.</li>
            <li id="_lazyChannelSetup">
              <a title="PEAR_Config" href="../classes/PEAR_Config/_lazyChannelSetup.xhtml">_lazyChannelSetup()</a>
            </li>
            <li id="_prependPath">
              <a title="PEAR_Config" href="../classes/PEAR_Config/_prependPath.xhtml">_prependPath()</a>
            </li>
            <li id="_readConfigDataFrom"><a title="PEAR_Config" href="../classes/PEAR_Config/_readConfigDataFrom.xhtml">_readConfigDataFrom()</a>
                — Reads configuration data from a file and returns the parsed data in an array.</li>
            <li id="_setupChannels"><a title="PEAR_Config" href="../classes/PEAR_Config/_setupChannels.xhtml">_setupChannels()</a>
                — Reads the existing configurations and creates the _channels array from it</li>
            <li id="apiVersion">
              <a title="PEAR_Config" href="../classes/PEAR_Config/apiVersion.xhtml">apiVersion()</a>
            </li>
            <li id="arrayMergeRecursive">
              <a title="PEAR_Config" href="../classes/PEAR_Config/arrayMergeRecursive.xhtml">arrayMergeRecursive()</a>
            </li>
            <li id="definedBy"><a title="PEAR_Config" href="../classes/PEAR_Config/definedBy.xhtml">definedBy()</a>
                — Tells what config layer that gets to define a key.</li>
            <li id="deleteChannel">
              <a title="PEAR_Config" href="../classes/PEAR_Config/deleteChannel.xhtml">deleteChannel()</a>
            </li>
            <li id="get"><a title="PEAR_Config" href="../classes/PEAR_Config/get.xhtml">get()</a>
                — Returns a configuration value, prioritizing layers as per the layers property.</li>
            <li id="getConfFile"><a title="PEAR_Config" href="../classes/PEAR_Config/getConfFile.xhtml">getConfFile()</a>
                — Gets the file used for storing the config for a layer</li>
            <li id="getDefaultChannel"><a title="PEAR_Config" href="../classes/PEAR_Config/getDefaultChannel.xhtml">getDefaultChannel()</a>
                — Retrieve the default channel.</li>
            <li id="getDefaultConfigFiles"><a title="PEAR_Config" href="../classes/PEAR_Config/getDefaultConfigFiles.xhtml">getDefaultConfigFiles()</a>
                — Return the default locations of user and system configuration files</li>
            <li id="getDocs"><a title="PEAR_Config" href="../classes/PEAR_Config/getDocs.xhtml">getDocs()</a>
                — Get the documentation for a config value.</li>
            <li id="getFTP"><a title="PEAR_Config" href="../classes/PEAR_Config/getFTP.xhtml">getFTP()</a>
                — The ftp server is set in {@link readFTPConfigFile()}.  It exists only if a remote configuration file has been specified</li>
            <li id="getGroup"><a title="PEAR_Config" href="../classes/PEAR_Config/getGroup.xhtml">getGroup()</a>
                — Get the parameter group for a config key.</li>
            <li id="getGroupKeys"><a title="PEAR_Config" href="../classes/PEAR_Config/getGroupKeys.xhtml">getGroupKeys()</a>
                — Get the list of the parameters in a group.</li>
            <li id="getGroups"><a title="PEAR_Config" href="../classes/PEAR_Config/getGroups.xhtml">getGroups()</a>
                — Get the list of parameter groups.</li>
            <li id="getKeys"><a title="PEAR_Config" href="../classes/PEAR_Config/getKeys.xhtml">getKeys()</a>
                — Get all the current config keys.</li>
            <li id="getLayers"><a title="PEAR_Config" href="../classes/PEAR_Config/getLayers.xhtml">getLayers()</a>
                — Returns the layers defined (except the 'default' one)</li>
            <li id="getPrompt"><a title="PEAR_Config" href="../classes/PEAR_Config/getPrompt.xhtml">getPrompt()</a>
                — Get the short documentation for a config value.</li>
            <li id="getREST">
              <a title="PEAR_Config" href="../classes/PEAR_Config/getREST.xhtml">getREST()</a>
            </li>
            <li id="getRegistry">
              <a title="PEAR_Config" href="../classes/PEAR_Config/getRegistry.xhtml">getRegistry()</a>
            </li>
            <li id="getSetValues"><a title="PEAR_Config" href="../classes/PEAR_Config/getSetValues.xhtml">getSetValues()</a>
                — Get the list of allowed set values for a config value.  Returns NULL for config values that are not sets.</li>
            <li id="getType"><a title="PEAR_Config" href="../classes/PEAR_Config/getType.xhtml">getType()</a>
                — Get the type of a config value.</li>
            <li id="isDefined"><a title="PEAR_Config" href="../classes/PEAR_Config/isDefined.xhtml">isDefined()</a>
                — Tells whether a given key exists as a config value.</li>
            <li id="isDefinedLayer"><a title="PEAR_Config" href="../classes/PEAR_Config/isDefinedLayer.xhtml">isDefinedLayer()</a>
                — Tells whether a given config layer exists.</li>
            <li id="mergeConfigFile"><a title="PEAR_Config" href="../classes/PEAR_Config/mergeConfigFile.xhtml">mergeConfigFile()</a>
                — Merges data into a config layer from a file.  Does the same thing as readConfigFile, except it does not replace all existing values in the config layer.</li>
            <li id="noRegistry">
              <a title="PEAR_Config" href="../classes/PEAR_Config/noRegistry.xhtml">noRegistry()</a>
            </li>
            <li id="readConfigFile"><a title="PEAR_Config" href="../classes/PEAR_Config/readConfigFile.xhtml">readConfigFile()</a>
                — Reads configuration data from a file.  All existing values in the config layer are discarded and replaced with data from the file.</li>
            <li id="readFTPConfigFile">
              <a title="PEAR_Config" href="../classes/PEAR_Config/readFTPConfigFile.xhtml">readFTPConfigFile()</a>
            </li>
            <li id="remove"><a title="PEAR_Config" href="../classes/PEAR_Config/remove.xhtml">remove()</a>
                — Remove the a config key from a specific config layer.</li>
            <li id="removeLayer"><a title="PEAR_Config" href="../classes/PEAR_Config/removeLayer.xhtml">removeLayer()</a>
                — Temporarily remove an entire config layer.  USE WITH CARE!</li>
            <li id="set"><a title="PEAR_Config" href="../classes/PEAR_Config/set.xhtml">set()</a>
                — Set a config value in a specific layer (defaults to 'user').</li>
            <li id="setChannels"><a title="PEAR_Config" href="../classes/PEAR_Config/setChannels.xhtml">setChannels()</a>
                — Set the list of channels.</li>
            <li id="setInstallRoot">
              <a title="PEAR_Config" href="../classes/PEAR_Config/setInstallRoot.xhtml">setInstallRoot()</a>
            </li>
            <li id="setRegistry"><a title="PEAR_Config" href="../classes/PEAR_Config/setRegistry.xhtml">setRegistry()</a>
                — This is to allow customization like the use of installroot</li>
            <li id="singleton"><a title="PEAR_Config" href="../classes/PEAR_Config/singleton.xhtml">singleton()</a>
                — Static singleton method.  If you want to keep only one instance of this class in use, this method will give you a reference to the last created PEAR_Config object if one exists, or create a new object.</li>
            <li id="store"><a title="PEAR_Config" href="../classes/PEAR_Config/store.xhtml">store()</a>
                — Stores configuration data in a layer.</li>
            <li id="validConfiguration"><a title="PEAR_Config" href="../classes/PEAR_Config/validConfiguration.xhtml">validConfiguration()</a>
                — Determine whether any configuration files have been detected, and whether a registry object can be retrieved from this configuration.</li>
            <li id="writeConfigFile"><a title="PEAR_Config" href="../classes/PEAR_Config/writeConfigFile.xhtml">writeConfigFile()</a>
                — Writes data into a config layer from a file.</li>
          </ul>
          <h3>Inherited from <a title="PEAR" href="../classes/PEAR.xhtml">PEAR</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="_popErrorHandling"><a title="PEAR" href="../classes/PEAR/_popErrorHandling.xhtml">_popErrorHandling()</a>
                — Pop the last error handler used</li>
            <li id="_pushErrorHandling"><a title="PEAR" href="../classes/PEAR/_pushErrorHandling.xhtml">_pushErrorHandling()</a>
                — Push a new error handler on top of the error handler options stack. With this you can easily override the actual error handler for some code and restore it later with popErrorHandling.</li>
            <li id="_raiseError"><a title="PEAR" href="../classes/PEAR/_raiseError.xhtml">_raiseError()</a>
                — This method is a wrapper that returns an instance of the configured error class with this object's default error handling applied.  If the $mode and $options parameters are not specified, the object's defaults are used.</li>
            <li id="_setErrorHandling"><a title="PEAR" href="../classes/PEAR/_setErrorHandling.xhtml">_setErrorHandling()</a>
                — Sets how errors generated by this object should be handled.</li>
            <li id="_throwError"><a title="PEAR" href="../classes/PEAR/_throwError.xhtml">_throwError()</a>
                — Simpler form of raiseError with fewer options.  In most cases message, code and userinfo are enough.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="PEAR"><a title="PEAR" href="../classes/PEAR/PEAR.xhtml">PEAR()</a>
                — Only here for backwards compatibility.</li>
            <li id="_PEAR"><a title="PEAR" href="../classes/PEAR/_PEAR.xhtml">_PEAR()</a>
                — Destructor (the emulated type of...).  Does nothing right now, but is included for forward compatibility, so subclass destructors should always call it.</li>
            <li id="__call">
              <a title="PEAR" href="../classes/PEAR/__call.xhtml">__call()</a>
            </li>
            <li id="__callStatic">
              <a title="PEAR" href="../classes/PEAR/__callStatic.xhtml">__callStatic()</a>
            </li>
            <li id="_checkDelExpect"><a title="PEAR" href="../classes/PEAR/_checkDelExpect.xhtml">_checkDelExpect()</a>
                — This method checks unsets an error code if available</li>
            <li id="delExpect"><a title="PEAR" href="../classes/PEAR/delExpect.xhtml">delExpect()</a>
                — This method deletes all occurrences of the specified element from the expected error codes stack.</li>
            <li id="expectError"><a title="PEAR" href="../classes/PEAR/expectError.xhtml">expectError()</a>
                — This method is used to tell which errors you expect to get.</li>
            <li id="getSourceDateEpoch"><a title="PEAR" href="../classes/PEAR/getSourceDateEpoch.xhtml">getSourceDateEpoch()</a>
                — Get SOURCE_DATE_EPOCH environment variable See https://reproducible-builds.org/specs/source-date-epoch/</li>
            <li id="getStaticProperty"><a title="PEAR" href="../classes/PEAR/getStaticProperty.xhtml">getStaticProperty()</a>
                — If you have a class that's mostly/entirely static, and you need static properties, you can use this method to simulate them. Eg. in your method(s) do this: $myVar = &amp;PEAR::getStaticProperty('myclass', 'myVar'); You MUST use a reference, or they will not persist!</li>
            <li id="isError"><a title="PEAR" href="../classes/PEAR/isError.xhtml">isError()</a>
                — Tell whether a value is a PEAR error.</li>
            <li id="loadExtension"><a title="PEAR" href="../classes/PEAR/loadExtension.xhtml">loadExtension()</a>
                — OS independent PHP extension load. Remember to take care on the correct extension name for case sensitive OSes.</li>
            <li id="popExpect"><a title="PEAR" href="../classes/PEAR/popExpect.xhtml">popExpect()</a>
                — This method pops one element off the expected error codes stack.</li>
            <li id="registerShutdownFunc"><a title="PEAR" href="../classes/PEAR/registerShutdownFunc.xhtml">registerShutdownFunc()</a>
                — Use this function to register a shutdown method for static classes.</li>
            <li id="staticPopErrorHandling">
              <a title="PEAR" href="../classes/PEAR/staticPopErrorHandling.xhtml">staticPopErrorHandling()</a>
            </li>
            <li id="staticPushErrorHandling">
              <a title="PEAR" href="../classes/PEAR/staticPushErrorHandling.xhtml">staticPushErrorHandling()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
