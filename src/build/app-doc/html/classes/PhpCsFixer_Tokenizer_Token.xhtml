<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PhpCsFixer\Tokenizer\Token</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PhpCsFixer_Tokenizer">PhpCsFixer\Tokenizer</a>
          </li>
          <li class="separator">Token</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Token.php.xhtml#line23">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PhpCsFixer\Tokenizer\</small>Token</h1>
        <h4>Representation of single token.</h4>
        <p>As a token prototype you should understand a single element generated by token_get_all.</p>
        <ul>
          <li>Author: Dariusz Rumiński &lt;dariusz.ruminski@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Token
            {<br/><ul class="none"><li>// members</li><li>private  <a href="#members">$content</a>;
                    </li><li>private <span title="PhpCsFixer\Tokenizer\null|int">null|int</span> <a href="#members">$id</a>;
                    </li><li>private  <a href="#members">$isArray</a>;
                    </li><li>private boolean <a href="#members">$changed</a> =
                        false;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/__construct.xhtml">__construct</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getCastTokenKinds.xhtml">getCastTokenKinds</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getClassyTokenKinds.xhtml">getClassyTokenKinds</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getObjectOperatorKinds.xhtml">getObjectOperatorKinds</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/equals.xhtml">equals</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/equalsAny.xhtml">equalsAny</a>()
                    </li><li>public static bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isKeyCaseSensitive.xhtml">isKeyCaseSensitive</a>()
                    </li><li>public array|string <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getPrototype.xhtml">getPrototype</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getContent.xhtml">getContent</a>()
                    </li><li>public ?int <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getId.xhtml">getId</a>()
                    </li><li>public ?string <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getName.xhtml">getName</a>()
                    </li><li>public static ?string <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getNameForId.xhtml">getNameForId</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getKeywords.xhtml">getKeywords</a>()
                    </li><li>public static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getMagicConstants.xhtml">getMagicConstants</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isArray.xhtml">isArray</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isCast.xhtml">isCast</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isClassy.xhtml">isClassy</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isComment.xhtml">isComment</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isObjectOperator.xhtml">isObjectOperator</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isGivenKind.xhtml">isGivenKind</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isKeyword.xhtml">isKeyword</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isNativeConstant.xhtml">isNativeConstant</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isMagicConstant.xhtml">isMagicConstant</a>()
                    </li><li>public bool <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isWhitespace.xhtml">isWhitespace</a>()
                    </li><li>public array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/toArray.xhtml">toArray</a>()
                    </li><li>public string <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/toJson.xhtml">toJson</a>()
                    </li><li>private static array <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getTokenKindsForNames.xhtml">getTokenKindsForNames</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="changed">
              <strong>$changed</strong>
              <br/>
              <span class="indent">Flag is token was changed.</span>
            </li>
            <li id="content"><strong>$content</strong>
                —
                string<br/><span class="indent">Content of token prototype.</span></li>
            <li id="id"><strong>$id</strong>
                —
                <a title="PhpCsFixer\Tokenizer\null|int" href="../classes/PhpCsFixer_Tokenizer_null|int.xhtml">PhpCsFixer\Tokenizer\null|int</a><br/><span class="indent">ID of token prototype, if available.</span></li>
            <li id="isArray">
              <strong>$isArray</strong>
              <br/>
              <span class="indent">If token prototype is an array.</span>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getTokenKindsForNames">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getTokenKindsForNames.xhtml">getTokenKindsForNames()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/__construct.xhtml">__construct()</a>
            </li>
            <li id="equals"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/equals.xhtml">equals()</a>
                — Check if token is equals to given one.</li>
            <li id="equalsAny"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/equalsAny.xhtml">equalsAny()</a>
                — Check if token is equals to one of given.</li>
            <li id="getCastTokenKinds">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getCastTokenKinds.xhtml">getCastTokenKinds()</a>
            </li>
            <li id="getClassyTokenKinds"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getClassyTokenKinds.xhtml">getClassyTokenKinds()</a>
                — Get classy tokens kinds: T_CLASS, T_INTERFACE and T_TRAIT.</li>
            <li id="getContent"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getContent.xhtml">getContent()</a>
                — Get token's content.</li>
            <li id="getId"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getId.xhtml">getId()</a>
                — Get token's id.</li>
            <li id="getKeywords"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getKeywords.xhtml">getKeywords()</a>
                — Generate array containing all keywords that exists in PHP version in use.</li>
            <li id="getMagicConstants"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getMagicConstants.xhtml">getMagicConstants()</a>
                — Generate array containing all predefined constants that exists in PHP version in use.</li>
            <li id="getName"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getName.xhtml">getName()</a>
                — Get token's name.</li>
            <li id="getNameForId"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getNameForId.xhtml">getNameForId()</a>
                — Get token's name.</li>
            <li id="getObjectOperatorKinds"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getObjectOperatorKinds.xhtml">getObjectOperatorKinds()</a>
                — Get object operator tokens kinds: T_OBJECT_OPERATOR and (if available) T_NULLSAFE_OBJECT_OPERATOR.</li>
            <li id="getPrototype">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/getPrototype.xhtml">getPrototype()</a>
            </li>
            <li id="isArray"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isArray.xhtml">isArray()</a>
                — Check if token prototype is an array.</li>
            <li id="isCast"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isCast.xhtml">isCast()</a>
                — Check if token is one of type cast tokens.</li>
            <li id="isClassy"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isClassy.xhtml">isClassy()</a>
                — Check if token is one of classy tokens: T_CLASS, T_INTERFACE, T_TRAIT or T_ENUM.</li>
            <li id="isComment"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isComment.xhtml">isComment()</a>
                — Check if token is one of comment tokens: T_COMMENT or T_DOC_COMMENT.</li>
            <li id="isGivenKind"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isGivenKind.xhtml">isGivenKind()</a>
                — Check if token is one of given kind.</li>
            <li id="isKeyCaseSensitive"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isKeyCaseSensitive.xhtml">isKeyCaseSensitive()</a>
                — A helper method used to find out whether a certain input token has to be case-sensitively matched.</li>
            <li id="isKeyword"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isKeyword.xhtml">isKeyword()</a>
                — Check if token is a keyword.</li>
            <li id="isMagicConstant"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isMagicConstant.xhtml">isMagicConstant()</a>
                — Returns if the token is of a Magic constants type.</li>
            <li id="isNativeConstant"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isNativeConstant.xhtml">isNativeConstant()</a>
                — Check if token is a native PHP constant: true, false or null.</li>
            <li id="isObjectOperator"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isObjectOperator.xhtml">isObjectOperator()</a>
                — Check if token is one of object operator tokens: T_OBJECT_OPERATOR or T_NULLSAFE_OBJECT_OPERATOR.</li>
            <li id="isWhitespace"><a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/isWhitespace.xhtml">isWhitespace()</a>
                — Check if token is whitespace.</li>
            <li id="toArray">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/toArray.xhtml">toArray()</a>
            </li>
            <li id="toJson">
              <a title="PhpCsFixer\Tokenizer\Token" href="../classes/PhpCsFixer_Tokenizer_Token/toJson.xhtml">toJson()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
