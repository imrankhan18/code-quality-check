<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GuzzleHttp\Promise\Coroutine</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#GuzzleHttp_Promise">GuzzleHttp\Promise</a>
          </li>
          <li class="separator">Coroutine</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/guzzlehttp/promises/src/Coroutine.php.xhtml#line45">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>GuzzleHttp\Promise\</small>Coroutine</h1>
        <h4>Creates a promise that is resolved using a generator that yields values or promises (somewhat similar to C#'s async keyword).</h4>
        <p>When called, the Coroutine::of method will start an instance of the generator<br/>and returns a promise that is fulfilled with its final yielded value.<br/><br/>Control is returned back to the generator when the yielded promise settles.<br/>This can lead to less verbose code when doing lots of sequential async calls<br/>with minimal processing in between.<br/><br/>use GuzzleHttp\Promise;<br/><br/>function createPromise($value) {<br/>return new Promise\FulfilledPromise($value);<br/>}<br/><br/>$promise = Promise\Coroutine::of(function () {<br/>$value = (yield createPromise('a'));<br/>try {<br/>$value = (yield createPromise($value . 'b'));<br/>} catch (\Exception $e) {<br/>// The promise was rejected.<br/>}<br/>yield $value . 'c';<br/>});<br/><br/>// Outputs "abc"<br/>    $promise-&gt;then(function ($v) { echo $v; });</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Coroutine
                implements
                <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface.xhtml">PromiseInterface</a>
            {<br/><ul class="none"><li>// members</li><li>private <span title="GuzzleHttp\Promise\PromiseInterface|null">PromiseInterface|null</span> <a href="#members">$currentPromise</a>;
                    </li><li>private <span title="Generator">Generator</span> <a href="#members">$generator</a>;
                    </li><li>private <span title="GuzzleHttp\Promise\Promise">Promise</span> <a href="#members">$result</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/__construct.xhtml">__construct</a>()
                    </li><li>public static Coroutine <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/of.xhtml">of</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/then.xhtml">then</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/otherwise.xhtml">otherwise</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/wait.xhtml">wait</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/getState.xhtml">getState</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/resolve.xhtml">resolve</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/reject.xhtml">reject</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/cancel.xhtml">cancel</a>()
                    </li><li>private void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/nextCoroutine.xhtml">nextCoroutine</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/_handleSuccess.xhtml">_handleSuccess</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/_handleFailure.xhtml">_handleFailure</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Implements</h4>
          <ul>
            <li>
              <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface.xhtml">GuzzleHttp\Promise\PromiseInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="PENDING">PENDING</td>
              <td>'pending'</td>
            </tr>
            <tr>
              <td id="FULFILLED">FULFILLED</td>
              <td>'fulfilled'</td>
            </tr>
            <tr>
              <td id="REJECTED">REJECTED</td>
              <td>'rejected'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="currentPromise"><strong>$currentPromise</strong>
                —
                <a title="GuzzleHttp\Promise\PromiseInterface|null" href="../classes/GuzzleHttp_Promise_PromiseInterface|null.xhtml">GuzzleHttp\Promise\PromiseInterface|null</a></li>
            <li id="generator"><strong>$generator</strong>
                —
                <a title="Generator" href="../classes/Generator.xhtml">Generator</a></li>
            <li id="result"><strong>$result</strong>
                —
                <a title="GuzzleHttp\Promise\Promise" href="../classes/GuzzleHttp_Promise_Promise.xhtml">GuzzleHttp\Promise\Promise</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="nextCoroutine">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/nextCoroutine.xhtml">nextCoroutine()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/__construct.xhtml">__construct()</a>
            </li>
            <li id="_handleFailure">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/_handleFailure.xhtml">_handleFailure()</a>
            </li>
            <li id="_handleSuccess">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/_handleSuccess.xhtml">_handleSuccess()</a>
            </li>
            <li id="cancel">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/cancel.xhtml">cancel()</a>
            </li>
            <li id="getState">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/getState.xhtml">getState()</a>
            </li>
            <li id="of"><a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/of.xhtml">of()</a>
                — Create a new coroutine.</li>
            <li id="otherwise">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/otherwise.xhtml">otherwise()</a>
            </li>
            <li id="reject">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/reject.xhtml">reject()</a>
            </li>
            <li id="resolve">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/resolve.xhtml">resolve()</a>
            </li>
            <li id="then">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/then.xhtml">then()</a>
            </li>
            <li id="wait">
              <a title="GuzzleHttp\Promise\Coroutine" href="../classes/GuzzleHttp_Promise_Coroutine/wait.xhtml">wait()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
