<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - MongoDB\Tests\Operation\WatchFunctionalTest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#MongoDB_Tests_Operation">MongoDB\Tests\Operation</a>
          </li>
          <li class="separator">WatchFunctionalTest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/mongodb/mongodb/tests/Operation/WatchFunctionalTest.php.xhtml#line39">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>MongoDB\Tests\Operation\</small>WatchFunctionalTest</h1>
        <h4/>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class WatchFunctionalTest
                extends <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase.xhtml">FunctionalTestCase</a>
            {<br/><ul class="none"><li>// constants</li><li>const INTERRUPTED = 11601;</li><li>const NOT_PRIMARY = 10107;</li></ul><ul class="none"><li>// members</li><li>private static integer <a href="#members">$wireVersionForStartAtOperationTime</a> =
                        7;
                    </li><li>private array <a href="#members">$defaultOptions</a> =
                        ;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="MongoDB\Tests\FunctionalTestCase">FunctionalTestCase</span></li><li>protected <span title="MongoDB\Driver\Manager">Manager</span> <a href="#members">$manager</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/setUp.xhtml">setUp</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeToken.xhtml">testGetResumeToken</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeTokenWithPostBatchResumeToken.xhtml">testGetResumeTokenWithPostBatchResumeToken</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNextResumesAfterConnectionException.xhtml">testNextResumesAfterConnectionException</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeBeforeReceivingAnyResultsIncludesPostBatchResumeToken.xhtml">testResumeBeforeReceivingAnyResultsIncludesPostBatchResumeToken</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertResumeAfter.xhtml">assertResumeAfter</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeBeforeReceivingAnyResultsIncludesStartAtOperationTime.xhtml">testResumeBeforeReceivingAnyResultsIncludesStartAtOperationTime</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertStartAtOperationTime.xhtml">assertStartAtOperationTime</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindMultipleTimesWithResults.xhtml">testRewindMultipleTimesWithResults</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindMultipleTimesWithNoResults.xhtml">testRewindMultipleTimesWithNoResults</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNoChangeAfterResumeBeforeInsert.xhtml">testNoChangeAfterResumeBeforeInsert</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeMultipleTimesInSuccession.xhtml">testResumeMultipleTimesInSuccession</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testKey.xhtml">testKey</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNonEmptyPipeline.xhtml">testNonEmptyPipeline</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testInitialCursorIsNotClosed.xhtml">testInitialCursorIsNotClosed</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundClientSideError.xhtml">testResumeTokenNotFoundClientSideError</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundServerSideError.xhtml">testResumeTokenNotFoundServerSideError</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenInvalidTypeClientSideError.xhtml">testResumeTokenInvalidTypeClientSideError</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenInvalidTypeServerSideError.xhtml">testResumeTokenInvalidTypeServerSideError</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testMaxAwaitTimeMS.xhtml">testMaxAwaitTimeMS</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindExtractsResumeTokenAndNextResumes.xhtml">testRewindExtractsResumeTokenAndNextResumes</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeAfterOption.xhtml">testResumeAfterOption</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testStartAfterOption.xhtml">testStartAfterOption</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testTypeMapOption.xhtml">testTypeMapOption</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/provideTypeMapOptionsAndExpectedChangeDocument.xhtml">provideTypeMapOptionsAndExpectedChangeDocument</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNextAdvancesKey.xhtml">testNextAdvancesKey</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundDoesNotAdvanceKey.xhtml">testResumeTokenNotFoundDoesNotAdvanceKey</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testSessionPersistsAfterResume.xhtml">testSessionPersistsAfterResume</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testSessionFreed.xhtml">testSessionFreed</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeRepeatsOriginalPipelineAndOptions.xhtml">testResumeRepeatsOriginalPipelineAndOptions</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testErrorDuringAggregateCommandDoesNotCauseResume.xhtml">testErrorDuringAggregateCommandDoesNotCauseResume</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testOriginalReadPreferenceIsPreservedOnResume.xhtml">testOriginalReadPreferenceIsPreservedOnResume</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeTokenReturnsOriginalResumeTokenOnEmptyBatch.xhtml">testGetResumeTokenReturnsOriginalResumeTokenOnEmptyBatch</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenBehaviour.xhtml">testResumeTokenBehaviour</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumingChangeStreamWithoutPreviousResultsIncludesStartAfterOption.xhtml">testResumingChangeStreamWithoutPreviousResultsIncludesStartAfterOption</a>()
                    </li><li>public void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumingChangeStreamWithPreviousResultsIncludesResumeAfterOption.xhtml">testResumingChangeStreamWithPreviousResultsIncludesResumeAfterOption</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertNoCommandExecuted.xhtml">assertNoCommandExecuted</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/forceChangeStreamResume.xhtml">forceChangeStreamResume</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/getPostBatchResumeTokenFromReply.xhtml">getPostBatchResumeTokenFromReply</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/insertDocument.xhtml">insertDocument</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/isPostBatchResumeTokenSupported.xhtml">isPostBatchResumeTokenSupported</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/isStartAtOperationTimeSupported.xhtml">isStartAtOperationTimeSupported</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/advanceCursorUntilValid.xhtml">advanceCursorUntilValid</a>()
                    </li><li>private void <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/skipIfIsShardedCluster.xhtml">skipIfIsShardedCluster</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="MongoDB\Tests\Operation\FunctionalTestCase">FunctionalTestCase</span></li><li>public void <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/setUp.xhtml">setUp</a>()
                        </li><li>public void <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/tearDown.xhtml">tearDown</a>()
                        </li><li>protected void <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createDefaultReadConcern.xhtml">createDefaultReadConcern</a>()
                        </li><li>protected void <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createDefaultWriteConcern.xhtml">createDefaultWriteConcern</a>()
                        </li><li>protected void <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createSession.xhtml">createSession</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="MongoDB\Tests\FunctionalTestCase">FunctionalTestCase</span></li><li>public void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/setUp.xhtml">setUp</a>()
                        </li><li>public void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/tearDown.xhtml">tearDown</a>()
                        </li><li>public static void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createTestClient.xhtml">createTestClient</a>()
                        </li><li>public static void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createTestManager.xhtml">createTestManager</a>()
                        </li><li>public static void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getUri.xhtml">getUri</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionCount.xhtml">assertCollectionCount</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionDoesNotExist.xhtml">assertCollectionDoesNotExist</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionExists.xhtml">assertCollectionExists</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCommandSucceeded.xhtml">assertCommandSucceeded</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertSameObjectId.xhtml">assertSameObjectId</a>()
                        </li><li>public void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/configureFailPoint.xhtml">configureFailPoint</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createCollection.xhtml">createCollection</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/dropCollection.xhtml">dropCollection</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getFeatureCompatibilityVersion.xhtml">getFeatureCompatibilityVersion</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getPrimaryServer.xhtml">getPrimaryServer</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getServerVersion.xhtml">getServerVersion</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getServerStorageEngine.xhtml">getServerStorageEngine</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isLoadBalanced.xhtml">isLoadBalanced</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isReplicaSet.xhtml">isReplicaSet</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isMongos.xhtml">isMongos</a>()
                        </li><li>protected static void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isServerless.xhtml">isServerless</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isShardedCluster.xhtml">isShardedCluster</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isShardedClusterUsingReplicasets.xhtml">isShardedClusterUsingReplicasets</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfChangeStreamIsNotSupported.xhtml">skipIfChangeStreamIsNotSupported</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfCausalConsistencyIsNotSupported.xhtml">skipIfCausalConsistencyIsNotSupported</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfClientSideEncryptionIsNotSupported.xhtml">skipIfClientSideEncryptionIsNotSupported</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfGeoHaystackIndexIsNotSupported.xhtml">skipIfGeoHaystackIndexIsNotSupported</a>()
                        </li><li>protected void <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfTransactionsAreNotSupported.xhtml">skipIfTransactionsAreNotSupported</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="MongoDB\Tests\TestCase">TestCase</span></li><li>public static string <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getUri.xhtml">getUri</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertMatchesDocument.xhtml">assertMatchesDocument</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertSameDocument.xhtml">assertSameDocument</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertSameDocuments.xhtml">assertSameDocuments</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/dataDescription.xhtml">dataDescription</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/provideInvalidArrayValues.xhtml">provideInvalidArrayValues</a>()
                        </li><li>public void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/provideInvalidDocumentValues.xhtml">provideInvalidDocumentValues</a>()
                        </li><li>protected void <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertDeprecated.xhtml">assertDeprecated</a>()
                        </li><li>protected string <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getCollectionName.xhtml">getCollectionName</a>()
                        </li><li>protected string <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getDatabaseName.xhtml">getDatabaseName</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidArrayValues.xhtml">getInvalidArrayValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidBooleanValues.xhtml">getInvalidBooleanValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidDocumentValues.xhtml">getInvalidDocumentValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidIntegerValues.xhtml">getInvalidIntegerValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidReadConcernValues.xhtml">getInvalidReadConcernValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidReadPreferenceValues.xhtml">getInvalidReadPreferenceValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidSessionValues.xhtml">getInvalidSessionValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidStringValues.xhtml">getInvalidStringValues</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidWriteConcernValues.xhtml">getInvalidWriteConcernValues</a>()
                        </li><li>protected string <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getNamespace.xhtml">getNamespace</a>()
                        </li><li>protected array <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/wrapValuesForDataProvider.xhtml">wrapValuesForDataProvider</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase.xhtml">MongoDB\Tests\Operation\FunctionalTestCase</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="INTERRUPTED">INTERRUPTED</td>
              <td>11601</td>
            </tr>
            <tr>
              <td id="NOT_PRIMARY">NOT_PRIMARY</td>
              <td>10107</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="defaultOptions"><strong>$defaultOptions</strong>
                —
                array</li>
            <li id="wireVersionForStartAtOperationTime"><strong>$wireVersionForStartAtOperationTime</strong>
                —
                integer</li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="manager"><strong>$manager</strong>
                —
                <a title="MongoDB\Driver\Manager" href="../classes/MongoDB_Driver_Manager.xhtml">MongoDB\Driver\Manager</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="advanceCursorUntilValid">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/advanceCursorUntilValid.xhtml">advanceCursorUntilValid()</a>
            </li>
            <li id="assertNoCommandExecuted">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertNoCommandExecuted.xhtml">assertNoCommandExecuted()</a>
            </li>
            <li id="assertResumeAfter">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertResumeAfter.xhtml">assertResumeAfter()</a>
            </li>
            <li id="assertStartAtOperationTime">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/assertStartAtOperationTime.xhtml">assertStartAtOperationTime()</a>
            </li>
            <li id="forceChangeStreamResume">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/forceChangeStreamResume.xhtml">forceChangeStreamResume()</a>
            </li>
            <li id="getPostBatchResumeTokenFromReply">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/getPostBatchResumeTokenFromReply.xhtml">getPostBatchResumeTokenFromReply()</a>
            </li>
            <li id="insertDocument">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/insertDocument.xhtml">insertDocument()</a>
            </li>
            <li id="isPostBatchResumeTokenSupported">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/isPostBatchResumeTokenSupported.xhtml">isPostBatchResumeTokenSupported()</a>
            </li>
            <li id="isStartAtOperationTimeSupported">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/isStartAtOperationTimeSupported.xhtml">isStartAtOperationTimeSupported()</a>
            </li>
            <li id="skipIfIsShardedCluster">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/skipIfIsShardedCluster.xhtml">skipIfIsShardedCluster()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="provideTypeMapOptionsAndExpectedChangeDocument">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/provideTypeMapOptionsAndExpectedChangeDocument.xhtml">provideTypeMapOptionsAndExpectedChangeDocument()</a>
            </li>
            <li id="setUp">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/setUp.xhtml">setUp()</a>
            </li>
            <li id="testErrorDuringAggregateCommandDoesNotCauseResume"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testErrorDuringAggregateCommandDoesNotCauseResume.xhtml">testErrorDuringAggregateCommandDoesNotCauseResume()</a>
                — Prose test 4: "ChangeStream will not attempt to resume on any error encountered while executing an aggregate command."</li>
            <li id="testGetResumeToken"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeToken.xhtml">testGetResumeToken()</a>
                — Prose test 1: "ChangeStream must continuously track the last seen resumeToken"</li>
            <li id="testGetResumeTokenReturnsOriginalResumeTokenOnEmptyBatch"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeTokenReturnsOriginalResumeTokenOnEmptyBatch.xhtml">testGetResumeTokenReturnsOriginalResumeTokenOnEmptyBatch()</a>
                — Prose test 12 For a ChangeStream under these conditions: - Running against a server &lt;4.0.7.</li>
            <li id="testGetResumeTokenWithPostBatchResumeToken"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testGetResumeTokenWithPostBatchResumeToken.xhtml">testGetResumeTokenWithPostBatchResumeToken()</a>
                — Prose test 1: "ChangeStream must continuously track the last seen resumeToken"</li>
            <li id="testInitialCursorIsNotClosed"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testInitialCursorIsNotClosed.xhtml">testInitialCursorIsNotClosed()</a>
                — Prose test 7: "Ensure that a cursor returned from an aggregate command with a cursor id and an initial empty batch is not closed on the driver side."</li>
            <li id="testKey">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testKey.xhtml">testKey()</a>
            </li>
            <li id="testMaxAwaitTimeMS">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testMaxAwaitTimeMS.xhtml">testMaxAwaitTimeMS()</a>
            </li>
            <li id="testNextAdvancesKey">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNextAdvancesKey.xhtml">testNextAdvancesKey()</a>
            </li>
            <li id="testNextResumesAfterConnectionException">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNextResumesAfterConnectionException.xhtml">testNextResumesAfterConnectionException()</a>
            </li>
            <li id="testNoChangeAfterResumeBeforeInsert">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNoChangeAfterResumeBeforeInsert.xhtml">testNoChangeAfterResumeBeforeInsert()</a>
            </li>
            <li id="testNonEmptyPipeline">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testNonEmptyPipeline.xhtml">testNonEmptyPipeline()</a>
            </li>
            <li id="testOriginalReadPreferenceIsPreservedOnResume"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testOriginalReadPreferenceIsPreservedOnResume.xhtml">testOriginalReadPreferenceIsPreservedOnResume()</a>
                — Prose test 6: "ChangeStream will perform server selection before attempting to resume, using initial readPreference"</li>
            <li id="testResumeAfterOption">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeAfterOption.xhtml">testResumeAfterOption()</a>
            </li>
            <li id="testResumeBeforeReceivingAnyResultsIncludesPostBatchResumeToken">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeBeforeReceivingAnyResultsIncludesPostBatchResumeToken.xhtml">testResumeBeforeReceivingAnyResultsIncludesPostBatchResumeToken()</a>
            </li>
            <li id="testResumeBeforeReceivingAnyResultsIncludesStartAtOperationTime"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeBeforeReceivingAnyResultsIncludesStartAtOperationTime.xhtml">testResumeBeforeReceivingAnyResultsIncludesStartAtOperationTime()</a>
                — Prose test 9: "$changeStream stage for ChangeStream against a server &gt;=4.0 and &lt;4.0.7 that has not received any results yet MUST include a startAtOperationTime option when resuming a changestream."</li>
            <li id="testResumeMultipleTimesInSuccession">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeMultipleTimesInSuccession.xhtml">testResumeMultipleTimesInSuccession()</a>
            </li>
            <li id="testResumeRepeatsOriginalPipelineAndOptions"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeRepeatsOriginalPipelineAndOptions.xhtml">testResumeRepeatsOriginalPipelineAndOptions()</a>
                — Prose test 3: "ChangeStream will automatically resume one time on a resumable error (including not primary) with the initial pipeline and options, except for the addition/update of a resumeToken."</li>
            <li id="testResumeTokenBehaviour"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenBehaviour.xhtml">testResumeTokenBehaviour()</a>
                — Prose test 14 For a ChangeStream under these conditions:  - The batch is not empty.</li>
            <li id="testResumeTokenInvalidTypeClientSideError"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenInvalidTypeClientSideError.xhtml">testResumeTokenInvalidTypeClientSideError()</a>
                — Prose test 2: "ChangeStream will throw an exception if the server response is missing the resume token (if wire version is &lt; 8, this is a driver-side error; for 8+, this is a server-side error)"</li>
            <li id="testResumeTokenInvalidTypeServerSideError"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenInvalidTypeServerSideError.xhtml">testResumeTokenInvalidTypeServerSideError()</a>
                — Prose test 2: "ChangeStream will throw an exception if the server response is missing the resume token (if wire version is &lt; 8, this is a driver-side error; for 8+, this is a server-side error)"</li>
            <li id="testResumeTokenNotFoundClientSideError"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundClientSideError.xhtml">testResumeTokenNotFoundClientSideError()</a>
                — Prose test 2: "ChangeStream will throw an exception if the server response is missing the resume token (if wire version is &lt; 8, this is a driver-side error; for 8+, this is a server-side error)"</li>
            <li id="testResumeTokenNotFoundDoesNotAdvanceKey">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundDoesNotAdvanceKey.xhtml">testResumeTokenNotFoundDoesNotAdvanceKey()</a>
            </li>
            <li id="testResumeTokenNotFoundServerSideError"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumeTokenNotFoundServerSideError.xhtml">testResumeTokenNotFoundServerSideError()</a>
                — Prose test 2: "ChangeStream will throw an exception if the server response is missing the resume token (if wire version is &lt; 8, this is a driver-side error; for 8+, this is a server-side error)"</li>
            <li id="testResumingChangeStreamWithPreviousResultsIncludesResumeAfterOption"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumingChangeStreamWithPreviousResultsIncludesResumeAfterOption.xhtml">testResumingChangeStreamWithPreviousResultsIncludesResumeAfterOption()</a>
                — Prose test 18: "$changeStream stage for ChangeStream started with startAfter against a server &gt;=4.1.1 that has received at least one result MUST include a resumeAfter option and MUST NOT include a startAfter option when resuming a change stream."</li>
            <li id="testResumingChangeStreamWithoutPreviousResultsIncludesStartAfterOption"><a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testResumingChangeStreamWithoutPreviousResultsIncludesStartAfterOption.xhtml">testResumingChangeStreamWithoutPreviousResultsIncludesStartAfterOption()</a>
                — Prose test 17: "$changeStream stage for ChangeStream started with startAfter against a server &gt;=4.1.1 that has not received any results yet MUST include a startAfter option and MUST NOT include a resumeAfter option when resuming a change stream."</li>
            <li id="testRewindExtractsResumeTokenAndNextResumes">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindExtractsResumeTokenAndNextResumes.xhtml">testRewindExtractsResumeTokenAndNextResumes()</a>
            </li>
            <li id="testRewindMultipleTimesWithNoResults">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindMultipleTimesWithNoResults.xhtml">testRewindMultipleTimesWithNoResults()</a>
            </li>
            <li id="testRewindMultipleTimesWithResults">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testRewindMultipleTimesWithResults.xhtml">testRewindMultipleTimesWithResults()</a>
            </li>
            <li id="testSessionFreed">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testSessionFreed.xhtml">testSessionFreed()</a>
            </li>
            <li id="testSessionPersistsAfterResume">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testSessionPersistsAfterResume.xhtml">testSessionPersistsAfterResume()</a>
            </li>
            <li id="testStartAfterOption">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testStartAfterOption.xhtml">testStartAfterOption()</a>
            </li>
            <li id="testTypeMapOption">
              <a title="MongoDB\Tests\Operation\WatchFunctionalTest" href="../classes/MongoDB_Tests_Operation_WatchFunctionalTest/testTypeMapOption.xhtml">testTypeMapOption()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase.xhtml">MongoDB\Tests\Operation\FunctionalTestCase</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="createDefaultReadConcern">
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createDefaultReadConcern.xhtml">createDefaultReadConcern()</a>
            </li>
            <li id="createDefaultWriteConcern">
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createDefaultWriteConcern.xhtml">createDefaultWriteConcern()</a>
            </li>
            <li id="createSession">
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/createSession.xhtml">createSession()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="setUp">
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/setUp.xhtml">setUp()</a>
            </li>
            <li id="tearDown">
              <a title="MongoDB\Tests\Operation\FunctionalTestCase" href="../classes/MongoDB_Tests_Operation_FunctionalTestCase/tearDown.xhtml">tearDown()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase.xhtml">MongoDB\Tests\FunctionalTestCase</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="assertCollectionCount">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionCount.xhtml">assertCollectionCount()</a>
            </li>
            <li id="assertCollectionDoesNotExist"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionDoesNotExist.xhtml">assertCollectionDoesNotExist()</a>
                — Asserts that a collection with the given name does not exist on the server.</li>
            <li id="assertCollectionExists"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCollectionExists.xhtml">assertCollectionExists()</a>
                — Asserts that a collection with the given name exists on the server.</li>
            <li id="assertCommandSucceeded">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertCommandSucceeded.xhtml">assertCommandSucceeded()</a>
            </li>
            <li id="assertSameObjectId">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/assertSameObjectId.xhtml">assertSameObjectId()</a>
            </li>
            <li id="createCollection"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createCollection.xhtml">createCollection()</a>
                — Creates the test collection with the specified options.</li>
            <li id="dropCollection"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/dropCollection.xhtml">dropCollection()</a>
                — Drops the test collection with the specified options.</li>
            <li id="getFeatureCompatibilityVersion">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getFeatureCompatibilityVersion.xhtml">getFeatureCompatibilityVersion()</a>
            </li>
            <li id="getPrimaryServer">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getPrimaryServer.xhtml">getPrimaryServer()</a>
            </li>
            <li id="getServerStorageEngine">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getServerStorageEngine.xhtml">getServerStorageEngine()</a>
            </li>
            <li id="getServerVersion">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getServerVersion.xhtml">getServerVersion()</a>
            </li>
            <li id="isLoadBalanced">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isLoadBalanced.xhtml">isLoadBalanced()</a>
            </li>
            <li id="isMongos">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isMongos.xhtml">isMongos()</a>
            </li>
            <li id="isReplicaSet">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isReplicaSet.xhtml">isReplicaSet()</a>
            </li>
            <li id="isServerless"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isServerless.xhtml">isServerless()</a>
                — Return whether serverless (i.e. proxy as mongos) is being utilized.</li>
            <li id="isShardedCluster">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isShardedCluster.xhtml">isShardedCluster()</a>
            </li>
            <li id="isShardedClusterUsingReplicasets">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/isShardedClusterUsingReplicasets.xhtml">isShardedClusterUsingReplicasets()</a>
            </li>
            <li id="skipIfCausalConsistencyIsNotSupported">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfCausalConsistencyIsNotSupported.xhtml">skipIfCausalConsistencyIsNotSupported()</a>
            </li>
            <li id="skipIfChangeStreamIsNotSupported">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfChangeStreamIsNotSupported.xhtml">skipIfChangeStreamIsNotSupported()</a>
            </li>
            <li id="skipIfClientSideEncryptionIsNotSupported">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfClientSideEncryptionIsNotSupported.xhtml">skipIfClientSideEncryptionIsNotSupported()</a>
            </li>
            <li id="skipIfGeoHaystackIndexIsNotSupported">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfGeoHaystackIndexIsNotSupported.xhtml">skipIfGeoHaystackIndexIsNotSupported()</a>
            </li>
            <li id="skipIfTransactionsAreNotSupported">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/skipIfTransactionsAreNotSupported.xhtml">skipIfTransactionsAreNotSupported()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="configureFailPoint"><a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/configureFailPoint.xhtml">configureFailPoint()</a>
                — Configure a fail point for the test.</li>
            <li id="createTestClient">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createTestClient.xhtml">createTestClient()</a>
            </li>
            <li id="createTestManager">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/createTestManager.xhtml">createTestManager()</a>
            </li>
            <li id="getUri">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/getUri.xhtml">getUri()</a>
            </li>
            <li id="setUp">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/setUp.xhtml">setUp()</a>
            </li>
            <li id="tearDown">
              <a title="MongoDB\Tests\FunctionalTestCase" href="../classes/MongoDB_Tests_FunctionalTestCase/tearDown.xhtml">tearDown()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase.xhtml">MongoDB\Tests\TestCase</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="assertDeprecated">
              <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertDeprecated.xhtml">assertDeprecated()</a>
            </li>
            <li id="getCollectionName"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getCollectionName.xhtml">getCollectionName()</a>
                — Return the test collection name.</li>
            <li id="getDatabaseName"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getDatabaseName.xhtml">getDatabaseName()</a>
                — Return the test database name.</li>
            <li id="getInvalidArrayValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidArrayValues.xhtml">getInvalidArrayValues()</a>
                — Return a list of invalid array values.</li>
            <li id="getInvalidBooleanValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidBooleanValues.xhtml">getInvalidBooleanValues()</a>
                — Return a list of invalid boolean values.</li>
            <li id="getInvalidDocumentValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidDocumentValues.xhtml">getInvalidDocumentValues()</a>
                — Return a list of invalid document values.</li>
            <li id="getInvalidIntegerValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidIntegerValues.xhtml">getInvalidIntegerValues()</a>
                — Return a list of invalid integer values.</li>
            <li id="getInvalidReadConcernValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidReadConcernValues.xhtml">getInvalidReadConcernValues()</a>
                — Return a list of invalid ReadPreference values.</li>
            <li id="getInvalidReadPreferenceValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidReadPreferenceValues.xhtml">getInvalidReadPreferenceValues()</a>
                — Return a list of invalid ReadPreference values.</li>
            <li id="getInvalidSessionValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidSessionValues.xhtml">getInvalidSessionValues()</a>
                — Return a list of invalid Session values.</li>
            <li id="getInvalidStringValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidStringValues.xhtml">getInvalidStringValues()</a>
                — Return a list of invalid string values.</li>
            <li id="getInvalidWriteConcernValues"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getInvalidWriteConcernValues.xhtml">getInvalidWriteConcernValues()</a>
                — Return a list of invalid WriteConcern values.</li>
            <li id="getNamespace"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getNamespace.xhtml">getNamespace()</a>
                — Return the test namespace.</li>
            <li id="wrapValuesForDataProvider"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/wrapValuesForDataProvider.xhtml">wrapValuesForDataProvider()</a>
                — Wrap a list of values for use as a single-argument data provider.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="assertMatchesDocument"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertMatchesDocument.xhtml">assertMatchesDocument()</a>
                — Asserts that a document has expected values for some fields.</li>
            <li id="assertSameDocument"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertSameDocument.xhtml">assertSameDocument()</a>
                — Asserts that a document has expected values for all fields.</li>
            <li id="assertSameDocuments">
              <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/assertSameDocuments.xhtml">assertSameDocuments()</a>
            </li>
            <li id="dataDescription"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/dataDescription.xhtml">dataDescription()</a>
                — Compatibility method as PHPUnit 9 no longer includes this method.</li>
            <li id="getUri"><a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/getUri.xhtml">getUri()</a>
                — Return the connection URI.</li>
            <li id="provideInvalidArrayValues">
              <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/provideInvalidArrayValues.xhtml">provideInvalidArrayValues()</a>
            </li>
            <li id="provideInvalidDocumentValues">
              <a title="MongoDB\Tests\TestCase" href="../classes/MongoDB_Tests_TestCase/provideInvalidDocumentValues.xhtml">provideInvalidDocumentValues()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
