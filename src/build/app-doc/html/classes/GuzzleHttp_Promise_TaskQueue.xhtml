<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GuzzleHttp\Promise\TaskQueue</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#GuzzleHttp_Promise">GuzzleHttp\Promise</a>
          </li>
          <li class="separator">TaskQueue</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/guzzlehttp/promises/src/TaskQueue.php.xhtml#line14">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>GuzzleHttp\Promise\</small>TaskQueue</h1>
        <h4>A task queue that executes tasks in a FIFO order.</h4>
        <p>This task queue class is used to settle promises asynchronously and<br/>maintains a constant stack size. You can use the task queue asynchronously<br/>by calling the `run()` function of the global task queue in an event loop.<br/><br/>    GuzzleHttp\Promise\Utils::queue()-&gt;run();</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class TaskQueue
                implements
                <a title="GuzzleHttp\Promise\TaskQueueInterface" href="../interfaces/GuzzleHttp_Promise_TaskQueueInterface.xhtml">TaskQueueInterface</a>
            {<br/><ul class="none"><li>// members</li><li>private boolean <a href="#members">$enableShutdown</a> =
                        true;
                    </li><li>private array <a href="#members">$queue</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/isEmpty.xhtml">isEmpty</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/add.xhtml">add</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/run.xhtml">run</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/disableShutdown.xhtml">disableShutdown</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Implements</h4>
          <ul>
            <li>
              <a title="GuzzleHttp\Promise\TaskQueueInterface" href="../interfaces/GuzzleHttp_Promise_TaskQueueInterface.xhtml">GuzzleHttp\Promise\TaskQueueInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="enableShutdown">
              <strong>$enableShutdown</strong>
            </li>
            <li id="queue">
              <strong>$queue</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/__construct.xhtml">__construct()</a>
            </li>
            <li id="add">
              <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/add.xhtml">add()</a>
            </li>
            <li id="disableShutdown"><a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/disableShutdown.xhtml">disableShutdown()</a>
                — The task queue will be run and exhausted by default when the process exits IFF the exit is not the result of a PHP E_ERROR error.</li>
            <li id="isEmpty">
              <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/isEmpty.xhtml">isEmpty()</a>
            </li>
            <li id="run">
              <a title="GuzzleHttp\Promise\TaskQueue" href="../classes/GuzzleHttp_Promise_TaskQueue/run.xhtml">run()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
