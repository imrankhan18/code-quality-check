<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - React\Promise\ExtendedPromiseInterface::always</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#React_Promise">React\Promise</a>
          </li>
          <li class="separator">
            <a title="React\Promise\ExtendedPromiseInterface" href="../../interfaces/React_Promise_ExtendedPromiseInterface.xhtml">ExtendedPromiseInterface</a>
          </li>
          <li class="separator">always</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="../../source/ar/www/html/vendor/react/promise/src/ExtendedPromiseInterface.php.xhtml#line84">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>React\Promise\ExtendedPromiseInterface::</small>always</h1>
        <h4>Allows you to execute "cleanup" type tasks in a promise chain.</h4>
        <p>It arranges for `$onFulfilledOrRejected` to be called, with no arguments,
when the promise is either fulfilled or rejected.

* If `$promise` fulfills, and `$onFulfilledOrRejected` returns successfully,
   `$newPromise` will fulfill with the same value as `$promise`.
* If `$promise` fulfills, and `$onFulfilledOrRejected` throws or returns a
   rejected promise, `$newPromise` will reject with the thrown exception or
   rejected promise's reason.
* If `$promise` rejects, and `$onFulfilledOrRejected` returns successfully,
   `$newPromise` will reject with the same reason as `$promise`.
* If `$promise` rejects, and `$onFulfilledOrRejected` throws or returns a
   rejected promise, `$newPromise` will reject with the thrown exception or
   rejected promise's reason.

`always()` behaves similarly to the synchronous finally statement. When combined
with `otherwise()`, `always()` allows you to write code that is similar to the familiar
synchronous catch/finally pair.

Consider the following synchronous code:

```php
try {
    return doSomething();
} catch(\Exception $e) {
    return handleError($e);
} finally {
    cleanup();
}
```

Similar asynchronous code (with `doSomething()` that returns a promise) can be
written:

```php
return doSomething()
    -&gt;otherwise('handleError')
    -&gt;always('cleanup');
```</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function always(callable
        $onFulfilledOrRejected )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$onFulfilledOrRejected</code>
                —
                callable</dt>
          <dd><br/><br/><br/>      </dd>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>ExtendedPromiseInterface</dt>
          <dd><br/>
        </dd>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
