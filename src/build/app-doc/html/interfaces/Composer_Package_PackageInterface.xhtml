<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Composer\Package\PackageInterface</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml">Interfaces</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml#Composer_Package">Composer\Package</a>
          </li>
          <li class="separator">PackageInterface</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/composer/composer/src/Composer/Package/PackageInterface.php.xhtml#line27">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Composer\Package\</small>PackageInterface</h1>
        <h4>Defines the essential information a package has that is used during solving/installation</h4>
        <p>PackageInterface &amp; derivatives are considered internal, you may use them in type hints but extending/implementing them is not recommended and not supported. Things may change without notice.</p>
        <ul>
          <li>Author: Jordi Boggiano &lt;j.boggiano@seld.be&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">interface PackageInterface
            {<br/><ul class="none"><li>// constants</li><li>const DISPLAY_SOURCE_REF_IF_DEV = 0;</li><li>const DISPLAY_SOURCE_REF = 1;</li><li>const DISPLAY_DIST_REF = 2;</li></ul><ul class="none"><li>// methods</li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getName.xhtml">getName</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyName.xhtml">getPrettyName</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getNames.xhtml">getNames</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setId.xhtml">setId</a>()
                    </li><li>public int <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getId.xhtml">getId</a>()
                    </li><li>public bool <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/isDev.xhtml">isDev</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getType.xhtml">getType</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getTargetDir.xhtml">getTargetDir</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getExtra.xhtml">getExtra</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setInstallationSource.xhtml">setInstallationSource</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getInstallationSource.xhtml">getInstallationSource</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceType.xhtml">getSourceType</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceUrl.xhtml">getSourceUrl</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceUrls.xhtml">getSourceUrls</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceReference.xhtml">getSourceReference</a>()
                    </li><li>public ?array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceMirrors.xhtml">getSourceMirrors</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceMirrors.xhtml">setSourceMirrors</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistType.xhtml">getDistType</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistUrl.xhtml">getDistUrl</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistUrls.xhtml">getDistUrls</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistReference.xhtml">getDistReference</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistSha1Checksum.xhtml">getDistSha1Checksum</a>()
                    </li><li>public ?array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistMirrors.xhtml">getDistMirrors</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistMirrors.xhtml">setDistMirrors</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getVersion.xhtml">getVersion</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyVersion.xhtml">getPrettyVersion</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getFullPrettyVersion.xhtml">getFullPrettyVersion</a>()
                    </li><li>public ?<span title="DateTimeInterface">DateTimeInterface</span> <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getReleaseDate.xhtml">getReleaseDate</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getStability.xhtml">getStability</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getRequires.xhtml">getRequires</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getConflicts.xhtml">getConflicts</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getProvides.xhtml">getProvides</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getReplaces.xhtml">getReplaces</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDevRequires.xhtml">getDevRequires</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSuggests.xhtml">getSuggests</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getAutoload.xhtml">getAutoload</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDevAutoload.xhtml">getDevAutoload</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getIncludePaths.xhtml">getIncludePaths</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setRepository.xhtml">setRepository</a>()
                    </li><li>public ?<span title="RepositoryInterface">RepositoryInterface</span> <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getRepository.xhtml">getRepository</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getBinaries.xhtml">getBinaries</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getUniqueName.xhtml">getUniqueName</a>()
                    </li><li>public ?string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getNotificationUrl.xhtml">getNotificationUrl</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/__toString.xhtml">__toString</a>()
                    </li><li>public string <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyString.xhtml">getPrettyString</a>()
                    </li><li>public bool <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/isDefaultBranch.xhtml">isDefaultBranch</a>()
                    </li><li>public array <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getTransportOptions.xhtml">getTransportOptions</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setTransportOptions.xhtml">setTransportOptions</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceReference.xhtml">setSourceReference</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistUrl.xhtml">setDistUrl</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistType.xhtml">setDistType</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistReference.xhtml">setDistReference</a>()
                    </li><li>public void <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceDistReferences.xhtml">setSourceDistReferences</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="DISPLAY_SOURCE_REF_IF_DEV">DISPLAY_SOURCE_REF_IF_DEV</td>
              <td>0</td>
            </tr>
            <tr>
              <td id="DISPLAY_SOURCE_REF">DISPLAY_SOURCE_REF</td>
              <td>1</td>
            </tr>
            <tr>
              <td id="DISPLAY_DIST_REF">DISPLAY_DIST_REF</td>
              <td>2</td>
            </tr>
          </tbody>
        </table>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__toString"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/__toString.xhtml">__toString()</a>
                — Converts the package into a readable and unique string</li>
            <li id="getAutoload"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getAutoload.xhtml">getAutoload()</a>
                — Returns an associative array of autoloading rules</li>
            <li id="getBinaries"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getBinaries.xhtml">getBinaries()</a>
                — Returns the package binaries</li>
            <li id="getConflicts"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getConflicts.xhtml">getConflicts()</a>
                — Returns a set of links to packages which must not be installed at the same time as this package</li>
            <li id="getDevAutoload"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDevAutoload.xhtml">getDevAutoload()</a>
                — Returns an associative array of dev autoloading rules</li>
            <li id="getDevRequires"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDevRequires.xhtml">getDevRequires()</a>
                — Returns a set of links to packages which are required to develop this package. These are installed if in dev mode.</li>
            <li id="getDistMirrors"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistMirrors.xhtml">getDistMirrors()</a>
                — Returns the dist mirrors of this package</li>
            <li id="getDistReference"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistReference.xhtml">getDistReference()</a>
                — Returns the reference of the distribution archive of this version, e.g. master, 1.0.0 or a commit hash for git</li>
            <li id="getDistSha1Checksum"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistSha1Checksum.xhtml">getDistSha1Checksum()</a>
                — Returns the sha1 checksum for the distribution archive of this version</li>
            <li id="getDistType"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistType.xhtml">getDistType()</a>
                — Returns the type of the distribution archive of this version, e.g. zip, tarball</li>
            <li id="getDistUrl"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistUrl.xhtml">getDistUrl()</a>
                — Returns the url of the distribution archive of this version</li>
            <li id="getDistUrls"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getDistUrls.xhtml">getDistUrls()</a>
                — Returns the urls of the distribution archive of this version, including mirrors</li>
            <li id="getExtra"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getExtra.xhtml">getExtra()</a>
                — Returns the package extra data</li>
            <li id="getFullPrettyVersion"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getFullPrettyVersion.xhtml">getFullPrettyVersion()</a>
                — Returns the pretty version string plus a git or hg commit hash of this package</li>
            <li id="getId"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getId.xhtml">getId()</a>
                — Retrieves the package's id set through setId</li>
            <li id="getIncludePaths"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getIncludePaths.xhtml">getIncludePaths()</a>
                — Returns a list of directories which should get added to PHP's include path.</li>
            <li id="getInstallationSource"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getInstallationSource.xhtml">getInstallationSource()</a>
                — Returns source from which this package was installed (source/dist).</li>
            <li id="getName"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getName.xhtml">getName()</a>
                — Returns the package's name without version info, thus not a unique identifier</li>
            <li id="getNames"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getNames.xhtml">getNames()</a>
                — Returns a set of names that could refer to this package</li>
            <li id="getNotificationUrl"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getNotificationUrl.xhtml">getNotificationUrl()</a>
                — Returns the package notification url</li>
            <li id="getPrettyName"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyName.xhtml">getPrettyName()</a>
                — Returns the package's pretty (i.e. with proper case) name</li>
            <li id="getPrettyString"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyString.xhtml">getPrettyString()</a>
                — Converts the package into a pretty readable string</li>
            <li id="getPrettyVersion"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getPrettyVersion.xhtml">getPrettyVersion()</a>
                — Returns the pretty (i.e. non-normalized) version string of this package</li>
            <li id="getProvides"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getProvides.xhtml">getProvides()</a>
                — Returns a set of links to virtual packages that are provided through this package</li>
            <li id="getReleaseDate"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getReleaseDate.xhtml">getReleaseDate()</a>
                — Returns the release date of the package</li>
            <li id="getReplaces"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getReplaces.xhtml">getReplaces()</a>
                — Returns a set of links to packages which can alternatively be satisfied by installing this package</li>
            <li id="getRepository"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getRepository.xhtml">getRepository()</a>
                — Returns a reference to the repository that owns the package</li>
            <li id="getRequires"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getRequires.xhtml">getRequires()</a>
                — Returns a set of links to packages which need to be installed before this package can be installed</li>
            <li id="getSourceMirrors"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceMirrors.xhtml">getSourceMirrors()</a>
                — Returns the source mirrors of this package</li>
            <li id="getSourceReference"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceReference.xhtml">getSourceReference()</a>
                — Returns the repository reference of this package, e.g. master, 1.0.0 or a commit hash for git</li>
            <li id="getSourceType"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceType.xhtml">getSourceType()</a>
                — Returns the repository type of this package, e.g. git, svn</li>
            <li id="getSourceUrl"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceUrl.xhtml">getSourceUrl()</a>
                — Returns the repository url of this package, e.g. git://github.com/naderman/composer.git</li>
            <li id="getSourceUrls"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSourceUrls.xhtml">getSourceUrls()</a>
                — Returns the repository urls of this package including mirrors, e.g. git://github.com/naderman/composer.git</li>
            <li id="getStability"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getStability.xhtml">getStability()</a>
                — Returns the stability of this package: one of (dev, alpha, beta, RC, stable)</li>
            <li id="getSuggests"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getSuggests.xhtml">getSuggests()</a>
                — Returns a set of package names and reasons why they are useful in combination with this package.</li>
            <li id="getTargetDir"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getTargetDir.xhtml">getTargetDir()</a>
                — Returns the package targetDir property</li>
            <li id="getTransportOptions"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getTransportOptions.xhtml">getTransportOptions()</a>
                — Returns a list of options to download package dist files</li>
            <li id="getType"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getType.xhtml">getType()</a>
                — Returns the package type, e.g. library</li>
            <li id="getUniqueName"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getUniqueName.xhtml">getUniqueName()</a>
                — Returns package unique name, constructed from name and version.</li>
            <li id="getVersion"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/getVersion.xhtml">getVersion()</a>
                — Returns the version of this package</li>
            <li id="isDefaultBranch">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/isDefaultBranch.xhtml">isDefaultBranch()</a>
            </li>
            <li id="isDev"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/isDev.xhtml">isDev()</a>
                — Returns whether the package is a development virtual package or a concrete one</li>
            <li id="setDistMirrors">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistMirrors.xhtml">setDistMirrors()</a>
            </li>
            <li id="setDistReference">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistReference.xhtml">setDistReference()</a>
            </li>
            <li id="setDistType">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistType.xhtml">setDistType()</a>
            </li>
            <li id="setDistUrl">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setDistUrl.xhtml">setDistUrl()</a>
            </li>
            <li id="setId"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setId.xhtml">setId()</a>
                — Allows the solver to set an id for this package to refer to it.</li>
            <li id="setInstallationSource"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setInstallationSource.xhtml">setInstallationSource()</a>
                — Sets source from which this package was installed (source/dist).</li>
            <li id="setRepository"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setRepository.xhtml">setRepository()</a>
                — Stores a reference to the repository that owns the package</li>
            <li id="setSourceDistReferences"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceDistReferences.xhtml">setSourceDistReferences()</a>
                — Set dist and source references and update dist URL for ones that contain a reference</li>
            <li id="setSourceMirrors">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceMirrors.xhtml">setSourceMirrors()</a>
            </li>
            <li id="setSourceReference">
              <a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setSourceReference.xhtml">setSourceReference()</a>
            </li>
            <li id="setTransportOptions"><a title="Composer\Package\PackageInterface" href="../interfaces/Composer_Package_PackageInterface/setTransportOptions.xhtml">setTransportOptions()</a>
                — Configures the list of options to download package dist files</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
