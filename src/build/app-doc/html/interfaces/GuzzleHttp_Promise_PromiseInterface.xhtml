<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GuzzleHttp\Promise\PromiseInterface</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml">Interfaces</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml#GuzzleHttp_Promise">GuzzleHttp\Promise</a>
          </li>
          <li class="separator">PromiseInterface</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ar/www/html/vendor/guzzlehttp/promises/src/PromiseInterface.php.xhtml#line14">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>GuzzleHttp\Promise\</small>PromiseInterface</h1>
        <h4>A promise represents the eventual result of an asynchronous operation.</h4>
        <p>The primary way of interacting with a promise is through its then method,<br/>which registers callbacks to receive either a promise’s eventual value or<br/>the reason why the promise cannot be fulfilled.</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">interface PromiseInterface
            {<br/><ul class="none"><li>// constants</li><li>const PENDING = 'pending';</li><li>const FULFILLED = 'fulfilled';</li><li>const REJECTED = 'rejected';</li></ul><ul class="none"><li>// methods</li><li>public PromiseInterface <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/then.xhtml">then</a>()
                    </li><li>public PromiseInterface <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/otherwise.xhtml">otherwise</a>()
                    </li><li>public string <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/getState.xhtml">getState</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/resolve.xhtml">resolve</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/reject.xhtml">reject</a>()
                    </li><li>public void <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/cancel.xhtml">cancel</a>()
                    </li><li>public mixed <a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/wait.xhtml">wait</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="PENDING">PENDING</td>
              <td>'pending'</td>
            </tr>
            <tr>
              <td id="FULFILLED">FULFILLED</td>
              <td>'fulfilled'</td>
            </tr>
            <tr>
              <td id="REJECTED">REJECTED</td>
              <td>'rejected'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="cancel"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/cancel.xhtml">cancel()</a>
                — Cancels the promise if possible.</li>
            <li id="getState"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/getState.xhtml">getState()</a>
                — Get the state of the promise ("pending", "rejected", or "fulfilled").</li>
            <li id="otherwise"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/otherwise.xhtml">otherwise()</a>
                — Appends a rejection handler callback to the promise, and returns a new promise resolving to the return value of the callback if it is called, or to its original fulfillment value if the promise is instead fulfilled.</li>
            <li id="reject"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/reject.xhtml">reject()</a>
                — Reject the promise with the given reason.</li>
            <li id="resolve"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/resolve.xhtml">resolve()</a>
                — Resolve the promise with the given value.</li>
            <li id="then"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/then.xhtml">then()</a>
                — Appends fulfillment and rejection handlers to the promise, and returns a new promise resolving to the return value of the called handler.</li>
            <li id="wait"><a title="GuzzleHttp\Promise\PromiseInterface" href="../interfaces/GuzzleHttp_Promise_PromiseInterface/wait.xhtml">wait()</a>
                — Waits until the promise completes if possible.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
