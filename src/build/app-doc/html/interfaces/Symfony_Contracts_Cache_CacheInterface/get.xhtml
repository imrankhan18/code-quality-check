<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Contracts\Cache\CacheInterface::get</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#Symfony_Contracts_Cache">Symfony\Contracts\Cache</a>
          </li>
          <li class="separator">
            <a title="Symfony\Contracts\Cache\CacheInterface" href="../../interfaces/Symfony_Contracts_Cache_CacheInterface.xhtml">CacheInterface</a>
          </li>
          <li class="separator">get</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="#throws">Throws</a>
          </li>
          <li>
            <a href="../../source/ar/www/html/vendor/symfony/cache-contracts/CacheInterface.php.xhtml#line45">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Symfony\Contracts\Cache\CacheInterface::</small>get</h1>
        <h4>Fetches a value from the pool or computes it if not found.</h4>
        <p>On cache misses, a callback is called that should return the missing value.
This callback is given a PSR-6 CacheItemInterface instance corresponding to the
requested key, that could be used e.g. for expiration control. It could also
be an ItemInterface instance when its additional features are needed.</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function get(string
        $key,
            callable
        $callback,
            [float
        $beta = NULL,
            [array&amp;
        $metadata = NULL]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$key</code>
                —
                string</dt>
          <dd>The key of the item to retrieve from the cache</dd>
          <dt><code>$callback</code>
                —
                callable</dt>
          <dd>Should return the computed value for the given key/item<br/><br/><br/>      </dd>
          <dt><code>$beta</code>
                —
                float</dt>
          <dd>A float that, as it grows, controls the likeliness of triggering<br/>early expiration. 0 disables it, INF forces immediate expiration.<br/>The default (or providing null) is implementation dependent but should<br/>typically be 1.0, which should provide optimal stampede protection.<br/>                                             See https://en.wikipedia.org/wiki/Cache_stampede#Probabilistic_early_expiration</dd>
          <dt><code>$metadata</code>
                —
                array</dt>
          <dd/>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>mixed</dt>
          <dd/>
        </dl>
        <h2 id="throws">Errors/Exceptions</h2>
        <dl class="styled">
          <dt>
            <code>
              <a title="Psr\Cache\InvalidArgumentException" href="../../interfaces/Psr_Cache_InvalidArgumentException.xhtml">InvalidArgumentException</a>
            </code>
          </dt>
          <dd>When $key is not valid or when $beta is negative</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2022 by Arne Blankerts and Contributors</span>
    </footer>
  </body>
</html>
