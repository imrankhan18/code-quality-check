<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/symfony/service-contracts" file="ResetInterface.php" realpath="/var/www/html/vendor/symfony/service-contracts/ResetInterface.php" size="999" time="2019-05-28T07:50:59+00:00" unixtime="1559029859" sha1="083d3c73735166445313176011c9c660baf03855" relative="ar/www/html/vendor/symfony/service-contracts/ResetInterface.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of the Symfony package.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Contracts</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Service</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13"/>
  <line no="14">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * Provides a way to reset an object to its initial state.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * When calling the "reset()" method on an object, it should be put back to its</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * initial state. This usually means clearing any internal buffers and forwarding</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * the call to internal dependencies. All properties of the object should be put</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * back to the same state it had when it was first ready to use.</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * This method could be called, for example, to recycle objects that are used as</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * services, so that they can be used to handle several requests in the same</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * process loop (note that we advise making your services stateless instead of</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * implementing this interface when possible.)</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="27">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ResetInterface</token>
  </line>
  <line no="28">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">reset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="31"/>
</source>
