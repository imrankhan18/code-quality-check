<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/symfony/string/Inflector" file="FrenchInflector.php" realpath="/var/www/html/vendor/symfony/string/Inflector/FrenchInflector.php" size="6031" time="2022-04-19T10:40:37+00:00" unixtime="1650364837" sha1="51c355ff16ee7b82998c848fcd6e1ebe2166c1df" relative="ar/www/html/vendor/symfony/string/Inflector/FrenchInflector.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of the Symfony package.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Component</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">String</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Inflector</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13"/>
  <line no="14">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * French inflector.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * This class does only inflect nouns; not adjectives nor composed words like "soixante-dix".</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="19">
    <token name="T_FINAL">final</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FrenchInflector</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">InflectorInterface</token>
  </line>
  <line no="20">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * A list of all rules for pluralise.</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     * @see https://la-conjugaison.nouvelobs.com/regles/grammaire/le-pluriel-des-noms-121.php</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PLURALIZE_REGEXP</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// First entry: regexp</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Second entry: replacement</token>
  </line>
  <line no="29"/>
  <line no="30">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "s", "x" or "z" are invariables</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "s", "x" ou "z" sont invariables</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(s|x|z)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "eau" are pluralized with a "x"</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "eau" prennent tous un "x" au pluriel</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(eau)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1x'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="37"/>
  <line no="38">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "au" are pluralized with a "x" excepted "landau"</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "au" prennent un "x" au pluriel sauf "landau"</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(landau)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(au)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1x'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="42"/>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "eu" are pluralized with a "x" excepted "pneu", "bleu", "&#xE9;meu"</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant en "eu" prennent un "x" au pluriel sauf "pneu", "bleu", "&#xE9;meu"</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(pneu|bleu|&#xE9;meu)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(eu)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1x'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "al" are pluralized with a "aux" excepted</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant en "al" se terminent en "aux" sauf</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(bal|carnaval|caracal|chacal|choral|corral|&#xE9;tal|festival|r&#xE9;cital|val)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/al$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1aux'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="52"/>
  <line no="53">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Aspirail, bail, corail, &#xE9;mail, fermail, soupirail, travail, vantail et vitrail font leur pluriel en -aux</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(aspir|b|cor|&#xE9;m|ferm|soupir|trav|vant|vitr)ail$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1aux'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="55"/>
  <line no="56">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Bijou, caillou, chou, genou, hibou, joujou et pou qui prennent un x au pluriel</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(bij|caill|ch|gen|hib|jouj|p)ou$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1oux'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="58"/>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Invariable words</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(cinquante|soixante|mille)$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="61"/>
  <line no="62">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// French titles</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(mon|ma)(sieur|dame|demoiselle|seigneur)$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mes\2s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(Mon|Ma)(sieur|dame|demoiselle|seigneur)$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Mes\2s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66"/>
  <line no="67">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     * A list of all rules for singularize.</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SINGULARIZE_REGEXP</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// First entry: regexp</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Second entry: replacement</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Aspirail, bail, corail, &#xE9;mail, fermail, soupirail, travail, vantail et vitrail font leur pluriel en -aux</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/((aspir|b|cor|&#xE9;m|ferm|soupir|trav|vant|vitr))aux$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1ail'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="76"/>
  <line no="77">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "eau" are pluralized with a "x"</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "eau" prennent tous un "x" au pluriel</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(eau)x$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="80"/>
  <line no="81">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "al" are pluralized with a "aux" expected</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant en "al" se terminent en "aux" sauf</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(amir|anim|arsen|boc|can|capit|capor|chev|crist|g&#xE9;n&#xE9;r|hopit|h&#xF4;pit|id&#xE9;|journ|littor|loc|m|m&#xE9;t|min&#xE9;r|princip|radic|termin)aux$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1al'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="84"/>
  <line no="85">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "au" are pluralized with a "x" excepted "landau"</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "au" prennent un "x" au pluriel sauf "landau"</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(au)x$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Words finishing with "eu" are pluralized with a "x" excepted "pneu", "bleu", "&#xE9;meu"</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant en "eu" prennent un "x" au pluriel sauf "pneu", "bleu", "&#xE9;meu"</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(eu)x$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  Words finishing with "ou" are pluralized with a "s" excepted bijou, caillou, chou, genou, hibou, joujou, pou</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Les mots finissant par "ou" prennent un "s" sauf bijou, caillou, chou, genou, hibou, joujou, pou</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(bij|caill|ch|gen|hib|jouj|p)oux$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\1ou'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="96"/>
  <line no="97">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// French titles</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^mes(dame|demoiselle)s$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ma\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^Mes(dame|demoiselle)s$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Ma\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^mes(sieur|seigneur)s$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mon\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^Mes(sieur|seigneur)s$/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Mon\1'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="102"/>
  <line no="103">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//Default rule</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/s$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="106"/>
  <line no="107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     * A list of words which should not be inflected.</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">     * This list is only used by singularize.</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UNINFLECTED</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(abc&#xE8;s|acc&#xE8;s|abus|albatros|anchois|anglais|autobus|bois|brebis|carquois|cas|chas|colis|concours|corps|cours|cypr&#xE8;s|d&#xE9;c&#xE8;s|devis|discours|dos|embarras|engrais|entrelacs|exc&#xE8;s|fils|fois|g&#xE2;chis|gars|glas|h&#xE9;ros|intrus|jars|jus|kerm&#xE8;s|lacis|legs|lilas|marais|mars|matelas|m&#xE9;pris|mets|mois|mors|obus|os|palais|paradis|parcours|pardessus|pays|plusieurs|poids|pois|pouls|printemps|processus|progr&#xE8;s|puits|pus|rabais|radis|recors|recours|refus|relais|remords|remous|rictus|rhinoc&#xE9;ros|repas|rubis|sas|secours|sens|souris|succ&#xE8;s|talus|tapis|tas|taudis|temps|tiers|univers|velours|verglas|vernis|virus)$/i'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112"/>
  <line no="113">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">singularize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isInflectedWord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="121"/>
  <line no="122">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">SINGULARIZE_REGEXP</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rule</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rule</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124"/>
  <line no="125">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">                </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="129"/>
  <line no="130">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$plural</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="132"/>
  <line no="133">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">pluralize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isInflectedWord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="141"/>
  <line no="142">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">PLURALIZE_REGEXP</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rule</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rule</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="144"/>
  <line no="145">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">                </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regexp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="149"/>
  <line no="150">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$singular</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'s'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="152"/>
  <line no="153">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isInflectedWord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">UNINFLECTED</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="157">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="158"/>
</source>
