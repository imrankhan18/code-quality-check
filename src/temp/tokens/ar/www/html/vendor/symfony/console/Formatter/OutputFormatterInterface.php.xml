<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/symfony/console/Formatter" file="OutputFormatterInterface.php" realpath="/var/www/html/vendor/symfony/console/Formatter/OutputFormatterInterface.php" size="1335" time="2022-04-12T16:02:29+00:00" unixtime="1649779349" sha1="99387196cc903214f82d69bedcb0b6c7499babb9" relative="ar/www/html/vendor/symfony/console/Formatter/OutputFormatterInterface.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of the Symfony package.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Component</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Console</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Formatter</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13"/>
  <line no="14">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * Formatter interface for console output.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * @author Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="19">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">OutputFormatterInterface</token>
  </line>
  <line no="20">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * Sets the decorated flag.</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setDecorated</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">bool</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$decorated</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * Whether the output will decorate messages.</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isDecorated</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="32"/>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     * Sets a new style.</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setStyle</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">OutputFormatterStyleInterface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$style</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37"/>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     * Checks if output formatter has style with specified name.</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">hasStyle</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44"/>
  <line no="45">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     * Gets style options from style with specified name.</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     * @return OutputFormatterStyleInterface</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @throws \InvalidArgumentException When style isn't defined</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getStyle</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="53"/>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     * Formats a message according to the given styles.</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">format</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="61"/>
</source>
