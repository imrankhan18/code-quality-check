<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/react/promise/src" file="ExtendedPromiseInterface.php" realpath="/var/www/html/vendor/react/promise/src/ExtendedPromiseInterface.php" size="3446" time="2022-02-11T10:27:51+00:00" unixtime="1644575271" sha1="a2636d3a31c35d8ae997f0c5aa2162324d5366a0" relative="ar/www/html/vendor/react/promise/src/ExtendedPromiseInterface.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">React</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Promise</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ExtendedPromiseInterface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PromiseInterface</token>
  </line>
  <line no="6">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="7">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT">     * Consumes the promise's ultimate value if the promise fulfills, or handles the</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">     * ultimate error.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">     * It will cause a fatal error if either `$onFulfilled` or</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     * `$onRejected` throw or return a rejected promise.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     * Since the purpose of `done()` is consumption rather than transformation,</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     * `done()` always returns `null`.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">     * @param callable|null $onFulfilled</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">     * @param callable|null $onRejected</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     * @param callable|null $onProgress This argument is deprecated and should not be used anymore.</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">done</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onFulfilled</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onRejected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onProgress</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23"/>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     * Registers a rejection handler for promise. It is a shortcut for:</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * ```php</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     * $promise-&gt;then(null, $onRejected);</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * ```</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     * Additionally, you can type hint the `$reason` argument of `$onRejected` to catch</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     * only specific errors.</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     * @param callable $onRejected</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @return ExtendedPromiseInterface</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">otherwise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onRejected</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     * Allows you to execute "cleanup" type tasks in a promise chain.</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * It arranges for `$onFulfilledOrRejected` to be called, with no arguments,</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     * when the promise is either fulfilled or rejected.</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     * * If `$promise` fulfills, and `$onFulfilledOrRejected` returns successfully,</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     *    `$newPromise` will fulfill with the same value as `$promise`.</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * * If `$promise` fulfills, and `$onFulfilledOrRejected` throws or returns a</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     *    rejected promise, `$newPromise` will reject with the thrown exception or</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     *    rejected promise's reason.</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * * If `$promise` rejects, and `$onFulfilledOrRejected` returns successfully,</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     *    `$newPromise` will reject with the same reason as `$promise`.</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     * * If `$promise` rejects, and `$onFulfilledOrRejected` throws or returns a</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">     *    rejected promise, `$newPromise` will reject with the thrown exception or</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     *    rejected promise's reason.</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     * `always()` behaves similarly to the synchronous finally statement. When combined</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * with `otherwise()`, `always()` allows you to write code that is similar to the familiar</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     * synchronous catch/finally pair.</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT">     * Consider the following synchronous code:</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * ```php</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * try {</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     *     return doSomething();</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     * } catch(\Exception $e) {</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     *     return handleError($e);</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * } finally {</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     *     cleanup();</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     * }</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     * ```</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">     * Similar asynchronous code (with `doSomething()` that returns a promise) can be</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">     * written:</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * ```php</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * return doSomething()</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     *     -&gt;otherwise('handleError')</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">     *     -&gt;always('cleanup');</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     * ```</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * @param callable $onFulfilledOrRejected</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * @return ExtendedPromiseInterface</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">always</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onFulfilledOrRejected</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     * Registers a handler for progress updates from promise. It is a shortcut for:</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">     * ```php</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">     * $promise-&gt;then(null, null, $onProgress);</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">     * ```</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">     * @param callable $onProgress</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     * @return ExtendedPromiseInterface</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">     * @deprecated 2.6.0 Progress support is deprecated and should not be used anymore.</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">progress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onProgress</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="99"/>
</source>
