<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/react/promise/src" file="PromiseInterface.php" realpath="/var/www/html/vendor/react/promise/src/PromiseInterface.php" size="1784" time="2022-02-11T10:27:51+00:00" unixtime="1644575271" sha1="f79c4aa00994ba5640c0efbe611bb3ef8aa96a90" relative="ar/www/html/vendor/react/promise/src/PromiseInterface.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">React</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Promise</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PromiseInterface</token>
  </line>
  <line no="6">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="7">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT">     * Transforms a promise's value by applying a function to the promise's fulfillment</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">     * or rejection value. Returns a new promise for the transformed result.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">     * The `then()` method registers new fulfilled and rejection handlers with a promise</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     * (all parameters are optional):</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     *  * `$onFulfilled` will be invoked once the promise is fulfilled and passed</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     *     the result as the first argument.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">     *  * `$onRejected` will be invoked once the promise is rejected and passed the</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">     *     reason as the first argument.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">     *  * `$onProgress` (deprecated) will be invoked whenever the producer of the promise</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     *     triggers progress notifications and passed a single argument (whatever it</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     *     wants) to indicate progress.</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * It returns a new promise that will fulfill with the return value of either</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     * `$onFulfilled` or `$onRejected`, whichever is called, or will reject with</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     * the thrown exception if either throws.</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     * A promise makes the following guarantees about handlers registered in</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * the same call to `then()`:</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     *  1. Only one of `$onFulfilled` or `$onRejected` will be called,</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     *      never both.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     *  2. `$onFulfilled` and `$onRejected` will never be called more</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     *      than once.</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     *  3. `$onProgress` (deprecated) may be called multiple times.</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @param callable|null $onFulfilled</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @param callable|null $onRejected</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     * @param callable|null $onProgress This argument is deprecated and should not be used anymore.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * @return PromiseInterface</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">then</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onFulfilled</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onRejected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CALLABLE">callable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$onProgress</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="41">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="42"/>
</source>
