<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/friendsofphp/php-cs-fixer/src/Fixer/Operator" file="IncrementStyleFixer.php" realpath="/var/www/html/vendor/friendsofphp/php-cs-fixer/src/Fixer/Operator/IncrementStyleFixer.php" size="5466" time="2022-03-18T17:20:59+00:00" unixtime="1647624059" sha1="e7e6ab953a8232561cb10f58d17ee9383515e600" relative="ar/www/html/vendor/friendsofphp/php-cs-fixer/src/Fixer/Operator/IncrementStyleFixer.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> * This file is part of PHP CS Fixer.</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> *     Dariusz Rumi&#x144;ski &lt;dariusz.ruminski@gmail.com&gt;</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="11">
    <token name="T_COMMENT"> * This source file is subject to the MIT license that is bundled</token>
  </line>
  <line no="12">
    <token name="T_COMMENT"> * with this source code in the file LICENSE.</token>
  </line>
  <line no="13">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Fixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Operator</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="16"/>
  <line no="17">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Fixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AbstractIncrementOperatorFixer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="18">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Fixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ConfigurableFixerInterface</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerConfiguration</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerConfigurationResolver</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerConfiguration</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerConfigurationResolverInterface</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerConfiguration</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerOptionBuilder</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerDefinition</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">CodeSample</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerDefinition</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerDefinition</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerDefinition</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">FixerDefinitionInterface</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Tokenizer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">CT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Tokenizer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Tokens</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpCsFixer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Tokenizer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">TokensAnalyzer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> * @author Gregor Harlan &lt;gharlan@web.de&gt;</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT"> * @author Kuba Wer&#x142;os &lt;werlos@gmail.com&gt;</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="33">
    <token name="T_FINAL">final</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">IncrementStyleFixer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AbstractIncrementOperatorFixer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ConfigurableFixerInterface</token>
  </line>
  <line no="34">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @internal</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STYLE_PRE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'pre'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="39"/>
  <line no="40">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     * @internal</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STYLE_POST</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'post'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44"/>
  <line no="45">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getDefinition</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FixerDefinitionInterface</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FixerDefinition</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Pre- or post-increment and decrement operators should be used if possible.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">                </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CodeSample</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;?php\n\$a++;\n\$b--;\n"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">                </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CodeSample</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;?php\n++\$a;\n--\$b;\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'style'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_POST</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="61"/>
  <line no="62">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     * Must run after StandardizeIncrementFixer.</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getPriority</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="71"/>
  <line no="72">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isCandidate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isAnyTokenKindsFound</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_INC</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_DEC</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="79"/>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">createConfigurationDefinition</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FixerConfigurationResolverInterface</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FixerConfigurationResolver</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FixerOptionBuilder</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'style'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Whether to use pre- or post-increment and decrement operators.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setAllowedValues</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_PRE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_POST</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDefault</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_PRE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getOption</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">applyFix</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SplFileInfo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">void</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tokensAnalyzer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokensAnalyzer</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99"/>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DEC">--</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="102"/>
  <line no="103">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isGivenKind</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_INC</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_DEC</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="106"/>
  <line no="107">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_PRE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'style'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokensAnalyzer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isUnarySuccessorOperator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="109"/>
  <line no="110">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">equalsAny</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="113"/>
  <line no="114">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$startIndex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">findStart</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prevToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getPrevMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$startIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="116"/>
  <line no="117">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$prevToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">equalsAny</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'{'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'}'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_OPEN_TAG</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">clearAt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">insertAt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$startIndex</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLONE">clone</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">STYLE_POST</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'style'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokensAnalyzer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isUnaryPredecessorOperator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prevToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getPrevMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="123"/>
  <line no="124">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$prevToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">equalsAny</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'{'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'}'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_OPEN_TAG</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="127"/>
  <line no="128">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$endIndex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">findEnd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$endIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130"/>
  <line no="131">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">equalsAny</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">clearAt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">insertAt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextNonWhitespace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$endIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLONE">clone</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="138"/>
  <line no="139">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">findEnd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="143"/>
  <line no="144">
    <token name="T_WHITESPACE">        </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">equalsAny</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'$'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'('</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">CT</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">T_DYNAMIC_PROP_BRACE_OPEN</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">CT</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">T_DYNAMIC_VAR_BRACE_OPEN</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">CT</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">T_ARRAY_INDEX_CURLY_BRACE_OPEN</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_NS_SEPARATOR</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_STATIC</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_STRING</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_VARIABLE</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$blockType</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Tokens</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">detectBlockType</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="157"/>
  <line no="158">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blockType</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">findBlockEnd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blockType</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="161"/>
  <line no="162">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="166"/>
  <line no="167">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isObjectOperator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">findEnd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="170"/>
  <line no="171">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextToken</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isGivenKind</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">T_PAAMAYIM_NEKUDOTAYIM</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">findEnd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNextMeaningfulToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nextIndex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="174"/>
  <line no="175">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$index</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="177">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="178"/>
</source>
