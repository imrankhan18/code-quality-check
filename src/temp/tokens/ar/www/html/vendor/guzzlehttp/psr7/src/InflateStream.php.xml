<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/guzzlehttp/psr7/src" file="InflateStream.php" realpath="/var/www/html/vendor/guzzlehttp/psr7/src/InflateStream.php" size="1336" time="2022-03-20T21:55:58+00:00" unixtime="1647813358" sha1="281a1090cb030988a19dc43e7c3b2a1e30b066d9" relative="ar/www/html/vendor/guzzlehttp/psr7/src/InflateStream.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">GuzzleHttp</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Psr7</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Psr</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Http</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Message</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">StreamInterface</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="8"/>
  <line no="9">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * Uses PHP's zlib.inflate filter to inflate zlib (HTTP deflate, RFC1950) or gzipped (RFC1952) content.</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * This stream decorator converts the provided stream to a PHP stream resource,</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * then appends the zlib.inflate filter. The stream is then converted back</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * to a Guzzle stream resource to be used as a Guzzle stream.</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * @link http://tools.ietf.org/html/rfc1950</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * @link http://tools.ietf.org/html/rfc1952</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * @link http://php.net/manual/en/filters.compression.php</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="20">
    <token name="T_FINAL">final</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">InflateStream</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">StreamInterface</token>
  </line>
  <line no="21">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">    </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">StreamDecoratorTrait</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23"/>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">StreamInterface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stream</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$resource</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">StreamWrapper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getResource</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$stream</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Specify window=15+32, so zlib will use header detection to both gzip (with header) and zlib data</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// See http://www.zlib.net/manual.html#Advanced definition of inflateInit2</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// "Add 32 to windowBits to enable zlib and gzip decoding with automatic header detection"</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Default window size is 15.</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">stream_filter_append</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$resource</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'zlib.inflate'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STREAM_FILTER_READ</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'window'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">15</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">32</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">stream</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stream</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isSeekable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Stream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$resource</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">NoSeekStream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Stream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$resource</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="34">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="35"/>
</source>
