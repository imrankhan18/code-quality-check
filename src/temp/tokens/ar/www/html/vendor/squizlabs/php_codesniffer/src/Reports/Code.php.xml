<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="//var/www/html/vendor/squizlabs/php_codesniffer/src/Reports" file="Code.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/src/Reports/Code.php" size="13006" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="5f486b913018ffe96aa669834fae5db113dfbd40" relative="ar/www/html/vendor/squizlabs/php_codesniffer/src/Reports/Code.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Full report for PHP_CodeSniffer.</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * @author    Greg Sherwood &lt;gsherwood@squiz.net&gt;</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * @copyright 2006-2015 Squiz Pty Ltd (ABN 77 084 670 600)</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="9"/>
  <line no="10">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Reports</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Files</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">File</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Util</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Report</token>
  </line>
  <line no="16">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="17"/>
  <line no="18"/>
  <line no="19">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     * Generate a partial report for a single processed file.</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * Function should return TRUE if it printed or stored data about the file</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     * and FALSE if it ignored the file. Returning TRUE indicates that the file and</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     * its data should be counted in the grand totals.</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     * @param array                 $report      Prepared report data.</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * @param \PHP_CodeSniffer\File $phpcsFile   The file being reported on.</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     * @param bool                  $showSources Show sources?</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * @param int                   $width       Maximum allowed line width.</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">generateFileReport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">File</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$showSources</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// Nothing to print.</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="39"/>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// How many lines to show about and below the error line.</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$surroundingLines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42"/>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filename'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTokens</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_CODESNIFFER_VERBOSITY</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$startTime</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">microtime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">                </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CODE report is parsing '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_CODESNIFFER_VERBOSITY</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">                </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">CODE report is forcing parse of </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="52"/>
  <line no="53">
    <token name="T_WHITESPACE">            </token>
    <token name="T_TRY">try</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CATCH">catch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">                </token>
    <token name="T_COMMENT">// This is a second parse, so ignore exceptions.</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">                </token>
    <token name="T_COMMENT">// They would have been added to the file's error list already.</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="59"/>
  <line no="60">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_CODESNIFFER_VERBOSITY</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">microtime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$startTime</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1000</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1000</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">round</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">DONE in </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">ms</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">round</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1000</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">DONE in </token>
    <token name="T_VARIABLE">$timeTaken</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> secs</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="69"/>
  <line no="70">
    <token name="T_WHITESPACE">                </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="72"/>
  <line no="73">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTokens</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end if</token>
  </line>
  <line no="75"/>
  <line no="76">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Create an array that maps lines to the first token on the line.</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'end'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'end'</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="93"/>
  <line no="94">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Make sure the last token in the file sits on an imaginary</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// last line so it is easier to generate code snippets at the</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// end of the file.</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'end'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98"/>
  <line no="99">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Determine the longest code line we will be showing.</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$maxSnippetLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$eolLen</token>
    <token name="T_WHITESPACE">           </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">eolChar</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'messages'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$startLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$surroundingLines</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$endLine</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">min</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$surroundingLines</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="105"/>
  <line no="106">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$maxLineNumLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$endLine</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="107"/>
  <line no="108">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$startLine</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endLine</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="112"/>
  <line no="113">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$lineLength</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'length'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$eolLen</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$maxSnippetLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineLength</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maxSnippetLength</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="117"/>
  <line no="118">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$maxSnippetLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxLineNumLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="119"/>
  <line no="120">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Determine the longest error message we will be showing.</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$maxErrorLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'messages'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$colErrors</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$colErrors</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showSources</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'source'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="129"/>
  <line no="130">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$maxErrorLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxErrorLength</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="134"/>
  <line no="135">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// The padding that all lines will require that are printing an error message overflow.</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$typeLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">7</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$typeLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">5</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="141"/>
  <line no="142">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxLineNumLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">7</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$typeLength</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fixable'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'    '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="148"/>
  <line no="149">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$errorPaddingLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="150"/>
  <line no="151">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// The maximum amount of space an error message can use.</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$maxErrorSpace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorPaddingLength</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showSources</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// Account for the chars used to print colors.</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$maxErrorSpace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">8</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="157"/>
  <line no="158">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Figure out the max report width we need and can use.</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$fileLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$maxWidth</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fileLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxErrorLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorPaddingLength</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">min</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maxWidth</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maxSnippetLength</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">70</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">70</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="165"/>
  <line no="166">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Print the file header.</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[1mFILE: "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fileLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'...'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fileLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="173"/>
  <line no="174">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="176"/>
  <line no="177">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[1m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'FOUND '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' ERROR'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'S'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="181"/>
  <line no="182">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' AND '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' WARNING'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">                </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'S'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="188"/>
  <line no="189">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' AFFECTING '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'messages'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' LINE'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'messages'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="191">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'S'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="193"/>
  <line no="194">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="195"/>
  <line no="196">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'messages'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$startLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$surroundingLines</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$endLine</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">min</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$surroundingLines</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lastLine</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="199"/>
  <line no="200">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$startLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$startLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$endLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'end'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineTokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'start'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">// Starting a new line.</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[1m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&gt;&gt; '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'   '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="211"/>
  <line no="212">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxLineNumLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">':  '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="218"/>
  <line no="219">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'orig_content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'orig_content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="224"/>
  <line no="225">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\t"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_OS</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$tab</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\000"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$tab</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[30;1m&#xBB;\033[0m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="233"/>
  <line no="234">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">tokenizer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">replaceTabsInToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tab</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\000"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="237"/>
  <line no="238">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Util</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Common</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">prepareForOutput</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\t"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\000"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="240"/>
  <line no="241">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$underline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="242">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$snippetLine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'column'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="243">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$underline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="245"/>
  <line no="246">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_COMMENT">// Underline invisible characters as well.</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$underline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[4m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$underline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[4m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="253"/>
  <line no="254">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokenContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="255"/>
  <line no="256">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$underline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end for</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end if</token>
  </line>
  <line no="262"/>
  <line no="263">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="264"/>
  <line no="265">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lineErrors</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$colErrors</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$colErrors</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$padding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxLineNumLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LINE '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$padding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">': '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="269"/>
  <line no="270">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ERROR'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[31mERROR\033[0m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warnings'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'  '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="274">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="275">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="276">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[33mWARNING\033[0m"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="277">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="278"/>
  <line no="279">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="280">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fixable'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="281">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fixable'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'x'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="287"/>
  <line no="288">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'] '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="289">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="290"/>
  <line no="291">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="292">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$errorPadding</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showSources</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[1m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' ('</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'source'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="296"/>
  <line no="297">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$errorMsg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">wordwrap</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="299">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$maxErrorSpace</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="300">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$errorPadding</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="302"/>
  <line no="303">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorMsg</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="304">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end foreach</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end foreach</token>
  </line>
  <line no="306"/>
  <line no="307">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="308">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">rtrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$snippet</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="309">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end foreach</token>
  </line>
  <line no="310"/>
  <line no="311">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="312">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fixable'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="313">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[1m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PHPCBF CAN FIX THE '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$report</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fixable'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' MARKED SNIFF VIOLATIONS AUTOMATICALLY'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\033[0m"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="314">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">PHP_EOL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="315">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="316"/>
  <line no="317">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="318"/>
  <line no="319">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end generateFileReport()</token>
  </line>
  <line no="320"/>
  <line no="321"/>
  <line no="322">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="323">
    <token name="T_DOC_COMMENT">     * Prints all errors and warnings for each file processed.</token>
  </line>
  <line no="324">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="325">
    <token name="T_DOC_COMMENT">     * @param string $cachedData    Any partial report data that was returned from</token>
  </line>
  <line no="326">
    <token name="T_DOC_COMMENT">     *                              generateFileReport during the run.</token>
  </line>
  <line no="327">
    <token name="T_DOC_COMMENT">     * @param int    $totalFiles    Total number of files processed during the run.</token>
  </line>
  <line no="328">
    <token name="T_DOC_COMMENT">     * @param int    $totalErrors   Total number of errors found during the run.</token>
  </line>
  <line no="329">
    <token name="T_DOC_COMMENT">     * @param int    $totalWarnings Total number of warnings found during the run.</token>
  </line>
  <line no="330">
    <token name="T_DOC_COMMENT">     * @param int    $totalFixable  Total number of problems that can be fixed.</token>
  </line>
  <line no="331">
    <token name="T_DOC_COMMENT">     * @param bool   $showSources   Show sources?</token>
  </line>
  <line no="332">
    <token name="T_DOC_COMMENT">     * @param int    $width         Maximum allowed line width.</token>
  </line>
  <line no="333">
    <token name="T_DOC_COMMENT">     * @param bool   $interactive   Are we running in interactive mode?</token>
  </line>
  <line no="334">
    <token name="T_DOC_COMMENT">     * @param bool   $toScreen      Is the report being printed to screen?</token>
  </line>
  <line no="335">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="336">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="337">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="338">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">generate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="339">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cachedData</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$totalFiles</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$totalErrors</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$totalWarnings</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="343">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$totalFixable</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="344">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$showSources</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">80</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="346">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$interactive</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="347">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$toScreen</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">true</token>
  </line>
  <line no="348">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="349">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cachedData</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="350">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="351">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="352"/>
  <line no="353">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cachedData</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="354"/>
  <line no="355">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$toScreen</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$interactive</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="356">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">Util</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Timing</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">printRunTime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="357">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="358"/>
  <line no="359">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end generate()</token>
  </line>
  <line no="360"/>
  <line no="361"/>
  <line no="362">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end class</token>
  </line>
  <line no="363"/>
</source>
