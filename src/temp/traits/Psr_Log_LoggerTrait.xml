<?xml version="1.0" encoding="UTF-8"?>
<trait xmlns="http://xml.phpdox.net/src" full="Psr\Log\LoggerTrait" namespace="Psr\Log" name="LoggerTrait" abstract="false" final="false" start="13" end="142">
  <file path="//var/www/html/vendor/psr/log/Psr/Log" file="LoggerTrait.php" realpath="/var/www/html/vendor/psr/log/Psr/Log/LoggerTrait.php" size="3415" time="2021-05-03T11:20:27+00:00" unixtime="1620040827" sha1="e92178263ca4167d1ae74a1316aff47909a643b5" relative="ar/www/html/vendor/psr/log/Psr/Log/LoggerTrait.php"/>
  <docblock>
    <description compact="This is a simple Logger trait that classes unable to extend AbstractLogger (because they extend another class, etc) can include.">It simply delegates all log-level-specific methods to the `log` method to
reduce boilerplate code that a simple Logger that does the same thing with
messages regardless of the error level has to implement.</description>
  </docblock>
  <method name="emergency" start="23" end="26" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="System is unusable."/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="alert" start="39" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="critical" start="54" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="error" start="68" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="warning" start="84" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="notice" start="97" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Normal but significant events."/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="info" start="112" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="debug" start="125" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Detailed debug information."/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="log" start="141" end="141" abstract="true" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Logs with an arbitrary level."/>
      <param type="mixed" variable="$level"/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
      </return>
      <throws type="object">
        <type full="\Psr\Log\InvalidArgumentException" namespace="\Psr\Log" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
</trait>
