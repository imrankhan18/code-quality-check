<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Psr\EventDispatcher\StoppableEventInterface" namespace="Psr\EventDispatcher" name="StoppableEventInterface" abstract="false" final="false" start="13" end="26">
  <file path="//var/www/html/vendor/psr/event-dispatcher/src" file="StoppableEventInterface.php" realpath="/var/www/html/vendor/psr/event-dispatcher/src/StoppableEventInterface.php" size="785" time="2019-01-08T18:20:26+00:00" unixtime="1546971626" sha1="592de632fb2271db13162292e62761b32d879b9d" relative="ar/www/html/vendor/psr/event-dispatcher/src/StoppableEventInterface.php"/>
  <docblock>
    <description compact="An Event whose processing may be interrupted when the event has been handled.">A Dispatcher implementation MUST check to determine if an Event
is marked as stopped after each listener is called.  If it is then it should
return immediately without calling any further Listeners.</description>
  </docblock>
  <method name="isPropagationStopped" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is propagation stopped?">This will typically only be used by the Dispatcher to determine if the
previous listener halted propagation.</description>
      <return type="object">True if the Event is complete and no further listeners should be called.
  False to continue calling listeners.<type full="Psr\EventDispatcher\bool" namespace="Psr\EventDispatcher" name="bool"/></return>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <implementors>
    <class full="PhpCsFixer\FixerFileProcessedEvent" namespace="PhpCsFixer" name="FixerFileProcessedEvent"/>
    <class full="Symfony\Component\Console\Event\ConsoleErrorEvent" namespace="Symfony\Component\Console\Event" name="ConsoleErrorEvent"/>
    <class full="Symfony\Component\Console\Event\ConsoleTerminateEvent" namespace="Symfony\Component\Console\Event" name="ConsoleTerminateEvent"/>
    <class full="Symfony\Component\Console\Event\ConsoleCommandEvent" namespace="Symfony\Component\Console\Event" name="ConsoleCommandEvent"/>
    <class full="Symfony\Component\Console\Event\ConsoleEvent" namespace="Symfony\Component\Console\Event" name="ConsoleEvent"/>
    <class full="Symfony\Component\Console\Event\ConsoleSignalEvent" namespace="Symfony\Component\Console\Event" name="ConsoleSignalEvent"/>
    <class full="Symfony\Component\EventDispatcher\GenericEvent" namespace="Symfony\Component\EventDispatcher" name="GenericEvent"/>
    <class full="Symfony\Contracts\EventDispatcher\Event" namespace="Symfony\Contracts\EventDispatcher" name="Event"/>
  </implementors>
</interface>
