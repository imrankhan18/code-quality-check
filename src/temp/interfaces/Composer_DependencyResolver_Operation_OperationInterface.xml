<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Composer\DependencyResolver\Operation\OperationInterface" namespace="Composer\DependencyResolver\Operation" name="OperationInterface" abstract="false" final="false" start="20" end="43">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/DependencyResolver/Operation" file="OperationInterface.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/DependencyResolver/Operation/OperationInterface.php" size="945" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="be6415b99eece523d947c345d5832745da935d79" relative="ar/www/html/vendor/composer/composer/src/Composer/DependencyResolver/Operation/OperationInterface.php"/>
  <docblock>
    <description compact="Solver operation interface."/>
    <author value="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
  </docblock>
  <method name="getOperationType" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns operation type."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="show" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Serializes the operation in a human readable format"/>
      <param description="Whether this is an operation on the lock file" type="object" variable="$lock">
        <type full="Composer\DependencyResolver\Operation\bool" namespace="Composer\DependencyResolver\Operation" name="bool"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="lock" byreference="false" type="bool"/>
  </method>
  <method name="__toString" start="42" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Serializes the operation in a human readable format"/>
      <return type="string"/>
    </docblock>
  </method>
  <implementors>
    <class full="Composer\DependencyResolver\Operation\MarkAliasUninstalledOperation" namespace="Composer\DependencyResolver\Operation" name="MarkAliasUninstalledOperation"/>
    <class full="Composer\DependencyResolver\Operation\MarkAliasUninstalledOperation" namespace="Composer\DependencyResolver\Operation" name="MarkAliasUninstalledOperation"/>
    <class full="Composer\DependencyResolver\Operation\SolverOperation" namespace="Composer\DependencyResolver\Operation" name="SolverOperation"/>
    <class full="Composer\DependencyResolver\Operation\UpdateOperation" namespace="Composer\DependencyResolver\Operation" name="UpdateOperation"/>
    <class full="Composer\DependencyResolver\Operation\UpdateOperation" namespace="Composer\DependencyResolver\Operation" name="UpdateOperation"/>
    <class full="Composer\DependencyResolver\Operation\UninstallOperation" namespace="Composer\DependencyResolver\Operation" name="UninstallOperation"/>
    <class full="Composer\DependencyResolver\Operation\UninstallOperation" namespace="Composer\DependencyResolver\Operation" name="UninstallOperation"/>
    <class full="Composer\DependencyResolver\Operation\InstallOperation" namespace="Composer\DependencyResolver\Operation" name="InstallOperation"/>
    <class full="Composer\DependencyResolver\Operation\InstallOperation" namespace="Composer\DependencyResolver\Operation" name="InstallOperation"/>
    <class full="Composer\DependencyResolver\Operation\MarkAliasInstalledOperation" namespace="Composer\DependencyResolver\Operation" name="MarkAliasInstalledOperation"/>
    <class full="Composer\DependencyResolver\Operation\MarkAliasInstalledOperation" namespace="Composer\DependencyResolver\Operation" name="MarkAliasInstalledOperation"/>
  </implementors>
</interface>
