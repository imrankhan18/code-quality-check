<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface" abstract="false" final="false" start="23" end="242">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/IO" file="IOInterface.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/IO/IOInterface.php" size="8226" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="cd919eec8e393bce48f4708e44f72131186ff6d9" relative="ar/www/html/vendor/composer/composer/src/Composer/IO/IOInterface.php"/>
  <docblock>
    <description compact="The Input/Output helper interface."/>
    <author value="FranÃ§ois Pluchino &lt;francois.pluchino@opendisplay.com&gt;"/>
  </docblock>
  <extends full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
  <constant type="{unknown}" name="QUIET" value="1"/>
  <constant type="{unknown}" name="NORMAL" value="2"/>
  <constant type="{unknown}" name="VERBOSE" value="4"/>
  <constant type="{unknown}" name="VERY_VERBOSE" value="8"/>
  <constant type="{unknown}" name="DEBUG" value="16"/>
  <method name="isInteractive" start="36" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this input means interactive?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isVerbose" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this output verbose?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isVeryVerbose" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is the output very verbose?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isDebug" start="57" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is the output in debug verbosity?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isDecorated" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this output decorated?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="write" start="75" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the output."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeError" start="86" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the error output."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeRaw" start="97" end="97" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the output, without formatting it."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeErrorRaw" start="108" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the error output, without formatting it."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="overwrite" start="120" end="120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Overwrites a previous message to the output."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="The size of line" type="int" variable="$size"/>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" nullable="true" type="int" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="overwriteError" start="132" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Overwrites a previous message to the error output."/>
      <param description="The message as an array of lines or a single string" type="array" variable="$messages" of="object">
        <type full="Composer\IO\string|string" namespace="Composer\IO" name="string|string"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="The size of line" type="int" variable="$size"/>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" nullable="true" type="int" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="ask" start="143" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a question to the user."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="The default answer if none is given by the user" type="object" variable="$default">
        <type full="Composer\IO\string|bool|int|float|null" namespace="Composer\IO" name="string|bool|int|float|null"/>
      </param>
      <throws description="If there is no data to read in the input stream" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return description="The user answer" type="mixed"/>
    </docblock>
    <parameter name="question" byreference="false" type="string"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askConfirmation" start="155" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a confirmation to the user.">The question will be asked until the user answers by nothing, yes, or no.</description>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="The default answer if the user enters nothing" type="object" variable="$default">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <return description="true if the user has confirmed, false otherwise" type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
    <parameter name="question" byreference="false" type="string"/>
    <parameter name="default" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="askAndValidate" start="172" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks for a value and validates the response.">The validator receives the data to validate. It must return the
validated data when the data is valid and throw an exception
otherwise.</description>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="A PHP callback" type="object" variable="$validator">
        <type full="Composer\IO\callable" namespace="Composer\IO" name="callable"/>
      </param>
      <param description="Max number of times to ask before giving up (default of null means infinite)" type="object" variable="$attempts">
        <type full="Composer\IO\null|int" namespace="Composer\IO" name="null|int"/>
      </param>
      <param description="The default answer if none is given by the user" type="mixed" variable="$default"/>
      <throws description="When any of the validators return an error" type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
      <return type="mixed"/>
    </docblock>
    <parameter name="question" byreference="false" type="string"/>
    <parameter name="validator" byreference="false" type="callable"/>
    <parameter name="attempts" byreference="false" nullable="true" type="int" default="NULL"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askAndHideAnswer" start="181" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a question to the user and hide the answer."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <return description="The answer" type="object">
        <type full="Composer\IO\string|null" namespace="Composer\IO" name="string|null"/>
      </return>
    </docblock>
    <parameter name="question" byreference="false" type="string"/>
  </method>
  <method name="select" start="196" end="196" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks the user to select a value."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="List of choices to pick from" type="array" variable="$choices" of="object">
        <type full="Composer\IO\string" namespace="Composer\IO" name="string"/>
      </param>
      <param description="The default answer if the user enters nothing" type="object" variable="$default">
        <type full="Composer\IO\bool|string" namespace="Composer\IO" name="bool|string"/>
      </param>
      <param description="Max number of times to ask before giving up (false by default, which means infinite)" type="object" variable="$attempts">
        <type full="Composer\IO\bool|int" namespace="Composer\IO" name="bool|int"/>
      </param>
      <param description="Message which will be shown if invalid value from choice list would be picked" type="string" variable="$errorMessage"/>
      <param description="Select more than one value separated by comma" type="object" variable="$multiselect">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return description="The selected value or values (the key of the choices array)" type="array" of="object">
        <type full="Composer\IO\int|string|string[]|bo" namespace="Composer\IO" name="int|string|string[]|bo"/>
      </return>
    </docblock>
    <parameter name="question" byreference="false" type="string"/>
    <parameter name="choices" byreference="false" type="array"/>
    <parameter name="default" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="boolean" default="false"/>
    <parameter name="errorMessage" byreference="false" type="string" default="'Value &quot;%s&quot; is invalid'"/>
    <parameter name="multiselect" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getAuthentications" start="203" end="203" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all authentication information entered."/>
      <return description="array{username: string|null, password: string|null}&gt; The map of authentication data" type="object">
        <type full="Composer\IO\array&lt;string" namespace="Composer\IO" name="array&lt;string"/>
      </return>
    </docblock>
  </method>
  <method name="hasAuthentication" start="212" end="212" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verify if the repository has a authentication information."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="string"/>
  </method>
  <method name="getAuthentication" start="221" end="221" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the username and password of repository."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <return description="string|null, password: string|null}" type="object">
        <type full="Composer\IO\array{username:" namespace="Composer\IO" name="array{username:"/>
      </return>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="string"/>
  </method>
  <method name="setAuthentication" start="232" end="232" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the authentication information for the repository."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <param description="The username" type="string" variable="$username"/>
      <param description="The password" type="object" variable="$password">
        <type full="Composer\IO\null|string" namespace="Composer\IO" name="null|string"/>
      </param>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="string"/>
    <parameter name="username" byreference="false" type="string"/>
    <parameter name="password" byreference="false" nullable="true" type="string" default="NULL"/>
  </method>
  <method name="loadConfiguration" start="241" end="241" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Loads authentications from a config instance"/>
      <param type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
      <return type="object">
        <type full="Composer\IO\void" namespace="Composer\IO" name="void"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
  </method>
  <implementors>
    <class full="Composer\IO\BufferIO" namespace="Composer\IO" name="BufferIO"/>
    <class full="Composer\IO\NullIO" namespace="Composer\IO" name="NullIO"/>
    <class full="Composer\IO\BaseIO" namespace="Composer\IO" name="BaseIO"/>
    <class full="Composer\IO\ConsoleIO" namespace="Composer\IO" name="ConsoleIO"/>
  </implementors>
  <parent full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface">
    <method name="emergency" start="30" end="30" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="System is unusable."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="alert" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="critical" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="error" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="warning" start="79" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="notice" start="89" end="89" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Normal but significant events."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="info" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="debug" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Detailed debug information."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="log" start="124" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Logs with an arbitrary level."/>
        <param type="mixed" variable="$level"/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
        <throws type="object">
          <type full="\Psr\Log\InvalidArgumentException" namespace="\Psr\Log" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="level" byreference="false" type="{unknown}"/>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
  </parent>
</interface>
