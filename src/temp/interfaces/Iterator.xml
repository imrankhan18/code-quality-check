<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Iterator" namespace="" name="Iterator">
  <extends name="Traversable" full="Traversable"/>
  <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the current element"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the key of the current element"/>
      <return type="scalar"/>
    </docblock>
  </method>
  <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move forward to next element">Moves the current position to the next element.</description>
      <return type="void"/>
    </docblock>
  </method>
  <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the Iterator to the first element">Rewinds back to the first element of the Iterator.</description>
      <return type="void"/>
    </docblock>
  </method>
  <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if current position is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
<implementors><class full="PHP_CodeSniffer\Files\FileList" namespace="PHP_CodeSniffer\Files" name="FileList"/><class full="JsonSchema\Iterator\ObjectIterator" namespace="JsonSchema\Iterator" name="ObjectIterator"/><class full="Composer\DependencyResolver\RuleSetIterator" namespace="Composer\DependencyResolver" name="RuleSetIterator"/><class full="Composer\DependencyResolver\Decisions" namespace="Composer\DependencyResolver" name="Decisions"/><class full="Composer\DependencyResolver\RuleWatchChain" namespace="Composer\DependencyResolver" name="RuleWatchChain"/><class full="MongoDB\Model\CachingIterator" namespace="MongoDB\Model" name="CachingIterator"/><class full="MongoDB\Model\CallbackIterator" namespace="MongoDB\Model" name="CallbackIterator"/><class full="MongoDB\Model\BSONIterator" namespace="MongoDB\Model" name="BSONIterator"/><class full="MongoDB\ChangeStream" namespace="MongoDB" name="ChangeStream"/><class full="PhpCsFixer\Doctrine\Annotation\Tokens" namespace="PhpCsFixer\Doctrine\Annotation" name="Tokens"/><class full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/></implementors><extenders><extender full="Fabfuel\Prophiler\ProfilerInterface" namespace="Fabfuel\Prophiler" name="ProfilerInterface"/><extender full="MongoDB\Model\IndexInfoIterator" namespace="MongoDB\Model" name="IndexInfoIterator"/><extender full="MongoDB\Model\CollectionInfoIterator" namespace="MongoDB\Model" name="CollectionInfoIterator"/><extender full="MongoDB\Model\DatabaseInfoIterator" namespace="MongoDB\Model" name="DatabaseInfoIterator"/><extender full="Symfony\Contracts\HttpClient\ResponseStreamInterface" namespace="Symfony\Contracts\HttpClient" name="ResponseStreamInterface"/></extenders></interface>
