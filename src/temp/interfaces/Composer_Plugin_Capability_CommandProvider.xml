<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Composer\Plugin\Capability\CommandProvider" namespace="Composer\Plugin\Capability" name="CommandProvider" abstract="false" final="false" start="25" end="33">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Plugin/Capability" file="CommandProvider.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Plugin/Capability/CommandProvider.php" size="888" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="3e7a206d6a8f9b0f1f34f1f9cf065a48903b802f" relative="ar/www/html/vendor/composer/composer/src/Composer/Plugin/Capability/CommandProvider.php"/>
  <docblock>
    <description compact="Commands Provider Interface">This capability will receive an array with 'composer' and 'io' keys as
constructor argument. Those contain Composer\Composer and Composer\IO\IOInterface
instances. It also contains a 'plugin' key containing the plugin instance that
created the capability.</description>
    <author value="Jérémy Derussé &lt;jeremy@derusse.com&gt;"/>
  </docblock>
  <extends full="Composer\Plugin\Capability\Capability" namespace="Composer\Plugin\Capability" name="Capability"/>
  <method name="getCommands" start="32" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves an array of commands"/>
      <return type="array" of="object">
        <type full="\Composer\Command\BaseCommand" namespace="\Composer\Command" name="BaseCommand"/>
      </return>
    </docblock>
  </method>
  <parent full="Composer\Plugin\Capability\Capability" namespace="Composer\Plugin\Capability" name="Capability"/>
</interface>
