<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Symfony\Contracts\HttpClient\ResponseInterface" namespace="Symfony\Contracts\HttpClient" name="ResponseInterface" abstract="false" final="false" start="26" end="109">
  <file path="//var/www/html/vendor/symfony/http-client-contracts" file="ResponseInterface.php" realpath="/var/www/html/vendor/symfony/http-client-contracts/ResponseInterface.php" size="4857" time="2022-03-13T20:07:29+00:00" unixtime="1647202049" sha1="65352ad46c50d6c95d3baa805c23edfdb6a74b63" relative="ar/www/html/vendor/symfony/http-client-contracts/ResponseInterface.php"/>
  <docblock>
    <description compact="A (lazily retrieved) HTTP response."/>
    <author value="Nicolas Grekas &lt;p@tchwork.com&gt;"/>
  </docblock>
  <method name="getStatusCode" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the HTTP status code of the response."/>
      <throws description="when a network error occurs" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
      </throws>
    </docblock>
    <return type="int" nullable="false"/>
  </method>
  <method name="getHeaders" start="47" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the HTTP headers of the response."/>
      <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
        <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
      </param>
      <return description="The headers of the response keyed by header names in lowercase" type="array" of="object">
        <type full="Symfony\Contracts\HttpClient\string[]" namespace="Symfony\Contracts\HttpClient" name="string[]"/>
      </return>
      <throws description="When a network error occurs" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
      </throws>
      <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
      </throws>
      <throws description="On a 4xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
      </throws>
      <throws description="On a 5xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
      </throws>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getContent" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the response body as a string."/>
      <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
        <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
      </param>
      <throws description="When a network error occurs" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
      </throws>
      <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
      </throws>
      <throws description="On a 4xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
      </throws>
      <throws description="On a 5xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
      </throws>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="toArray" start="72" end="72" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the response body decoded as array, typically from a JSON payload."/>
      <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
        <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
      </param>
      <throws description="When the body cannot be decoded to an array" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\DecodingExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="DecodingExceptionInterface"/>
      </throws>
      <throws description="When a network error occurs" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
      </throws>
      <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
      </throws>
      <throws description="On a 4xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
      </throws>
      <throws description="On a 5xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
      </throws>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="cancel" start="79" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Closes the response stream and all related buffers.">No further chunk will be yielded after this method has been called.</description>
    </docblock>
    <return type="void" nullable="false"/>
  </method>
  <method name="getInfo" start="108" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns info coming from the transport layer.">This method SHOULD NOT throw any ExceptionInterface and SHOULD be non-blocking.
The returned info is "live": it can be empty and can change from one call to
another, as the request/response progresses.

The following info MUST be returned:
 - canceled (bool) - true if the response was canceled using ResponseInterface::cancel(), false otherwise
 - error (string|null) - the error message when the transfer was aborted, null otherwise
 - http_code (int) - the last response code or 0 when it is not known yet
 - http_method (string) - the HTTP verb of the last request
 - redirect_count (int) - the number of redirects followed while executing the request
 - redirect_url (string|null) - the resolved location of redirect responses, null otherwise
 - response_headers (array) - an array modelled after the special $http_response_header variable
 - start_time (float) - the time when the request was sent or 0.0 when it's pending
 - url (string) - the last effective URL of the request
 - user_data (mixed) - the value of the "user_data" request option, null if not set

When the "capture_peer_cert_chain" option is true, the "peer_certificate_chain"
attribute SHOULD list the peer certificates as an array of OpenSSL X.509 resources.

Other info SHOULD be named after curl_getinfo()'s associative return value.</description>
      <return description="An array of all available info, or one of them when $type is" type="mixed">provided, or null when an unsupported type is requested</return>
    </docblock>
    <parameter name="type" byreference="false" type="string" default="NULL"/>
  </method>
  <implementors>
    <class full="Symfony\Component\HttpClient\Response\TraceableResponse" namespace="Symfony\Component\HttpClient\Response" name="TraceableResponse"/>
    <class full="Symfony\Component\HttpClient\Response\MockResponse" namespace="Symfony\Component\HttpClient\Response" name="MockResponse"/>
    <class full="Symfony\Component\HttpClient\Response\AsyncResponse" namespace="Symfony\Component\HttpClient\Response" name="AsyncResponse"/>
    <class full="Symfony\Component\HttpClient\Response\CurlResponse" namespace="Symfony\Component\HttpClient\Response" name="CurlResponse"/>
    <class full="Symfony\Component\HttpClient\Response\NativeResponse" namespace="Symfony\Component\HttpClient\Response" name="NativeResponse"/>
  </implementors>
</interface>
