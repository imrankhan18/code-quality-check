<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Fabfuel\Prophiler\ProfilerInterface" namespace="Fabfuel\Prophiler" name="ProfilerInterface" abstract="false" final="false" start="10" end="60">
  <file path="//var/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler" file="ProfilerInterface.php" realpath="/var/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler/ProfilerInterface.php" size="1708" time="2017-09-16T06:49:25+00:00" unixtime="1505544565" sha1="4216935eaf8350d325c169de9299f04a88ea3cf7" relative="ar/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler/ProfilerInterface.php"/>
  <extends full="Iterator" namespace="" name="Iterator"/>
  <extends full="Countable" namespace="" name="Countable"/>
  <method name="start" start="20" end="20" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Start a new benchmark"/>
      <param description="Unique identifier like e.g. Class::Method (\Foobar\MyClass::doSomething)" type="string" variable="$name"/>
      <param description="Additional metadata or data" type="array" variable="$metadata"/>
      <param description="Name of the component which triggered the benchmark, e.g. &quot;App&quot;, &quot;Database&quot;" type="string" variable="$component"/>
      <return description="The started benchmark" type="object">
        <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="metadata" byreference="false" type="array" default=""/>
    <parameter name="component" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="stop" start="30" end="30" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Stop a running benchmark If no benchmark provided, the last started benchmark is stopped"/>
      <param description="A previously benchmark" type="object" variable="$benchmark">
        <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
      </param>
      <param description="Additional metadata or data" type="array" variable="$metadata"/>
      <return type="object">
        <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
      </return>
    </docblock>
    <parameter name="benchmark" byreference="false" type="object" default="NULL">
      <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
    </parameter>
    <parameter name="metadata" byreference="false" type="array" default=""/>
  </method>
  <method name="getDuration" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the total number of elapsed time in milliseconds"/>
      <return description="Total number of elapsed milliseconds" type="object">
        <type full="Fabfuel\Prophiler\double" namespace="Fabfuel\Prophiler" name="double"/>
      </return>
    </docblock>
  </method>
  <method name="getStartTime" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the start of the profiler in microtime"/>
      <return description="Timestamp in microtime" type="object">
        <type full="Fabfuel\Prophiler\double" namespace="Fabfuel\Prophiler" name="double"/>
      </return>
    </docblock>
  </method>
  <method name="getAggregators" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all aggregators"/>
      <return type="array" of="object">
        <type full="Fabfuel\Prophiler\AggregatorInterface" namespace="Fabfuel\Prophiler" name="AggregatorInterface"/>
      </return>
    </docblock>
  </method>
  <method name="addAggregator" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add an aggregator to the profiler"/>
      <param type="object" variable="$aggregator">
        <type full="Fabfuel\Prophiler\AggregatorInterface" namespace="Fabfuel\Prophiler" name="AggregatorInterface"/>
      </param>
      <return type="object">
        <type full="Fabfuel\Prophiler\$this" namespace="Fabfuel\Prophiler" name="$this"/>
      </return>
    </docblock>
    <parameter name="aggregator" byreference="false" type="object">
      <type full="Fabfuel\Prophiler\AggregatorInterface" namespace="Fabfuel\Prophiler" name="AggregatorInterface"/>
    </parameter>
  </method>
  <implementors>
    <class full="Fabfuel\Prophiler\Profiler" namespace="Fabfuel\Prophiler" name="Profiler"/>
  </implementors>
  <parent full="Iterator" namespace="" name="Iterator">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the current element"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the key of the current element"/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move forward to next element">Moves the current position to the next element.</description>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the Iterator to the first element">Rewinds back to the first element of the Iterator.</description>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if current position is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <parent full="Traversable" namespace="" name="Traversable"/>
  <parent full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </parent>
</interface>
