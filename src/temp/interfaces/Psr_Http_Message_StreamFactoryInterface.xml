<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Psr\Http\Message\StreamFactoryInterface" namespace="Psr\Http\Message" name="StreamFactoryInterface" abstract="false" final="false" start="5" end="45">
  <file path="//var/www/html/vendor/psr/http-factory/src" file="StreamFactoryInterface.php" realpath="/var/www/html/vendor/psr/http-factory/src/StreamFactoryInterface.php" size="1418" time="2019-04-30T12:38:16+00:00" unixtime="1556627896" sha1="b10b8e04007f552c2803edad59f6342074ca86aa" relative="ar/www/html/vendor/psr/http-factory/src/StreamFactoryInterface.php"/>
  <method name="createStream" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new stream from a string.">The stream SHOULD be created with a temporary resource.</description>
      <param description="String content with which to populate the stream." type="string" variable="$content"/>
      <return type="object">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="content" byreference="false" type="string" default="''"/>
  </method>
  <method name="createStreamFromFile" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a stream from an existing file.">The file MUST be opened using the given mode, which may be any mode
supported by the `fopen` function.

The `$filename` MAY be any string supported by `fopen()`.</description>
      <param description="Filename or stream URI to use as basis of stream." type="string" variable="$filename"/>
      <param description="Mode with which to open the underlying filename/stream." type="string" variable="$mode"/>
      <return type="object">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
      <throws description="If the file cannot be opened." type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <throws description="If the mode is invalid." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="filename" byreference="false" type="string"/>
    <parameter name="mode" byreference="false" type="string" default="'r'"/>
  </method>
  <method name="createStreamFromResource" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new stream from an existing resource.">The stream MUST be readable and may be writable.</description>
      <param description="PHP resource to use as basis of stream." type="resource" variable="$resource"/>
      <return type="object">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="resource" byreference="false" type="{unknown}"/>
  </method>
  <implementors>
    <class full="GuzzleHttp\Psr7\HttpFactory" namespace="GuzzleHttp\Psr7" name="HttpFactory"/>
    <class full="Symfony\Component\HttpClient\Psr18Client" namespace="Symfony\Component\HttpClient" name="Psr18Client"/>
  </implementors>
</interface>
