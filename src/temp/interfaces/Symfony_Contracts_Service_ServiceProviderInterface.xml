<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Symfony\Contracts\Service\ServiceProviderInterface" namespace="Symfony\Contracts\Service" name="ServiceProviderInterface" abstract="false" final="false" start="22" end="36">
  <file path="//var/www/html/vendor/symfony/service-contracts" file="ServiceProviderInterface.php" realpath="/var/www/html/vendor/symfony/service-contracts/ServiceProviderInterface.php" size="1210" time="2019-05-28T07:50:59+00:00" unixtime="1559029859" sha1="e3922526bd6c96ea14efb381a1a0faa6e11be5e4" relative="ar/www/html/vendor/symfony/service-contracts/ServiceProviderInterface.php"/>
  <docblock>
    <description compact="A ServiceProviderInterface exposes the identifiers and the types of services provided by a container."/>
    <author value="Nicolas Grekas &lt;p@tchwork.com&gt;"/>
    <author value="Mateusz Sip &lt;mateusz.sip@gmail.com&gt;"/>
  </docblock>
  <extends full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
  <method name="getProvidedServices" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an associative array of service types keyed by the identifiers provided by the current container.">Examples:

 * ['logger' =&gt; 'Psr\Log\LoggerInterface'] means the object provides a service named "logger" that implements Psr\Log\LoggerInterface
 * ['foo' =&gt; '?'] means the container provides service name "foo" of unspecified type
 * ['bar' =&gt; '?Bar\Baz'] means the container provides a service "bar" of type Bar\Baz|null</description>
      <return description="The provided service types, keyed by service names" type="array" of="object">
        <type full="Symfony\Contracts\Service\string" namespace="Symfony\Contracts\Service" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <parent full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface">
    <method name="get" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Finds an entry of the container by its identifier and returns it."/>
        <param description="Identifier of the entry to look for." type="string" variable="$id"/>
        <throws description="No entry was found for **this** identifier." type="object">
          <type full="Psr\Container\NotFoundExceptionInterface" namespace="Psr\Container" name="NotFoundExceptionInterface"/>
        </throws>
        <throws description="Error while retrieving the entry." type="object">
          <type full="Psr\Container\ContainerExceptionInterface" namespace="Psr\Container" name="ContainerExceptionInterface"/>
        </throws>
        <return description="Entry." type="mixed"/>
      </docblock>
      <parameter name="id" byreference="false" type="string"/>
    </method>
    <method name="has" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the container can return an entry for the given identifier.">Returns false otherwise.

`has($id)` returning true does not mean that `get($id)` will not throw an exception.
It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.</description>
        <param description="Identifier of the entry to look for." type="string" variable="$id"/>
        <return type="object">
          <type full="Psr\Container\bool" namespace="Psr\Container" name="bool"/>
        </return>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="id" byreference="false" type="string"/>
    </method>
  </parent>
</interface>
