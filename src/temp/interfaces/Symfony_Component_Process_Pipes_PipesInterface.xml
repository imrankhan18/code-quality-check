<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Process\Pipes\PipesInterface" namespace="Symfony\Component\Process\Pipes" name="PipesInterface" abstract="false" final="false" start="21" end="61">
  <file path="//var/www/html/vendor/symfony/process/Pipes" file="PipesInterface.php" realpath="/var/www/html/vendor/symfony/process/Pipes/PipesInterface.php" size="1496" time="2022-04-08T05:07:18+00:00" unixtime="1649394438" sha1="cfec64166c31d850525a82ff16e66c8debe95000" relative="ar/www/html/vendor/symfony/process/Pipes/PipesInterface.php"/>
  <docblock>
    <description compact="PipesInterface manages descriptors and pipes for the use of proc_open."/>
    <author value="Romain Neutron &lt;imprec@gmail.com&gt;"/>
    <internal/>
  </docblock>
  <constant type="{unknown}" name="CHUNK_SIZE" value="16384"/>
  <method name="getDescriptors" start="28" end="28" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of descriptors for the use of proc_open."/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getFiles" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of filenames indexed by their related stream in case these pipes use temporary files."/>
      <return type="array" of="object">
        <type full="Symfony\Component\Process\Pipes\string" namespace="Symfony\Component\Process\Pipes" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="readAndWrite" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Reads data in file handles and pipes."/>
      <param description="Whether to use blocking calls or not" type="object" variable="$blocking">
        <type full="Symfony\Component\Process\Pipes\bool" namespace="Symfony\Component\Process\Pipes" name="bool"/>
      </param>
      <param description="Whether to close pipes if they've reached EOF" type="object" variable="$close">
        <type full="Symfony\Component\Process\Pipes\bool" namespace="Symfony\Component\Process\Pipes" name="bool"/>
      </param>
      <return description="An array of read data indexed by their fd" type="array" of="object">
        <type full="Symfony\Component\Process\Pipes\string" namespace="Symfony\Component\Process\Pipes" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="blocking" byreference="false" type="bool"/>
    <parameter name="close" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="areOpen" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the current state has open file handles or pipes."/>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="haveReadSupport" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if pipes are able to read output."/>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="close" start="60" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Closes file handles and pipes."/>
    </docblock>
  </method>
  <implementors>
    <class full="Symfony\Component\Process\Pipes\WindowsPipes" namespace="Symfony\Component\Process\Pipes" name="WindowsPipes"/>
    <class full="Symfony\Component\Process\Pipes\AbstractPipes" namespace="Symfony\Component\Process\Pipes" name="AbstractPipes"/>
    <class full="Symfony\Component\Process\Pipes\UnixPipes" namespace="Symfony\Component\Process\Pipes" name="UnixPipes"/>
  </implementors>
</interface>
