<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Throwable" namespace="" name="Throwable">
  <method name="getMessage" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the message"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getCode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the exception code"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getFile" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the file in which the exception was created"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getLine" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the line on which the object was instantiated"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getTrace" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPrevious" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the previous Throwable"/>
      <return type="Throwable"/>
    </docblock>
  </method>
  <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets a string representation of the thrown object"/>
      <return type="string"/>
    </docblock>
  </method>
<extenders><extender full="Jean85\Exception\VersionMissingExceptionInterface" namespace="Jean85\Exception" name="VersionMissingExceptionInterface"/><extender full="Psr\Container\ContainerExceptionInterface" namespace="Psr\Container" name="ContainerExceptionInterface"/><extender full="Psr\Container\NotFoundExceptionInterface" namespace="Psr\Container" name="NotFoundExceptionInterface"/><extender full="Psr\Http\Client\ClientExceptionInterface" namespace="Psr\Http\Client" name="ClientExceptionInterface"/><extender full="Psr\Http\Client\NetworkExceptionInterface" namespace="Psr\Http\Client" name="NetworkExceptionInterface"/><extender full="Psr\Http\Client\RequestExceptionInterface" namespace="Psr\Http\Client" name="RequestExceptionInterface"/><extender full="SebastianBergmann\PHPLOC\Exception" namespace="SebastianBergmann\PHPLOC" name="Exception"/><extender full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/><extender full="SebastianBergmann\CliParser\Exception" namespace="SebastianBergmann\CliParser" name="Exception"/><extender full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\ExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\HttpExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="HttpExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\DecodingExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="DecodingExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/><extender full="Symfony\Contracts\HttpClient\Exception\TimeoutExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TimeoutExceptionInterface"/><extender full="Symfony\Component\OptionsResolver\Exception\ExceptionInterface" namespace="Symfony\Component\OptionsResolver\Exception" name="ExceptionInterface"/><extender full="Symfony\Component\Process\Exception\ExceptionInterface" namespace="Symfony\Component\Process\Exception" name="ExceptionInterface"/><extender full="Symfony\Component\String\Exception\ExceptionInterface" namespace="Symfony\Component\String\Exception" name="ExceptionInterface"/><extender full="Symfony\Component\Console\Exception\ExceptionInterface" namespace="Symfony\Component\Console\Exception" name="ExceptionInterface"/><extender full="Symfony\Component\Filesystem\Exception\ExceptionInterface" namespace="Symfony\Component\Filesystem\Exception" name="ExceptionInterface"/><extender full="Symfony\Component\Filesystem\Exception\IOExceptionInterface" namespace="Symfony\Component\Filesystem\Exception" name="IOExceptionInterface"/><extender full="Symfony\Component\VarExporter\Exception\ExceptionInterface" namespace="Symfony\Component\VarExporter\Exception" name="ExceptionInterface"/></extenders></interface>
