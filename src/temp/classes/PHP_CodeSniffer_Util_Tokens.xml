<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Util\Tokens" namespace="PHP_CodeSniffer\Util" name="Tokens" abstract="false" final="true" start="181" end="716">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/src/Util" file="Tokens.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/src/Util/Tokens.php" size="22743" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="32f2e7dcfaf5a82b707859baf96845b3fa0a6bb4" relative="ar/www/html/vendor/squizlabs/php_codesniffer/src/Util/Tokens.php"/>
  <member name="weightings" default="" type="array" visibility="public" static="true" line="189">
    <docblock>
      <description compact="The token weightings."/>
      <var description="int&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="assignmentTokens" default="" type="array" visibility="public" static="true" line="271">
    <docblock>
      <description compact="Tokens that represent assignments."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="equalityTokens" default="" type="array" visibility="public" static="true" line="295">
    <docblock>
      <description compact="Tokens that represent equality comparisons."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="comparisonTokens" default="" type="array" visibility="public" static="true" line="309">
    <docblock>
      <description compact="Tokens that represent comparison operator."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="arithmeticTokens" default="" type="array" visibility="public" static="true" line="327">
    <docblock>
      <description compact="Tokens that represent arithmetic operators."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="operators" default="" type="array" visibility="public" static="true" line="341">
    <docblock>
      <description compact="Tokens that perform operations."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="booleanOperators" default="" type="array" visibility="public" static="true" line="362">
    <docblock>
      <description compact="Tokens that perform boolean operations."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="castTokens" default="" type="array" visibility="public" static="true" line="375">
    <docblock>
      <description compact="Tokens that represent casting."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="parenthesisOpeners" default="" type="array" visibility="public" static="true" line="391">
    <docblock>
      <description compact="Token types that open parenthesis."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="scopeOpeners" default="" type="array" visibility="public" static="true" line="413">
    <docblock>
      <description compact="Tokens that are allowed to open scopes."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="scopeModifiers" default="" type="array" visibility="public" static="true" line="446">
    <docblock>
      <description compact="Tokens that represent scope modifiers."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="methodPrefixes" default="" type="array" visibility="public" static="true" line="457">
    <docblock>
      <description compact="Tokens that can prefix a method name"/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="blockOpeners" default="" type="array" visibility="public" static="true" line="471">
    <docblock>
      <description compact="Tokens that open code blocks."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="emptyTokens" default="" type="array" visibility="public" static="true" line="483">
    <docblock>
      <description compact="Tokens that don't represent code."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="commentTokens" default="" type="array" visibility="public" static="true" line="505">
    <docblock>
      <description compact="Tokens that are comments."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="phpcsCommentTokens" default="" type="array" visibility="public" static="true" line="526">
    <docblock>
      <description compact="Tokens that are comments containing PHPCS instructions."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="stringTokens" default="" type="array" visibility="public" static="true" line="541">
    <docblock>
      <description compact="Tokens that represent strings.">Note that T_STRINGS are NOT represented in this list.</description>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="textStringTokens" default="" type="array" visibility="public" static="true" line="551">
    <docblock>
      <description compact="Tokens that represent text strings."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="bracketTokens" default="" type="array" visibility="public" static="true" line="564">
    <docblock>
      <description compact="Tokens that represent brackets and parenthesis."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="includeTokens" default="" type="array" visibility="public" static="true" line="578">
    <docblock>
      <description compact="Tokens that include files."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="heredocTokens" default="" type="array" visibility="public" static="true" line="590">
    <docblock>
      <description compact="Tokens that make up a heredoc string."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="functionNameTokens" default="" type="array" visibility="public" static="true" line="607">
    <docblock>
      <description compact="Tokens that represent the names of called functions.">Mostly, these are just strings. But PHP tokenizes some language
constructs and functions using their own tokens.</description>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="ooScopeTokens" default="" type="array" visibility="public" static="true" line="627">
    <docblock>
      <description compact="Tokens that open class and object scopes."/>
      <var description="int|string&gt;" type="object">
        <type full="PHP_CodeSniffer\Util\array&lt;int|string" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="magicConstants" default="" type="array" visibility="public" static="true" line="641">
    <docblock>
      <description compact="Tokens representing PHP magic constants."/>
      <var description="&lt;int|string&gt; =&gt; &lt;int|string&gt;" type="array"/>
      <link value="https://www.php.net/language.constants.predefined PHP Manual on magic constants"/>
    </docblock>
  </member>
  <method name="tokenName" start="664" end="673" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Given a token, returns the name of the token.">If passed an integer, the token name is sourced from PHP's token_name()
function. If passed a string, it is assumed to be a PHPCS-supplied token
that begins with PHPCS_T_, so the name is sourced from the token value itself.</description>
      <param description="The token to get the name for." type="object" variable="$token">
        <type full="PHP_CodeSniffer\Util\int|string" namespace="PHP_CodeSniffer\Util" name="int|string"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHighestWeightedToken" start="691" end="713" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the highest weighted token type.">Tokens are weighted by their approximate frequency of appearance in code
- the less frequently they appear in the code, the higher the weighting.
For example T_CLASS tokens appear very infrequently in a file, and
therefore have a high weighting.

Returns false if there are no weightings for any of the specified tokens.</description>
      <param description="The token types to get the highest weighted" type="object" variable="$tokens">type for.<type full="PHP_CodeSniffer\Util\array&lt;int|string&gt;" namespace="PHP_CodeSniffer\Util" name="array&lt;int|string&gt;"/></param>
      <return description="The highest weighted token." type="object">
        <type full="PHP_CodeSniffer\Util\int|false" namespace="PHP_CodeSniffer\Util" name="int|false"/>
      </return>
    </docblock>
    <parameter name="tokens" byreference="false" type="array"/>
  </method>
</class>
