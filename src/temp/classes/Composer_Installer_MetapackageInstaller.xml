<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Installer\MetapackageInstaller" namespace="Composer\Installer" name="MetapackageInstaller" abstract="false" final="false" start="27" end="132">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Installer" file="MetapackageInstaller.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Installer/MetapackageInstaller.php" size="3276" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="97c482f814d3a04d1928ac33b0b618a7ac06e034" relative="ar/www/html/vendor/composer/composer/src/Composer/Installer/MetapackageInstaller.php"/>
  <docblock>
    <description compact="Metapackage installation manager."/>
    <author value="Martin HasoÅˆ &lt;martin.hason@gmail.com&gt;"/>
  </docblock>
  <implements full="Composer\Installer\InstallerInterface" namespace="Composer\Installer" name="InstallerInterface"/>
  <member name="io" visibility="private" static="false" line="30">
    <docblock>
      <var type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="32" end="35" abstract="false" final="false" static="false" visibility="public">
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
  </constructor>
  <method name="supports" start="40" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="packageType" byreference="false" type="string"/>
  </method>
  <method name="isInstalled" start="48" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="download" start="56" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <inline>
      <comment value="noop" line="58"/>
    </inline>
  </method>
  <method name="prepare" start="65" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <inline>
      <comment value="noop" line="67"/>
    </inline>
  </method>
  <method name="cleanup" start="74" end="78" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <inline>
      <comment value="noop" line="76"/>
    </inline>
  </method>
  <method name="install" start="83" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="update" start="95" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="initial" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="target" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="uninstall" start="112" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="getInstallPath" start="128" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <interface full="Composer\Installer\InstallerInterface" namespace="Composer\Installer" name="InstallerInterface">
    <method name="supports" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Decides if the installer supports the given type"/>
        <param type="string" variable="$packageType"/>
        <return type="object">
          <type full="Composer\Installer\bool" namespace="Composer\Installer" name="bool"/>
        </return>
      </docblock>
      <parameter name="packageType" byreference="false" type="string"/>
    </method>
    <method name="isInstalled" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks that provided package is installed."/>
        <param description="repository in which to check" type="object" variable="$repo">
          <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
        </param>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\bool" namespace="Composer\Installer" name="bool"/>
        </return>
      </docblock>
      <parameter name="repo" byreference="false" type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </parameter>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="download" start="53" end="53" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Downloads the files needed to later install the given package."/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="previous package instance in case of an update" type="object" variable="$prevPackage">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="prepare" start="68" end="68" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Do anything that needs to be done between all downloads have been completed and the actual operation is executed">All packages get first downloaded, then all together prepared, then all together installed/updated/uninstalled. Therefore
for error recovery it is important to avoid failing during install/update/uninstall as much as possible, and risky things or
user prompts should happen in the prepare step rather. In case of failure, cleanup() will be called so that changes can
be undone as much as possible.</description>
        <param description="one of install/update/uninstall" type="string" variable="$type"/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="previous package instance in case of an update" type="object" variable="$prevPackage">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="string"/>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="install" start="77" end="77" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Installs specific package."/>
        <param description="repository in which to check" type="object" variable="$repo">
          <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
        </param>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="repo" byreference="false" type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </parameter>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="update" start="88" end="88" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Updates specific package."/>
        <param description="repository in which to check" type="object" variable="$repo">
          <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
        </param>
        <param description="already installed package version" type="object" variable="$initial">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="updated version" type="object" variable="$target">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <throws description="if $initial package is not installed" type="object">
          <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="repo" byreference="false" type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </parameter>
      <parameter name="initial" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="target" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="uninstall" start="97" end="97" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Uninstalls specific package."/>
        <param description="repository in which to check" type="object" variable="$repo">
          <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
        </param>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="repo" byreference="false" type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </parameter>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="cleanup" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Do anything to cleanup changes applied in the prepare or install/update/uninstall steps">Note that cleanup will be called for all packages regardless if they failed an operation or not, to give
all installers a change to cleanup things they did previously, so you need to keep track of changes
applied in the installer/downloader themselves.</description>
        <param description="one of install/update/uninstall" type="string" variable="$type"/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="previous package instance in case of an update" type="object" variable="$prevPackage">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Installer\PromiseInterface|null" namespace="Composer\Installer" name="PromiseInterface|null"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="string"/>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="getInstallPath" start="119" end="119" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the absolute installation path of a package."/>
        <param type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return description="absolute path to install to, which MUST not end with a slash" type="string"/>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
  </interface>
</class>
