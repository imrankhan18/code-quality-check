<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Psr\Log\Test\TestLogger" namespace="Psr\Log\Test" name="TestLogger" abstract="false" final="false" start="57" end="147">
  <file path="//var/www/html/vendor/psr/log/Psr/Log/Test" file="TestLogger.php" realpath="/var/www/html/vendor/psr/log/Psr/Log/Test/TestLogger.php" size="4527" time="2021-05-03T11:20:27+00:00" unixtime="1620040827" sha1="912c59ca7fcab2f1ac1c34eb0ff6bd73a61828fa" relative="ar/www/html/vendor/psr/log/Psr/Log/Test/TestLogger.php"/>
  <docblock>
    <description compact="Used for testing purposes.">It records all records and gives you access to them for verification.</description>
    <method value="bool hasEmergency($record)"/>
    <method value="bool hasAlert($record)"/>
    <method value="bool hasCritical($record)"/>
    <method value="bool hasError($record)"/>
    <method value="bool hasWarning($record)"/>
    <method value="bool hasNotice($record)"/>
    <method value="bool hasInfo($record)"/>
    <method value="bool hasDebug($record)"/>
    <method value="bool hasEmergencyRecords()"/>
    <method value="bool hasAlertRecords()"/>
    <method value="bool hasCriticalRecords()"/>
    <method value="bool hasErrorRecords()"/>
    <method value="bool hasWarningRecords()"/>
    <method value="bool hasNoticeRecords()"/>
    <method value="bool hasInfoRecords()"/>
    <method value="bool hasDebugRecords()"/>
    <method value="bool hasEmergencyThatContains($message)"/>
    <method value="bool hasAlertThatContains($message)"/>
    <method value="bool hasCriticalThatContains($message)"/>
    <method value="bool hasErrorThatContains($message)"/>
    <method value="bool hasWarningThatContains($message)"/>
    <method value="bool hasNoticeThatContains($message)"/>
    <method value="bool hasInfoThatContains($message)"/>
    <method value="bool hasDebugThatContains($message)"/>
    <method value="bool hasEmergencyThatMatches($message)"/>
    <method value="bool hasAlertThatMatches($message)"/>
    <method value="bool hasCriticalThatMatches($message)"/>
    <method value="bool hasErrorThatMatches($message)"/>
    <method value="bool hasWarningThatMatches($message)"/>
    <method value="bool hasNoticeThatMatches($message)"/>
    <method value="bool hasInfoThatMatches($message)"/>
    <method value="bool hasDebugThatMatches($message)"/>
    <method value="bool hasEmergencyThatPasses($message)"/>
    <method value="bool hasAlertThatPasses($message)"/>
    <method value="bool hasCriticalThatPasses($message)"/>
    <method value="bool hasErrorThatPasses($message)"/>
    <method value="bool hasWarningThatPasses($message)"/>
    <method value="bool hasNoticeThatPasses($message)"/>
    <method value="bool hasInfoThatPasses($message)"/>
    <method value="bool hasDebugThatPasses($message)"/>
  </docblock>
  <extends full="Psr\Log\AbstractLogger" namespace="Psr\Log" name="AbstractLogger"/>
  <member name="records" default="" type="array" visibility="public" static="false" line="62">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="recordsByLevel" default="" type="array" visibility="public" static="false" line="64"/>
  <method name="log" start="69" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock inherit="true">
      <description/>
      <inherited interface="Psr\Log\LoggerInterface">
        <docblock>
          <description compact="Logs with an arbitrary level."/>
          <param type="mixed" variable="$level"/>
          <param type="string" variable="$message"/>
          <param type="array" variable="$context" of="object">
            <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
          </param>
          <return type="object">
            <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
          </return>
          <throws type="object">
            <type full="\Psr\Log\InvalidArgumentException" namespace="\Psr\Log" name="InvalidArgumentException"/>
          </throws>
        </docblock>
      </inherited>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="hasRecords" start="81" end="84" abstract="false" final="false" static="false" visibility="public">
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasRecord" start="86" end="100" abstract="false" final="false" static="false" visibility="public">
    <parameter name="record" byreference="false" type="{unknown}"/>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasRecordThatContains" start="102" end="107" abstract="false" final="false" static="false" visibility="public">
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasRecordThatMatches" start="109" end="114" abstract="false" final="false" static="false" visibility="public">
    <parameter name="regex" byreference="false" type="{unknown}"/>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasRecordThatPasses" start="116" end="127" abstract="false" final="false" static="false" visibility="public">
    <parameter name="predicate" byreference="false" type="callable"/>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="__call" start="129" end="140" abstract="false" final="false" static="false" visibility="public">
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="args" byreference="false" type="{unknown}"/>
  </method>
  <method name="reset" start="142" end="146" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="Psr\Log\AbstractLogger" namespace="Psr\Log" name="AbstractLogger">
    <implements full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    <method name="emergency" start="22" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="System is unusable."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="alert" start="38" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="critical" start="53" end="56" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="error" start="67" end="70" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="warning" start="83" end="86" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="notice" start="96" end="99" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Normal but significant events."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="info" start="111" end="114" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="debug" start="124" end="127" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Detailed debug information."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
  </parent>
  <interface full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface">
    <method name="emergency" start="30" end="30" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="System is unusable."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="alert" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="critical" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="error" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="warning" start="79" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="notice" start="89" end="89" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Normal but significant events."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="info" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="debug" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Detailed debug information."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="log" start="124" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Logs with an arbitrary level."/>
        <param type="mixed" variable="$level"/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
        <throws type="object">
          <type full="\Psr\Log\InvalidArgumentException" namespace="\Psr\Log" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="level" byreference="false" type="{unknown}"/>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
  </interface>
</class>
