<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="NunoMaduro\PhpInsights\Domain\Insights\SniffDecorator" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="SniffDecorator" abstract="false" final="true" start="23" end="144">
  <file path="//var/www/html/vendor/nunomaduro/phpinsights/src/Domain/Insights" file="SniffDecorator.php" realpath="/var/www/html/vendor/nunomaduro/phpinsights/src/Domain/Insights/SniffDecorator.php" size="3434" time="2022-03-21T20:51:37+00:00" unixtime="1647895897" sha1="c20789229678ec77ea995f02c206d4812440796e" relative="ar/www/html/vendor/nunomaduro/phpinsights/src/Domain/Insights/SniffDecorator.php"/>
  <docblock>
    <description compact="Decorates original php-cs sniffs with additional behavior."/>
    <internal/>
    <see value="\Tests\Domain\Sniffs\SniffDecoratorTest"/>
  </docblock>
  <implements full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff"/>
  <implements full="NunoMaduro\PhpInsights\Domain\Contracts\Insight" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="Insight"/>
  <implements full="NunoMaduro\PhpInsights\Domain\Contracts\DetailsCarrier" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="DetailsCarrier"/>
  <implements full="NunoMaduro\PhpInsights\Domain\Contracts\Fixable" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="Fixable"/>
  <uses full="NunoMaduro\PhpInsights\Domain\Insights\FixPerFileCollector" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="FixPerFileCollector" start="25" end="25"/>
  <member name="sniff" visibility="private" static="false" line="27"/>
  <member name="errors" default="" type="array" visibility="private" static="false" line="30">
    <docblock>
      <var type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\array&lt;\NunoMaduro\PhpInsights\Domain\Details&gt;" namespace="NunoMaduro\PhpInsights\Domain\Insights\array&lt;\NunoMaduro\PhpInsights\Domain" name="Details&gt;"/>
      </var>
    </docblock>
  </member>
  <member name="excludedFiles" visibility="private" static="false" line="35">
    <docblock>
      <description/>
      <var description="\Symfony\Component\Finder\SplFileInfo&gt;" type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\array&lt;string" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="37" end="45" abstract="false" final="false" static="false" visibility="public">
    <parameter name="sniff" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff"/>
    </parameter>
    <parameter name="dir" byreference="false" type="string"/>
  </constructor>
  <method name="register" start="50" end="53" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\array&lt;string&gt;" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="array&lt;string&gt;"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="process" start="62" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="int" variable="$stackPtr"/>
      <return type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\int|void" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="int|void"/>
      </return>
      <phpcssuppress value="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint"/>
    </docblock>
    <parameter name="file" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDetails" start="76" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the details of the insight."/>
      <return description="\NunoMaduro\PhpInsights\Domain\Details&gt;" type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\array&lt;int" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="hasIssue" start="84" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the insight detects an issue."/>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="getTitle" start="92" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the title of the insight."/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="getInsightClass" start="117" end="120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the class name of Insight used."/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="addDetails" start="122" end="125" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
    <parameter name="details" byreference="false" type="object">
      <type full="NunoMaduro\PhpInsights\Domain\Details" namespace="NunoMaduro\PhpInsights\Domain" name="Details"/>
    </parameter>
  </method>
  <method name="skipFilesFromIgnoreFiles" start="127" end="133" abstract="false" final="false" static="false" visibility="private">
    <return type="bool" nullable="false"/>
    <parameter name="file" byreference="false" type="object">
      <type full="NunoMaduro\PhpInsights\Domain\File" namespace="NunoMaduro\PhpInsights\Domain" name="File"/>
    </parameter>
  </method>
  <method name="getIgnoredFilesPath" start="140" end="143" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Contains the setting for all files which the sniff should ignore."/>
      <return description="string&gt;" type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Insights\array&lt;int" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <interface full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff">
    <method name="register" start="40" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Registers the tokens that this sniff wants to listen for.">An example return value for a sniff that wants to listen for whitespace
and any comments would be:

&lt;code&gt;
   return array(
           T_WHITESPACE,
           T_DOC_COMMENT,
           T_COMMENT,
          );
&lt;/code&gt;</description>
        <return type="array" of="object">
          <type full="PHP_CodeSniffer\Sniffs\mixed" namespace="PHP_CodeSniffer\Sniffs" name="mixed"/>
        </return>
        <see value="Tokens.php"/>
      </docblock>
    </method>
    <method name="process" start="77" end="77" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Called when one of the token types that this sniff is listening for is found.">The stackPtr variable indicates where in the stack the token was found.
A sniff can acquire information this token, along with all the other
tokens within the stack by first acquiring the token stack:

&lt;code&gt;
   $tokens = $phpcsFile-&gt;getTokens();
   echo 'Encountered a '.$tokens[$stackPtr]['type'].' token';
   echo 'token information: ';
   print_r($tokens[$stackPtr]);
&lt;/code&gt;

If the sniff discovers an anomaly in the code, they can raise an error
by calling addError() on the \PHP_CodeSniffer\Files\File object, specifying an error
message and the position of the offending token:

&lt;code&gt;
   $phpcsFile-&gt;addError('Encountered an error', $stackPtr);
&lt;/code&gt;</description>
        <param description="The PHP_CodeSniffer file where the" type="object" variable="$phpcsFile">token was found.<type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/></param>
        <param description="The position in the PHP_CodeSniffer" type="int" variable="$stackPtr">file's token stack where the token
                                              was found.</param>
        <return description="Optionally returns a stack pointer. The sniff will not be" type="object">called again on the current file until the returned stack
                 pointer is reached. Return (count($tokens) + 1) to skip
                 the rest of the file.<type full="PHP_CodeSniffer\Sniffs\void|int" namespace="PHP_CodeSniffer\Sniffs" name="void|int"/></return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="object">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </parameter>
      <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <interface full="NunoMaduro\PhpInsights\Domain\Contracts\Insight" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="Insight">
    <method name="hasIssue" start="15" end="15" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks if the insight detects an issue."/>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
    <method name="getTitle" start="20" end="20" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the title of the insight."/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="getInsightClass" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the class name of Insight used."/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
  </interface>
  <interface full="NunoMaduro\PhpInsights\Domain\Contracts\DetailsCarrier" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="DetailsCarrier">
    <extends full="NunoMaduro\PhpInsights\Domain\Contracts\HasDetails" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="HasDetails"/>
    <method name="addDetails" start="14" end="14" abstract="false" final="false" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="details" byreference="false" type="object">
        <type full="NunoMaduro\PhpInsights\Domain\Details" namespace="NunoMaduro\PhpInsights\Domain" name="Details"/>
      </parameter>
    </method>
  </interface>
  <interface full="NunoMaduro\PhpInsights\Domain\Contracts\Fixable" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="Fixable">
    <extends full="NunoMaduro\PhpInsights\Domain\Contracts\Insight" namespace="NunoMaduro\PhpInsights\Domain\Contracts" name="Insight"/>
    <method name="getTotalFix" start="12" end="12" abstract="false" final="false" static="false" visibility="public">
      <return type="int" nullable="false"/>
    </method>
    <method name="getFixPerFile" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="NunoMaduro\PhpInsights\Domain\Contracts\array&lt;\NunoMaduro\PhpInsights\Domain\Details&gt;" namespace="NunoMaduro\PhpInsights\Domain\Contracts\array&lt;\NunoMaduro\PhpInsights\Domain" name="Details&gt;"/>
        </return>
      </docblock>
      <return type="array" nullable="false"/>
    </method>
    <method name="addFileFixed" start="19" end="19" abstract="false" final="false" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="file" byreference="false" type="string"/>
    </method>
  </interface>
  <trait full="NunoMaduro\PhpInsights\Domain\Insights\FixPerFileCollector" namespace="NunoMaduro\PhpInsights\Domain\Insights" name="FixPerFileCollector">
    <method name="addFileFixed" start="21" end="29" abstract="false" final="false" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="file" byreference="false" type="string"/>
    </method>
    <method name="getFixPerFile" start="34" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
    </method>
    <method name="getTotalFix" start="52" end="55" abstract="false" final="false" static="false" visibility="public">
      <return type="int" nullable="false"/>
    </method>
  </trait>
</class>
