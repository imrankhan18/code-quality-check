<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Repository\RepositoryManager" namespace="Composer\Repository" name="RepositoryManager" abstract="false" final="false" start="29" end="201">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Repository" file="RepositoryManager.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Repository/RepositoryManager.php" size="6494" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="4bfa3785f14d03d9cf5d87773e7b63cb36b5793d" relative="ar/www/html/vendor/composer/composer/src/Composer/Repository/RepositoryManager.php"/>
  <docblock>
    <description compact="Repositories manager."/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
    <author value="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
    <author value="FranÃ§ois Pluchino &lt;francois.pluchino@opendisplay.com&gt;"/>
  </docblock>
  <member name="localRepository" visibility="private" static="false" line="32">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </var>
    </docblock>
  </member>
  <member name="repositories" default="" type="array" visibility="private" static="false" line="34">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\list&lt;RepositoryInterface&gt;" namespace="Composer\Repository" name="list&lt;RepositoryInterface&gt;"/>
      </var>
    </docblock>
  </member>
  <member name="repositoryClasses" default="" type="array" visibility="private" static="false" line="36">
    <docblock>
      <var description="class-string&lt;RepositoryInterface&gt;&gt;" type="object">
        <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="io" visibility="private" static="false" line="38">
    <docblock>
      <var type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </var>
    </docblock>
  </member>
  <member name="config" visibility="private" static="false" line="40">
    <docblock>
      <var type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </var>
    </docblock>
  </member>
  <member name="httpDownloader" visibility="private" static="false" line="42">
    <docblock>
      <var type="object">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </var>
    </docblock>
  </member>
  <member name="eventDispatcher" visibility="private" static="false" line="44">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\?EventDispatcher" namespace="Composer\Repository" name="?EventDispatcher"/>
      </var>
    </docblock>
  </member>
  <member name="process" visibility="private" static="false" line="46">
    <docblock>
      <var type="object">
        <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="48" end="55" abstract="false" final="false" static="false" visibility="public">
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="httpDownloader" byreference="false" type="object">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </parameter>
    <parameter name="eventDispatcher" byreference="false" type="object" default="NULL">
      <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
    </parameter>
    <parameter name="process" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
  </constructor>
  <method name="findPackage" start="65" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Searches for a package by its name and version in managed repositories."/>
      <param description="package name" type="string" variable="$name"/>
      <param description="package version or version constraint to match against" type="object" variable="$constraint">
        <type full="Composer\Repository\string|\Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Repository\string|\Composer\Semver\Constraint" name="ConstraintInterface"/>
      </param>
      <return type="object">
        <type full="Composer\Repository\PackageInterface|null" namespace="Composer\Repository" name="PackageInterface|null"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </return>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="{unknown}"/>
  </method>
  <method name="findPackages" start="85" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Searches for all packages matching a name and optionally a version in managed repositories."/>
      <param description="package name" type="string" variable="$name"/>
      <param description="package version or version constraint to match against" type="object" variable="$constraint">
        <type full="Composer\Repository\string|\Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Repository\string|\Composer\Semver\Constraint" name="ConstraintInterface"/>
      </param>
      <return type="array" of="object">
        <type full="Composer\Repository\PackageInterface" namespace="Composer\Repository" name="PackageInterface"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="{unknown}"/>
  </method>
  <method name="addRepository" start="103" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds repository"/>
      <param description="repository instance" type="object" variable="$repository">
        <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
      </param>
      <return type="object">
        <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="repository" byreference="false" type="object">
      <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
    </parameter>
  </method>
  <method name="prependRepository" start="117" end="120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a repository to the beginning of the chain">This is useful when injecting additional repositories that should trump Packagist, e.g. from a plugin.</description>
      <param description="repository instance" type="object" variable="$repository">
        <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
      </param>
      <return type="object">
        <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="repository" byreference="false" type="object">
      <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
    </parameter>
  </method>
  <method name="createRepository" start="131" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a new repository for a specific installation type."/>
      <param description="repository type" type="string" variable="$type"/>
      <param description="mixed&gt; $config repository configuration" type="object">
        <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
      </param>
      <param description="repository name" type="string" variable="$name"/>
      <throws description="if repository for provided type is not registered" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return type="object">
        <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
    </return>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="config" byreference="false" type="array"/>
    <parameter name="name" byreference="false" type="string" default="NULL"/>
  </method>
  <method name="setRepositoryClass" start="165" end="168" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Stores repository class for a specific installation type."/>
      <param description="installation type" type="string" variable="$type"/>
      <param description="class name of the repo implementation" type="object" variable="$class">
        <type full="Composer\Repository\class-string&lt;RepositoryInterface&gt;" namespace="Composer\Repository" name="class-string&lt;RepositoryInterface&gt;"/>
      </param>
      <return type="object">
        <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRepositories" start="175" end="178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns all repositories, except local one."/>
      <return type="array" of="object">
        <type full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="setLocalRepository" start="187" end="190" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets local repository for the project."/>
      <param description="repository instance" type="object" variable="$repository">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <return type="object">
        <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="repository" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
  </method>
  <method name="getLocalRepository" start="197" end="200" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns local repository for the project."/>
      <return type="object">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </return>
  </method>
</class>
