<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Finder\Iterator\SizeRangeFilterIterator" namespace="Symfony\Component\Finder\Iterator" name="SizeRangeFilterIterator" abstract="false" final="false" start="23" end="60">
  <file path="//var/www/html/vendor/symfony/finder/Iterator" file="SizeRangeFilterIterator.php" realpath="/var/www/html/vendor/symfony/finder/Iterator/SizeRangeFilterIterator.php" size="1404" time="2022-04-15T08:07:45+00:00" unixtime="1650010065" sha1="ed5b3d9b95b6fe178a5aec3fcd1b44b3c796db1b" relative="ar/www/html/vendor/symfony/finder/Iterator/SizeRangeFilterIterator.php"/>
  <docblock>
    <description compact="SizeRangeFilterIterator filters out files that are not in the given size range."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <extends value="\FilterIterator&lt;string, \SplFileInfo&gt;"/>
  </docblock>
  <extends full="FilterIterator" namespace="" name="FilterIterator"/>
  <member name="comparators" default="" type="array" visibility="private" static="false" line="25"/>
  <constructor name="__construct" start="31" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="\SplFileInfo&gt; $iterator" type="object">
        <type full="\Iterator&lt;string" namespace="" name="Iterator&lt;string"/>
      </param>
      <param type="array" variable="$comparators" of="object">
        <type full="Symfony\Component\Finder\Iterator\NumberComparator" namespace="Symfony\Component\Finder\Iterator" name="NumberComparator"/>
      </param>
    </docblock>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Iterator" namespace="" name="Iterator"/>
    </parameter>
    <parameter name="comparators" byreference="false" type="array"/>
  </constructor>
  <method name="accept" start="44" end="59" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="FilterIterator" namespace="" name="FilterIterator">
    <implements full="OuterIterator" namespace="" name="OuterIterator"/>
    <method name="accept" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element of the iterator is acceptable"/>
      <return type="bool"/>
    </docblock>
  </method>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct a filterIterator"/>
      <return type="void"/>
    </docblock>
    <parameter name="iterator" optional="false" byreference="false" type="object" class="Iterator"/>
  </constructor>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current element value"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the inner iterator"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current key"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move the iterator forward"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the iterator"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <interface full="OuterIterator" namespace="" name="OuterIterator">
    <extends full="Iterator" namespace="" name="Iterator"/>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the inner iterator for the current entry"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
  </interface>
</class>
