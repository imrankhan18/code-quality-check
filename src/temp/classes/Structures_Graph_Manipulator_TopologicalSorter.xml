<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Structures_Graph_Manipulator_TopologicalSorter" namespace="" name="Structures_Graph_Manipulator_TopologicalSorter" abstract="false" final="false" start="50" end="175">
  <file path="//usr/local/lib/php/Structures/Graph/Manipulator" file="TopologicalSorter.php" realpath="/usr/local/lib/php/Structures/Graph/Manipulator/TopologicalSorter.php" size="7028" time="2020-02-26T12:11:53+00:00" unixtime="1582719113" sha1="3e223eb8e9276dea5736b011a554525d7e16f8ff" relative="sr/local/lib/php/Structures/Graph/Manipulator/TopologicalSorter.php"/>
  <docblock>
    <description compact="The Structures_Graph_Manipulator_TopologicalSorter is a manipulator which is able to return the set of nodes in a graph, sorted by topological order.">A graph may only be sorted topologically iff it's a DAG. You can test it
with the Structures_Graph_Manipulator_AcyclicTest.</description>
    <author value="Sérgio Carvalho &lt;sergio.carvalho@portugalmail.com&gt;"/>
    <copyright value="(c) 2004 by Sérgio Carvalho"/>
    <see value="Structures_Graph_Manipulator_AcyclicTest"/>
    <package value="Structures_Graph"/>
  </docblock>
  <method name="_nonVisitedInDegree" start="60" end="73" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="This is a variant of Structures_Graph::inDegree which does not count nodes marked as visited."/>
      <param description="Node to check" type="object" variable="$node"/>
      <return description="Number of non-visited nodes that link to this one" type="integer"/>
    </docblock>
    <parameter name="node" byreference="true" type="{unknown}"/>
  </method>
  <method name="_sort" start="82" end="126" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Sort implementation"/>
      <param description="Graph to sort" type="object" variable="$graph"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="graph" byreference="true" type="{unknown}"/>
    <inline>
      <comment value="Mark every node as not visited" line="84"/>
      <comment value="Iteratively peel off leaf nodes" line="96"/>
      <comment value="Cleanup visited marks" line="122"/>
    </inline>
  </method>
  <method name="sort" start="139" end="174" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sort returns the graph's nodes, sorted by topological order.">The result is an array with as many entries as topological levels.
Each entry in this array is an array of nodes within
the given topological level.</description>
      <param description="Graph to sort" type="object" variable="$graph"/>
      <return description="The graph's nodes, sorted by topological order." type="array"/>
    </docblock>
    <parameter name="graph" byreference="true" type="{unknown}"/>
    <inline>
      <comment value="We only sort graphs" line="141"/>
      <comment value="Fill out result array" line="160"/>
    </inline>
  </method>
</class>
