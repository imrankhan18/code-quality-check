<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpClient\Psr18Client" namespace="Symfony\Component\HttpClient" name="Psr18Client" abstract="false" final="true" start="53" end="201">
  <file path="//var/www/html/vendor/symfony/http-client" file="Psr18Client.php" realpath="/var/www/html/vendor/symfony/http-client/Psr18Client.php" size="8342" time="2022-04-12T16:02:29+00:00" unixtime="1649779349" sha1="7ab2c4e0942db0319bdbcbe0c6ce22cbe252eec6" relative="ar/www/html/vendor/symfony/http-client/Psr18Client.php"/>
  <docblock>
    <description compact="An adapter to turn a Symfony HttpClientInterface into a PSR-18 ClientInterface.">Run "composer require psr/http-client" to install the base ClientInterface. Run
"composer require nyholm/psr7" to install an efficient implementation of response
and stream factories with flex-provided autowiring aliases.</description>
    <author value="Nicolas Grekas &lt;p@tchwork.com&gt;"/>
  </docblock>
  <implements full="Psr\Http\Client\ClientInterface" namespace="Psr\Http\Client" name="ClientInterface"/>
  <implements full="Psr\Http\Message\RequestFactoryInterface" namespace="Psr\Http\Message" name="RequestFactoryInterface"/>
  <implements full="Psr\Http\Message\StreamFactoryInterface" namespace="Psr\Http\Message" name="StreamFactoryInterface"/>
  <implements full="Psr\Http\Message\UriFactoryInterface" namespace="Psr\Http\Message" name="UriFactoryInterface"/>
  <implements full="Symfony\Contracts\Service\ResetInterface" namespace="Symfony\Contracts\Service" name="ResetInterface"/>
  <member name="client" visibility="private" static="false" line="55"/>
  <member name="responseFactory" visibility="private" static="false" line="56"/>
  <member name="streamFactory" visibility="private" static="false" line="57"/>
  <constructor name="__construct" start="59" end="80" abstract="false" final="false" static="false" visibility="public">
    <parameter name="client" byreference="false" type="object" default="NULL">
      <type full="Symfony\Contracts\HttpClient\HttpClientInterface" namespace="Symfony\Contracts\HttpClient" name="HttpClientInterface"/>
    </parameter>
    <parameter name="responseFactory" byreference="false" type="object" default="NULL">
      <type full="Psr\Http\Message\ResponseFactoryInterface" namespace="Psr\Http\Message" name="ResponseFactoryInterface"/>
    </parameter>
    <parameter name="streamFactory" byreference="false" type="object" default="NULL">
      <type full="Psr\Http\Message\StreamFactoryInterface" namespace="Psr\Http\Message" name="StreamFactoryInterface"/>
    </parameter>
  </constructor>
  <method name="sendRequest" start="85" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
  </method>
  <method name="createRequest" start="128" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </return>
    <parameter name="method" byreference="false" type="string"/>
    <parameter name="uri" byreference="false" type="{unknown}"/>
  </method>
  <method name="createStream" start="148" end="157" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="content" byreference="false" type="string" default="''"/>
  </method>
  <method name="createStreamFromFile" start="162" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="filename" byreference="false" type="string"/>
    <parameter name="mode" byreference="false" type="string" default="'r'"/>
  </method>
  <method name="createStreamFromResource" start="170" end="173" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </return>
    <parameter name="resource" byreference="false" type="{unknown}"/>
  </method>
  <method name="createUri" start="178" end="193" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface"/>
    </return>
    <parameter name="uri" byreference="false" type="string" default="''"/>
  </method>
  <method name="reset" start="195" end="200" abstract="false" final="false" static="false" visibility="public"/>
  <interface full="Psr\Http\Client\ClientInterface" namespace="Psr\Http\Client" name="ClientInterface">
    <method name="sendRequest" start="19" end="19" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sends a PSR-7 request and returns a PSR-7 response."/>
        <param type="object" variable="$request">
          <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
        </param>
        <return type="object">
          <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
        </return>
        <throws description="If an error happens while processing the request." type="object">
          <type full="\Psr\Http\Client\ClientExceptionInterface" namespace="\Psr\Http\Client" name="ClientExceptionInterface"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="request" byreference="false" type="object">
        <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
      </parameter>
    </method>
  </interface>
  <interface full="Psr\Http\Message\RequestFactoryInterface" namespace="Psr\Http\Message" name="RequestFactoryInterface">
    <method name="createRequest" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a new request."/>
        <param description="The HTTP method associated with the request." type="string" variable="$method"/>
        <param description="The URI associated with the request. If" type="object" variable="$uri">the value is a string, the factory MUST create a UriInterface
    instance based on it.<type full="Psr\Http\Message\UriInterface|string" namespace="Psr\Http\Message" name="UriInterface|string"/></param>
        <return type="object">
          <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="uri" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <interface full="Psr\Http\Message\StreamFactoryInterface" namespace="Psr\Http\Message" name="StreamFactoryInterface">
    <method name="createStream" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a new stream from a string.">The stream SHOULD be created with a temporary resource.</description>
        <param description="String content with which to populate the stream." type="string" variable="$content"/>
        <return type="object">
          <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
      <parameter name="content" byreference="false" type="string" default="''"/>
    </method>
    <method name="createStreamFromFile" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a stream from an existing file.">The file MUST be opened using the given mode, which may be any mode
supported by the `fopen` function.

The `$filename` MAY be any string supported by `fopen()`.</description>
        <param description="Filename or stream URI to use as basis of stream." type="string" variable="$filename"/>
        <param description="Mode with which to open the underlying filename/stream." type="string" variable="$mode"/>
        <return type="object">
          <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
        </return>
        <throws description="If the file cannot be opened." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
        <throws description="If the mode is invalid." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
      <parameter name="filename" byreference="false" type="string"/>
      <parameter name="mode" byreference="false" type="string" default="'r'"/>
    </method>
    <method name="createStreamFromResource" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a new stream from an existing resource.">The stream MUST be readable and may be writable.</description>
        <param description="PHP resource to use as basis of stream." type="resource" variable="$resource"/>
        <return type="object">
          <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </return>
      <parameter name="resource" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <interface full="Psr\Http\Message\UriFactoryInterface" namespace="Psr\Http\Message" name="UriFactoryInterface">
    <method name="createUri" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a new URI."/>
        <param type="string" variable="$uri"/>
        <return type="object">
          <type full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface"/>
        </return>
        <throws description="If the given URI cannot be parsed." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="string" default="''"/>
    </method>
  </interface>
  <interface full="Symfony\Contracts\Service\ResetInterface" namespace="Symfony\Contracts\Service" name="ResetInterface">
    <method name="reset" start="29" end="29" abstract="false" final="false" static="false" visibility="public"/>
  </interface>
</class>
