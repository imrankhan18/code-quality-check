<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\DependencyResolver\Pool" namespace="Composer\DependencyResolver" name="Pool" abstract="false" final="false" start="27" end="281">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/DependencyResolver" file="Pool.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php" size="8793" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="39bda7d76e2a6a62cf8510bacfed40133f334e00" relative="ar/www/html/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php"/>
  <docblock>
    <description compact="A package pool contains all packages for dependency resolution"/>
    <author value="Nils Adermann &lt;naderman@naderman.de&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <implements full="Countable" namespace="" name="Countable"/>
  <member name="packages" default="" type="array" visibility="protected" static="false" line="30">
    <docblock>
      <var type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </var>
    </docblock>
  </member>
  <member name="packageByName" default="" type="array" visibility="protected" static="false" line="32">
    <docblock>
      <var description="BasePackage[]&gt;" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="versionParser" visibility="protected" static="false" line="34">
    <docblock>
      <var type="object">
        <type full="Composer\Package\Version\VersionParser" namespace="Composer\Package\Version" name="VersionParser"/>
      </var>
    </docblock>
  </member>
  <member name="providerCache" default="" type="array" visibility="protected" static="false" line="36">
    <docblock>
      <var description="array&lt;string, BasePackage[]&gt;&gt;" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="unacceptableFixedOrLockedPackages" visibility="protected" static="false" line="38">
    <docblock>
      <var type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </var>
    </docblock>
  </member>
  <member name="removedVersions" default="" type="array" visibility="protected" static="false" line="40">
    <docblock>
      <var description="array&lt;string, string&gt;&gt; Map of package name =&gt; normalized version =&gt; pretty version" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="removedVersionsByPackage" default="" type="array" visibility="protected" static="false" line="42">
    <docblock>
      <var description="array&lt;string, string&gt;&gt; Map of package object hash =&gt; removed normalized versions =&gt; removed pretty version" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="50" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="array" variable="$packages" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </param>
      <param type="array" variable="$unacceptableFixedOrLockedPackages" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </param>
      <param description="array&lt;string string&gt;&gt; $removedVersions" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </param>
      <param description="array&lt;string string&gt;&gt; $removedVersionsByPackage" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </param>
    </docblock>
    <parameter name="packages" byreference="false" type="array" default=""/>
    <parameter name="unacceptableFixedOrLockedPackages" byreference="false" type="array" default=""/>
    <parameter name="removedVersions" byreference="false" type="array" default=""/>
    <parameter name="removedVersionsByPackage" byreference="false" type="array" default=""/>
  </constructor>
  <method name="getRemovedVersions" start="63" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$name"/>
      <return description="string&gt;" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="object">
      <type full="Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Semver\Constraint" name="ConstraintInterface"/>
    </parameter>
  </method>
  <method name="getRemovedVersionsByPackage" start="83" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$objectHash"/>
      <return description="string&gt;" type="object">
        <type full="Composer\DependencyResolver\array&lt;string" namespace="Composer\DependencyResolver" name="array&lt;string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="objectHash" byreference="false" type="string"/>
  </method>
  <method name="setPackages" start="96" end="109" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$packages" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </param>
      <return type="object">
        <type full="Composer\DependencyResolver\void" namespace="Composer\DependencyResolver" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="packages" byreference="false" type="array"/>
  </method>
  <method name="getPackages" start="114" end="117" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="packageById" start="125" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves the package object for a given package id."/>
      <param type="int" variable="$id"/>
      <return type="object">
        <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
    </return>
    <parameter name="id" byreference="false" type="int"/>
  </method>
  <method name="count" start="133" end="136" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns how many packages have been loaded into the pool"/>
    </docblock>
    <return type="int" nullable="false"/>
  </method>
  <method name="whatProvides" start="146" end="154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Searches all packages providing the given package name and match the constraint"/>
      <param description="The package name to be searched for" type="string" variable="$name"/>
      <param description="A constraint that all returned" type="object" variable="$constraint">packages must match or null to return all<type full="Composer\DependencyResolver\?ConstraintInterface" namespace="Composer\DependencyResolver" name="?ConstraintInterface"/></param>
      <return description="A set of packages" type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="object" default="NULL">
      <type full="Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Semver\Constraint" name="ConstraintInterface"/>
    </parameter>
  </method>
  <method name="computeWhatProvides" start="162" end="177" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param description="The package name to be searched for" type="string" variable="$name"/>
      <param description="A constraint that all returned" type="object" variable="$constraint">packages must match or null to return all<type full="Composer\DependencyResolver\?ConstraintInterface" namespace="Composer\DependencyResolver" name="?ConstraintInterface"/></param>
      <return type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="object" default="NULL">
      <type full="Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Semver\Constraint" name="ConstraintInterface"/>
    </parameter>
  </method>
  <method name="literalToPackage" start="183" end="188" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="int" variable="$literal"/>
      <return type="object">
        <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
    </return>
    <parameter name="literal" byreference="false" type="int"/>
  </method>
  <method name="literalToPrettyString" start="195" end="206" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="int" variable="$literal"/>
      <param description="BasePackage&gt; $installedMap" type="object">
        <type full="Composer\DependencyResolver\array&lt;int" namespace="Composer\DependencyResolver" name="array&lt;int"/>
      </param>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="literal" byreference="false" type="int"/>
    <parameter name="installedMap" byreference="false" type="array"/>
  </method>
  <method name="match" start="215" end="253" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the package matches the given constraint directly or through provided or replaced packages"/>
      <param description="Name of the package to be matched" type="string" variable="$name"/>
      <return type="object">
        <type full="Composer\DependencyResolver\bool" namespace="Composer\DependencyResolver" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="candidate" byreference="false" type="object">
      <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
    </parameter>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="constraint" byreference="false" type="object" default="NULL">
      <type full="Composer\Semver\Constraint\ConstraintInterface" namespace="Composer\Semver\Constraint" name="ConstraintInterface"/>
    </parameter>
    <inline>
      <comment value="aliases create multiple replaces/provides for one target so they can not use the shortcut below" line="227"/>
    </inline>
  </method>
  <method name="isUnacceptableFixedOrLockedPackage" start="258" end="261" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\DependencyResolver\bool" namespace="Composer\DependencyResolver" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
    </parameter>
  </method>
  <method name="getUnacceptableFixedOrLockedPackages" start="266" end="269" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="Composer\DependencyResolver\BasePackage" namespace="Composer\DependencyResolver" name="BasePackage"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="__toString" start="271" end="280" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
</class>
