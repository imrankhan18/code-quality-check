<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Polyfill\Ctype\Ctype" namespace="Symfony\Polyfill\Ctype" name="Ctype" abstract="false" final="true" start="21" end="232">
  <file path="//var/www/html/vendor/symfony/polyfill-ctype" file="Ctype.php" realpath="/var/www/html/vendor/symfony/polyfill-ctype/Ctype.php" size="6587" time="2021-10-20T20:35:02+00:00" unixtime="1634762102" sha1="44c8c784ae6d4211c598515e2f760a9496ca143e" relative="ar/www/html/vendor/symfony/polyfill-ctype/Ctype.php"/>
  <docblock>
    <description compact="Ctype implementation through regex."/>
    <internal/>
    <author value="Gert de Pagter &lt;BackEndTea@gmail.com&gt;"/>
  </docblock>
  <method name="ctype_alnum" start="32" end="37" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is either a letter or a digit, FALSE otherwise."/>
      <see value="https://php.net/ctype-alnum"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_alpha" start="48" end="53" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is a letter, FALSE otherwise."/>
      <see value="https://php.net/ctype-alpha"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_cntrl" start="64" end="69" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is a control character from the current locale, FALSE otherwise."/>
      <see value="https://php.net/ctype-cntrl"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_digit" start="80" end="85" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in the string text is a decimal digit, FALSE otherwise."/>
      <see value="https://php.net/ctype-digit"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_graph" start="96" end="101" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is printable and actually creates visible output (no white space), FALSE otherwise."/>
      <see value="https://php.net/ctype-graph"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_lower" start="112" end="117" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is a lowercase letter."/>
      <see value="https://php.net/ctype-lower"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_print" start="128" end="133" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text will actually create output (including blanks). Returns FALSE if text contains control characters or characters that do not have any output or control function at all."/>
      <see value="https://php.net/ctype-print"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_punct" start="144" end="149" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is printable, but neither letter, digit or blank, FALSE otherwise."/>
      <see value="https://php.net/ctype-punct"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_space" start="160" end="165" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text creates some sort of white space, FALSE otherwise. Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters."/>
      <see value="https://php.net/ctype-space"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_upper" start="176" end="181" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is an uppercase letter."/>
      <see value="https://php.net/ctype-upper"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="ctype_xdigit" start="192" end="197" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns TRUE if every character in text is a hexadecimal 'digit', that is a decimal digit or a character from [A-Fa-f] , FALSE otherwise."/>
      <see value="https://php.net/ctype-xdigit"/>
      <param type="mixed" variable="$text"/>
      <return type="object">
        <type full="Symfony\Polyfill\Ctype\bool" namespace="Symfony\Polyfill\Ctype" name="bool"/>
      </return>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="convert_int_to_char_for_ctype" start="212" end="231" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Converts integers to their char versions according to normal ctype behaviour, if needed.">If an integer between -128 and 255 inclusive is provided,
it is interpreted as the ASCII value of a single character
(negative values have 256 added in order to allow characters in the Extended ASCII range).
Any other integer is interpreted as a string containing the decimal digits of the integer.</description>
      <param type="mixed" variable="$int"/>
      <param type="string" variable="$function"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="int" byreference="false" type="{unknown}"/>
    <parameter name="function" byreference="false" type="{unknown}"/>
  </method>
</class>
