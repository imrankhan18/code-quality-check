<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="MongoDB\Tests\SpecTests\ErrorExpectation" namespace="MongoDB\Tests\SpecTests" name="ErrorExpectation" abstract="false" final="true" start="23" end="290">
  <file path="//var/www/html/vendor/mongodb/mongodb/tests/SpecTests" file="ErrorExpectation.php" realpath="/var/www/html/vendor/mongodb/mongodb/tests/SpecTests/ErrorExpectation.php" size="8536" time="2022-03-23T20:18:39+00:00" unixtime="1648066719" sha1="89b9a823bb101a9f8ee953f44ef3a08002e9466c" relative="ar/www/html/vendor/mongodb/mongodb/tests/SpecTests/ErrorExpectation.php"/>
  <docblock>
    <description compact="Spec test operation error expectation."/>
  </docblock>
  <member name="codeNameMap" default="" type="array" visibility="private" static="true" line="30">
    <docblock>
      <description/>
      <see value="https://github.com/mongodb/mongo/blob/master/src/mongo/base/error_codes.err"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="code" visibility="private" static="false" line="39">
    <docblock>
      <var type="integer"/>
    </docblock>
  </member>
  <member name="codeName" visibility="private" static="false" line="42">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="isExpected" default="false" type="boolean" visibility="private" static="false" line="45">
    <docblock>
      <var type="boolean"/>
    </docblock>
  </member>
  <member name="excludedLabels" default="" type="array" visibility="private" static="false" line="48">
    <docblock>
      <var type="array" of="object">
        <type full="MongoDB\Tests\SpecTests\string" namespace="MongoDB\Tests\SpecTests" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="includedLabels" default="" type="array" visibility="private" static="false" line="51">
    <docblock>
      <var type="array" of="object">
        <type full="MongoDB\Tests\SpecTests\string" namespace="MongoDB\Tests\SpecTests" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="messageContains" visibility="private" static="false" line="54">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="56" end="58" abstract="false" final="false" static="false" visibility="private"/>
  <method name="fromChangeStreams" start="60" end="79" abstract="false" final="false" static="true" visibility="public">
    <parameter name="result" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="fromClientSideEncryption" start="81" end="84" abstract="false" final="false" static="true" visibility="public">
    <parameter name="operation" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="fromCrud" start="86" end="95" abstract="false" final="false" static="true" visibility="public">
    <parameter name="result" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="fromReadWriteConcern" start="97" end="100" abstract="false" final="false" static="true" visibility="public">
    <parameter name="operation" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="fromRetryableReads" start="102" end="111" abstract="false" final="false" static="true" visibility="public">
    <parameter name="operation" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="fromRetryableWrites" start="113" end="140" abstract="false" final="false" static="true" visibility="public">
    <parameter name="outcome" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
    <inline>
      <comment value="outcome.result will only contain error label assertions if an error" line="121"/>
      <comment xmlns="http://xml.phpdox.net/src" value="* is expected (i.e. outcome.error is true)." line="122"/>
    </inline>
  </method>
  <method name="fromTransactions" start="145" end="148" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <throws type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="operation" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="noError" start="150" end="153" abstract="false" final="false" static="true" visibility="public"/>
  <method name="assert" start="161" end="192" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the error expectation matches the actual outcome."/>
      <param description="Test instance for performing assertions" type="object" variable="$test">
        <type full="MongoDB\Tests\TestCase" namespace="MongoDB\Tests" name="TestCase"/>
      </param>
      <param description="Exception (if any) from the actual outcome" type="object" variable="$actual">
        <type full="MongoDB\Tests\SpecTests\Exception|null" namespace="MongoDB\Tests\SpecTests" name="Exception|null"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="test" byreference="false" type="object">
      <type full="MongoDB\Tests\TestCase" namespace="MongoDB\Tests" name="TestCase"/>
    </parameter>
    <parameter name="actual" byreference="false" nullable="true" type="object" default="NULL">
      <type full="Throwable" namespace="" name="Throwable"/>
    </parameter>
  </method>
  <method name="isExpected" start="194" end="197" abstract="false" final="false" static="false" visibility="public"/>
  <method name="assertCodeName" start="205" end="230" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Assert that the error code name expectation matches the actual outcome."/>
      <param description="Test instance for performing assertions" type="object" variable="$test">
        <type full="MongoDB\Tests\TestCase" namespace="MongoDB\Tests" name="TestCase"/>
      </param>
      <param description="Exception (if any) from the actual outcome" type="object" variable="$actual">
        <type full="MongoDB\Tests\SpecTests\Exception|null" namespace="MongoDB\Tests\SpecTests" name="Exception|null"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="test" byreference="false" type="object">
      <type full="MongoDB\Tests\TestCase" namespace="MongoDB\Tests" name="TestCase"/>
    </parameter>
    <parameter name="actual" byreference="false" nullable="true" type="object" default="NULL">
      <type full="Throwable" namespace="" name="Throwable"/>
    </parameter>
    <inline>
      <comment value="BulkWriteException does not expose codeName for server errors. Work" line="207"/>
      <comment xmlns="http://xml.phpdox.net/src" value="around this be comparing the error code against a map." line="208"/>
      <comment xmlns="http://xml.phpdox.net/src" value="* TODO: Remove this once PHPC-1386 is resolved." line="209"/>
    </inline>
  </method>
  <method name="fromGenericOperation" start="235" end="274" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <throws type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="operation" byreference="false" type="object">
      <type full="stdClass" namespace="" name="stdClass"/>
    </parameter>
  </method>
  <method name="isArrayOfStrings" start="276" end="289" abstract="false" final="false" static="true" visibility="private">
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
</class>
