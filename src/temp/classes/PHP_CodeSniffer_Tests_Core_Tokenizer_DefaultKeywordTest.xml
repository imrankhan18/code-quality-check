<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Tests\Core\Tokenizer\DefaultKeywordTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="DefaultKeywordTest" abstract="false" final="false" start="15" end="302">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/tests/Core/Tokenizer" file="DefaultKeywordTest.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/tests/Core/Tokenizer/DefaultKeywordTest.php" size="14339" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="b592c7f0dcacee203e52f2427d2dc1494579c977" relative="ar/www/html/vendor/squizlabs/php_codesniffer/tests/Core/Tokenizer/DefaultKeywordTest.php"/>
  <extends full="PHP_CodeSniffer\Tests\Core\AbstractMethodUnitTest" namespace="PHP_CodeSniffer\Tests\Core" name="AbstractMethodUnitTest"/>
  <method name="testMatchDefault" start="34" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test the retokenization of the `default` keyword for match structure to `T_MATCH_DEFAULT`.">Note: Cases and default structures within a match structure do *NOT* get case/default scope
conditions, in contrast to case and default structures in switch control structures.</description>
      <param description="The comment prefacing the target token." type="string" variable="$testMarker"/>
      <param description="The token content to look for." type="string" variable="$testContent"/>
      <dataprovider value="dataMatchDefault"/>
      <covers value="PHP_CodeSniffer\Tokenizers\PHP::tokenize"/>
      <covers value="PHP_CodeSniffer\Tokenizers\Tokenizer::recurseScopeMap"/>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\Tokenizer\void" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="void"/>
      </return>
    </docblock>
    <parameter name="testMarker" byreference="false" type="{unknown}"/>
    <parameter name="testContent" byreference="false" type="string" default="'default'"/>
  </method>
  <method name="dataMatchDefault" start="58" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Data provider."/>
      <see value="testMatchDefault()"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="testSwitchDefault" start="114" end="164" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verify that the retokenization of `T_DEFAULT` tokens in match constructs, doesn't negatively impact the tokenization of `T_DEFAULT` tokens in switch control structures.">Note: Cases and default structures within a switch control structure *do* get case/default scope
conditions.</description>
      <param description="The comment prefacing the target token." type="string" variable="$testMarker"/>
      <param description="The expected offset of the scope opener in relation to the testMarker." type="int" variable="$openerOffset"/>
      <param description="The expected offset of the scope closer in relation to the testMarker." type="int" variable="$closerOffset"/>
      <param description="The expected offset at which tokens stop having T_DEFAULT as a scope condition." type="object" variable="$conditionStop">
        <type full="PHP_CodeSniffer\Tests\Core\Tokenizer\int|null" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="int|null"/>
      </param>
      <param description="The token content to look for." type="string" variable="$testContent"/>
      <dataprovider value="dataSwitchDefault"/>
      <covers value="PHP_CodeSniffer\Tokenizers\Tokenizer::recurseScopeMap"/>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\Tokenizer\void" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="void"/>
      </return>
    </docblock>
    <parameter name="testMarker" byreference="false" type="{unknown}"/>
    <parameter name="openerOffset" byreference="false" type="{unknown}"/>
    <parameter name="closerOffset" byreference="false" type="{unknown}"/>
    <parameter name="conditionStop" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="testContent" byreference="false" type="string" default="'default'"/>
  </method>
  <method name="dataSwitchDefault" start="174" end="209" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Data provider."/>
      <see value="testSwitchDefault()"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="testNotDefaultKeyword" start="225" end="239" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verify that the retokenization of `T_DEFAULT` tokens in match constructs, doesn't negatively impact the tokenization of `T_STRING` tokens with the contents 'default' which aren't in actual fact the default keyword."/>
      <param description="The comment prefacing the target token." type="string" variable="$testMarker"/>
      <param description="The token content to look for." type="string" variable="$testContent"/>
      <dataprovider value="dataNotDefaultKeyword"/>
      <covers value="PHP_CodeSniffer\Tokenizers\PHP::processAdditional"/>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\Tokenizer\void" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="void"/>
      </return>
    </docblock>
    <parameter name="testMarker" byreference="false" type="{unknown}"/>
    <parameter name="testContent" byreference="false" type="string" default="'DEFAULT'"/>
  </method>
  <method name="dataNotDefaultKeyword" start="249" end="278" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Data provider."/>
      <see value="testNotDefaultKeyword()"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="testIssue3326" start="288" end="299" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test a specific edge case where a scope opener would be incorrectly set."/>
      <link value="https://github.com/squizlabs/PHP_CodeSniffer/issues/3326"/>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\Tokenizer\void" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="void"/>
      </return>
    </docblock>
  </method>
  <parent full="PHP_CodeSniffer\Tests\Core\AbstractMethodUnitTest" namespace="PHP_CodeSniffer\Tests\Core" name="AbstractMethodUnitTest">
    <extends full="PHPUnit\Framework\TestCase" namespace="PHPUnit\Framework" name="TestCase" unresolved="true"/>
    <member name="fileExtension" default="'inc'" type="string" visibility="protected" static="true" line="28">
      <docblock>
        <description compact="The file extension of the test case file (without leading dot).">This allows child classes to overrule the default `inc` with, for instance,
`js` or `css` when applicable.</description>
        <var type="string"/>
      </docblock>
    </member>
    <member name="phpcsFile" visibility="protected" static="true" line="35">
      <docblock>
        <description compact="The \PHP_CodeSniffer\Files\File object containing the parsed contents of the test case file."/>
        <var type="object">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </var>
      </docblock>
    </member>
    <method name="setUpBeforeClass" start="46" end="65" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Initialize &amp; tokenize \PHP_CodeSniffer\Files\File with code from the test case file.">The test case file for a unit test class has to be in the same directory
directory and use the same file name as the test class, using the .inc extension.</description>
        <return type="object">
          <type full="PHP_CodeSniffer\Tests\Core\void" namespace="PHP_CodeSniffer\Tests\Core" name="void"/>
        </return>
      </docblock>
      <inline>
        <comment value="Default to a file with the same name as the test class. Extension is property based." line="53"/>
        <comment value="Make sure the file gets parsed correctly based on the file type." line="58"/>
      </inline>
    </method>
    <method name="tearDownAfterClass" start="73" end="77" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Clean up after finished test."/>
        <return type="object">
          <type full="PHP_CodeSniffer\Tests\Core\void" namespace="PHP_CodeSniffer\Tests\Core" name="void"/>
        </return>
      </docblock>
    </method>
    <method name="getTargetToken" start="92" end="137" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the token pointer for a target token based on a specific comment found on the line before.">Note: the test delimiter comment MUST start with "/* test" to allow this function to
distinguish between comments used *in* a test and test delimiters.</description>
        <param description="The delimiter comment to look for." type="string" variable="$commentString"/>
        <param description="The type of token(s) to look for." type="object" variable="$tokenType">
          <type full="PHP_CodeSniffer\Tests\Core\int|string|array" namespace="PHP_CodeSniffer\Tests\Core" name="int|string|array"/>
        </param>
        <param description="Optional. The token content for the target token." type="string" variable="$tokenContent"/>
        <return type="int"/>
      </docblock>
      <parameter name="commentString" byreference="false" type="{unknown}"/>
      <parameter name="tokenType" byreference="false" type="{unknown}"/>
      <parameter name="tokenContent" byreference="false" type="{unknown}" default="NULL"/>
      <inline>
        <comment value="Limit the token finding to between this and the next delimiter comment." line="106"/>
      </inline>
    </method>
  </parent>
</class>
