<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="MongoDB\Database" namespace="MongoDB" name="Database" abstract="false" final="false" start="49" end="584">
  <file path="//var/www/html/vendor/mongodb/mongodb/src" file="Database.php" realpath="/var/www/html/vendor/mongodb/mongodb/src/Database.php" size="20565" time="2022-03-23T20:18:39+00:00" unixtime="1648066719" sha1="18691dbe656ce6f3ec047ebad36fa4937fc8100e" relative="ar/www/html/vendor/mongodb/mongodb/src/Database.php"/>
  <member name="defaultTypeMap" default="" type="array" visibility="private" static="true" line="52">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <member name="wireVersionForReadConcernWithWriteStage" default="8" type="integer" visibility="private" static="true" line="59">
    <docblock>
      <var type="integer"/>
    </docblock>
  </member>
  <member name="databaseName" visibility="private" static="false" line="62">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="manager" visibility="private" static="false" line="65">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </var>
    </docblock>
  </member>
  <member name="readConcern" visibility="private" static="false" line="68">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\ReadConcern" namespace="MongoDB\Driver" name="ReadConcern"/>
      </var>
    </docblock>
  </member>
  <member name="readPreference" visibility="private" static="false" line="71">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\ReadPreference" namespace="MongoDB\Driver" name="ReadPreference"/>
      </var>
    </docblock>
  </member>
  <member name="typeMap" visibility="private" static="false" line="74">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <member name="writeConcern" visibility="private" static="false" line="77">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\WriteConcern" namespace="MongoDB\Driver" name="WriteConcern"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="106" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs new Database instance.">This class provides methods for database-specific operations and serves
as a gateway for accessing collections.

Supported options:

 * readConcern (MongoDB\Driver\ReadConcern): The default read concern to
   use for database operations and selected collections. Defaults to the
   Manager's read concern.

 * readPreference (MongoDB\Driver\ReadPreference): The default read
   preference to use for database operations and selected collections.
   Defaults to the Manager's read preference.

 * typeMap (array): Default type map for cursors and BSON documents.

 * writeConcern (MongoDB\Driver\WriteConcern): The default write concern
   to use for database operations and selected collections. Defaults to
   the Manager's write concern.</description>
      <param description="Manager instance from the driver" type="object" variable="$manager">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </param>
      <param description="Database name" type="string" variable="$databaseName"/>
      <param description="Database options" type="array" variable="$options"/>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="manager" byreference="false" type="object">
      <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
    </parameter>
    <parameter name="databaseName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </constructor>
  <method name="__debugInfo" start="142" end="152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return internal properties for debugging purposes."/>
      <see value="http://php.net/manual/en/language.oop5.magic.php#language.oop5.magic.debuginfo"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="__get" start="166" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Select a collection within this database.">Note: collections whose names contain special characters (e.g. ".") may
be selected with complex syntax (e.g. $database-&gt;{"system.profile"}) or
{@link selectCollection()}.</description>
      <see value="http://php.net/oop5.overloading#object.get"/>
      <see value="http://php.net/types.string#language.types.string.parsing.complex"/>
      <param description="Name of the collection to select" type="string" variable="$collectionName"/>
      <return type="object">
        <type full="MongoDB\Collection" namespace="MongoDB" name="Collection"/>
      </return>
    </docblock>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
  </method>
  <method name="__toString" start="176" end="179" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the database name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="aggregate" start="195" end="231" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs an aggregation framework pipeline on the database for pipeline stages that do not require an underlying collection, such as $currentOp and $listLocalSessions. Requires MongoDB &gt;= 3.6"/>
      <see value="Aggregate::__construct() for supported options"/>
      <param description="List of pipeline operations" type="array" variable="$pipeline"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="pipeline" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="MongoDB 4.2 and later supports a read concern when an $out stage is" line="207"/>
      <comment xmlns="http://xml.phpdox.net/src" value="being used, but earlier versions do not." line="208"/>
      <comment xmlns="http://xml.phpdox.net/src" value="A read concern is also not compatible with transactions." line="209"/>
    </inline>
  </method>
  <method name="command" start="243" end="253" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Execute a command on this database."/>
      <see value="DatabaseCommand::__construct() for supported options"/>
      <param description="Command document" type="object" variable="$command">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Options for command execution" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Driver\Cursor" namespace="MongoDB\Driver" name="Cursor"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="createCollection" start="266" end="281" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new collection explicitly."/>
      <see value="CreateCollection::__construct() for supported options"/>
      <param type="string" variable="$collectionName"/>
      <param type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="drop" start="293" end="308" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Drop this database."/>
      <see value="DropDatabase::__construct() for supported options"/>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are unsupported on the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="dropCollection" start="321" end="336" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Drop a collection within this database."/>
      <see value="DropCollection::__construct() for supported options"/>
      <param description="Collection name" type="string" variable="$collectionName"/>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are unsupported on the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="getDatabaseName" start="343" end="346" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the database name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getManager" start="353" end="356" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the Manager."/>
      <return type="object">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </return>
    </docblock>
  </method>
  <method name="getReadConcern" start="364" end="367" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the read concern for this database."/>
      <see value="http://php.net/manual/en/mongodb-driver-readconcern.isdefault.php"/>
      <return type="object">
        <type full="MongoDB\Driver\ReadConcern" namespace="MongoDB\Driver" name="ReadConcern"/>
      </return>
    </docblock>
  </method>
  <method name="getReadPreference" start="374" end="377" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the read preference for this database."/>
      <return type="object">
        <type full="MongoDB\Driver\ReadPreference" namespace="MongoDB\Driver" name="ReadPreference"/>
      </return>
    </docblock>
  </method>
  <method name="getTypeMap" start="384" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the type map for this database."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getWriteConcern" start="395" end="398" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the write concern for this database."/>
      <see value="http://php.net/manual/en/mongodb-driver-writeconcern.isdefault.php"/>
      <return type="object">
        <type full="MongoDB\Driver\WriteConcern" namespace="MongoDB\Driver" name="WriteConcern"/>
      </return>
    </docblock>
  </method>
  <method name="listCollectionNames" start="407" end="413" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the names of all collections in this database"/>
      <see value="ListCollectionNames::__construct() for supported options"/>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="object" nullable="false">
      <type full="Iterator" namespace="" name="Iterator"/>
    </return>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="listCollections" start="424" end="430" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns information for all collections in this database."/>
      <see value="ListCollections::__construct() for supported options"/>
      <param type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Model\CollectionInfoIterator" namespace="MongoDB\Model" name="CollectionInfoIterator"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="modifyCollection" start="443" end="458" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Modifies a collection or view."/>
      <see value="ModifyCollection::__construct() for supported options"/>
      <param description="Collection or view to modify" type="string" variable="$collectionName"/>
      <param description="Collection or view options to assign" type="array" variable="$collectionOptions"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
    <parameter name="collectionOptions" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="renameCollection" start="473" end="492" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Rename a collection within this database."/>
      <see value="RenameCollection::__construct() for supported options"/>
      <param description="Collection name" type="string" variable="$fromCollectionName"/>
      <param description="New name of the collection" type="string" variable="$toCollectionName"/>
      <param description="New database name of the collection. Defaults to the original database." type="object" variable="$toDatabaseName">
        <type full="MongoDB\?string" namespace="MongoDB" name="?string"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are unsupported on the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="fromCollectionName" byreference="false" type="string"/>
    <parameter name="toCollectionName" byreference="false" type="string"/>
    <parameter name="toDatabaseName" byreference="false" nullable="true" type="string" default="NULL"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="selectCollection" start="503" end="513" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Select a collection within this database."/>
      <see value="Collection::__construct() for supported options"/>
      <param description="Name of the collection to select" type="string" variable="$collectionName"/>
      <param description="Collection constructor options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Collection" namespace="MongoDB" name="Collection"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="selectGridFSBucket" start="523" end="533" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Select a GridFS bucket within this database."/>
      <see value="Bucket::__construct() for supported options"/>
      <param description="Bucket constructor options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\GridFS\Bucket" namespace="MongoDB\GridFS" name="Bucket"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="watch" start="544" end="563" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a change stream for watching changes to the database."/>
      <see value="Watch::__construct() for supported options"/>
      <param description="List of pipeline operations" type="array" variable="$pipeline"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\ChangeStream" namespace="MongoDB" name="ChangeStream"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="pipeline" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="withOptions" start="573" end="583" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a clone of this database with different options."/>
      <see value="Database::__construct() for supported options"/>
      <param description="Database constructor options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Database" namespace="MongoDB" name="Database"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
</class>
