<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Factory" namespace="Composer" name="Factory" abstract="false" final="false" start="54" end="722">
  <file path="//var/www/html/vendor/composer/composer/src/Composer" file="Factory.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Factory.php" size="29877" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="8dc72dcfa3bf17e84fb0cf440b6d707039f9c56e" relative="ar/www/html/vendor/composer/composer/src/Composer/Factory.php"/>
  <docblock>
    <description compact="Creates a configured instance of composer."/>
    <author value="Ryan Weaver &lt;ryan@knplabs.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
    <author value="Igor Wiedler &lt;igor@wiedler.ch&gt;"/>
    <author value="Nils Adermann &lt;naderman@naderman.de&gt;"/>
  </docblock>
  <method name="getHomeDir" start="59" end="98" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="string" nullable="false"/>
    <inline>
      <comment value="select first dir which exists of: $XDG_CONFIG_HOME/composer or ~/.composer" line="89"/>
      <comment value="if none exists, we default to first defined one (XDG one if system uses it, or ~/.composer otherwise)" line="96"/>
    </inline>
  </method>
  <method name="getCacheDir" start="100" end="143" abstract="false" final="false" static="true" visibility="protected">
    <return type="string" nullable="false"/>
    <parameter name="home" byreference="false" type="string"/>
  </method>
  <method name="getDataDir" start="145" end="164" abstract="false" final="false" static="true" visibility="protected">
    <return type="string" nullable="false"/>
    <parameter name="home" byreference="false" type="string"/>
  </method>
  <method name="createConfig" start="166" end="240" abstract="false" final="false" static="true" visibility="public">
    <return type="object" nullable="false">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </return>
    <parameter name="io" byreference="false" type="object" default="NULL">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="cwd" byreference="false" nullable="true" type="string" default="NULL"/>
    <inline>
      <comment value="determine and add main dirs to the config" line="172"/>
      <comment value="load global config" line="182"/>
      <comment value="load global auth file" line="209"/>
      <comment value="load COMPOSER_AUTH environment variable if set" line="220"/>
    </inline>
  </method>
  <method name="getComposerFile" start="242" end="245" abstract="false" final="false" static="true" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <method name="getLockFile" start="247" end="252" abstract="false" final="false" static="true" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="composerFile" byreference="false" type="string"/>
  </method>
  <method name="createAdditionalStyles" start="257" end="263" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return description="OutputFormatterStyle, warning: OutputFormatterStyle}" type="object">
        <type full="Composer\array{highlight:" namespace="Composer" name="array{highlight:"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="createOutput" start="265" end="271" abstract="false" final="false" static="true" visibility="public">
    <return type="object" nullable="false">
      <type full="Symfony\Component\Console\Output\ConsoleOutput" namespace="Symfony\Component\Console\Output" name="ConsoleOutput"/>
    </return>
  </method>
  <method name="createComposer" start="287" end="439" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a Composer instance"/>
      <param description="IO instance" type="object" variable="$io">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </param>
      <param description="mixed&gt;|string|null $localConfig    either a configuration array or a filename to read from, if null it will" type="object">read from the default filename<type full="Composer\array&lt;string" namespace="Composer" name="array&lt;string"/></param>
      <param description="Whether plugins should not be loaded" type="object" variable="$disablePlugins">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <param description="Whether scripts should not be run" type="object" variable="$disableScripts">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <param type="object" variable="$cwd">
        <type full="Composer\string|null" namespace="Composer" name="string|null"/>
      </param>
      <param description="Whether to initialize everything or only main project stuff (used when loading the global composer)" type="object" variable="$fullLoad">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws type="object">
        <type full="\UnexpectedValueException" namespace="" name="UnexpectedValueException"/>
      </throws>
      <return description="Composer if $fullLoad is true, otherwise PartialComposer" type="object">
        <type full="Composer\Composer|PartialComposer" namespace="Composer" name="Composer|PartialComposer"/>
      </return>
    </docblock>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="localConfig" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="disablePlugins" byreference="false" type="boolean" default="false"/>
    <parameter name="cwd" byreference="false" nullable="true" type="string" default="NULL"/>
    <parameter name="fullLoad" byreference="false" type="boolean" default="true"/>
    <parameter name="disableScripts" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="load Composer configuration" line="291"/>
      <comment value="Load config and override with local config/auth config" line="324"/>
      <comment value="initialize composer" line="341"/>
      <comment value="initialize event dispatcher" line="360"/>
      <comment value="initialize repository manager" line="365"/>
      <comment value="force-set the version of the global package if not defined as" line="369"/>
      <comment value="guessing it adds no value and only takes time" line="370"/>
      <comment value="load package" line="375"/>
      <comment value="load local repository" line="382"/>
      <comment value="initialize installation manager" line="385"/>
      <comment value="add installers to the manager (must happen after download manager is created since they read it out of $composer)" line="403"/>
      <comment value="init locker if possible" line="418"/>
    </inline>
  </method>
  <method name="createGlobal" start="445" end="453" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="Whether plugins should not be loaded" type="object" variable="$disablePlugins">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <param description="Whether scripts should not be executed" type="object" variable="$disableScripts">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
    </docblock>
    <return type="object" nullable="true">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="disablePlugins" byreference="false" type="boolean" default="false"/>
    <parameter name="disableScripts" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="addLocalRepository" start="461" end="469" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$rm">
        <type full="Composer\Repository\RepositoryManager" namespace="Composer\Repository" name="RepositoryManager"/>
      </param>
      <param type="string" variable="$vendorDir"/>
      <return type="object">
        <type full="Composer\void" namespace="Composer" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="rm" byreference="false" type="object">
      <type full="Composer\Repository\RepositoryManager" namespace="Composer\Repository" name="RepositoryManager"/>
    </parameter>
    <parameter name="vendorDir" byreference="false" type="string"/>
    <parameter name="rootPackage" byreference="false" type="object">
      <type full="Composer\Package\RootPackageInterface" namespace="Composer\Package" name="RootPackageInterface"/>
    </parameter>
    <parameter name="process" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
  </method>
  <method name="createGlobalComposer" start="474" end="484" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return description="By default PartialComposer, but Composer if $fullLoad is set to true" type="object">
        <type full="Composer\PartialComposer|Composer|null" namespace="Composer" name="PartialComposer|Composer|null"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="Composer\PartialComposer" namespace="Composer" name="PartialComposer"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="disablePlugins" byreference="false" type="bool"/>
    <parameter name="disableScripts" byreference="false" type="bool"/>
    <parameter name="fullLoad" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="createDownloadManager" start="492" end="535" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$io">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </param>
      <param type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
      <param type="object" variable="$eventDispatcher">
        <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
      </param>
      <return type="object">
        <type full="Composer\Downloader\DownloadManager" namespace="Composer\Downloader" name="DownloadManager"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Downloader\DownloadManager" namespace="Composer\Downloader" name="DownloadManager"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="httpDownloader" byreference="false" type="object">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </parameter>
    <parameter name="process" byreference="false" type="object">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
    <parameter name="eventDispatcher" byreference="false" type="object" default="NULL">
      <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
    </parameter>
  </method>
  <method name="createArchiveManager" start="542" end="553" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="The configuration" type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
      <param description="Manager use to download sources" type="object" variable="$dm">
        <type full="Composer\Downloader\DownloadManager" namespace="Composer\Downloader" name="DownloadManager"/>
      </param>
      <return type="object">
        <type full="Composer\Archiver\ArchiveManager" namespace="Composer\Archiver" name="ArchiveManager"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="dm" byreference="false" type="object">
      <type full="Composer\Downloader\DownloadManager" namespace="Composer\Downloader" name="DownloadManager"/>
    </parameter>
    <parameter name="loop" byreference="false" type="object">
      <type full="Composer\Util\Loop" namespace="Composer\Util" name="Loop"/>
    </parameter>
  </method>
  <method name="createPluginManager" start="558" end="561" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Plugin\PluginManager" namespace="Composer\Plugin" name="PluginManager"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Plugin\PluginManager" namespace="Composer\Plugin" name="PluginManager"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="composer" byreference="false" type="object">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </parameter>
    <parameter name="globalComposer" byreference="false" type="object" default="NULL">
      <type full="Composer\PartialComposer" namespace="Composer" name="PartialComposer"/>
    </parameter>
    <parameter name="disablePlugins" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="createInstallationManager" start="566" end="569" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Installer\InstallationManager" namespace="Composer\Installer" name="InstallationManager"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Installer\InstallationManager" namespace="Composer\Installer" name="InstallationManager"/>
    </return>
    <parameter name="loop" byreference="false" type="object">
      <type full="Composer\Util\Loop" namespace="Composer\Util" name="Loop"/>
    </parameter>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="eventDispatcher" byreference="false" type="object" default="NULL">
      <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
    </parameter>
  </method>
  <method name="createDefaultInstallers" start="574" end="582" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\void" namespace="Composer" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="im" byreference="false" type="object">
      <type full="Composer\Installer\InstallationManager" namespace="Composer\Installer" name="InstallationManager"/>
    </parameter>
    <parameter name="composer" byreference="false" type="object">
      <type full="Composer\PartialComposer" namespace="Composer" name="PartialComposer"/>
    </parameter>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="process" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
  </method>
  <method name="purgePackages" start="588" end="595" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param description="repository to purge packages from" type="object" variable="$repo">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <param description="manager to check whether packages are still installed" type="object" variable="$im">
        <type full="Composer\Installer\InstallationManager" namespace="Composer\Installer" name="InstallationManager"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="im" byreference="false" type="object">
      <type full="Composer\Installer\InstallationManager" namespace="Composer\Installer" name="InstallationManager"/>
    </parameter>
  </method>
  <method name="loadRootPackage" start="597" end="600" abstract="false" final="false" static="false" visibility="protected">
    <return type="object" nullable="false">
      <type full="Composer\Package\Loader\RootPackageLoader" namespace="Composer\Package\Loader" name="RootPackageLoader"/>
    </return>
    <parameter name="rm" byreference="false" type="object">
      <type full="Composer\Repository\RepositoryManager" namespace="Composer\Repository" name="RepositoryManager"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="parser" byreference="false" type="object">
      <type full="Composer\Package\Version\VersionParser" namespace="Composer\Package\Version" name="VersionParser"/>
    </parameter>
    <parameter name="guesser" byreference="false" type="object">
      <type full="Composer\Package\Version\VersionGuesser" namespace="Composer\Package\Version" name="VersionGuesser"/>
    </parameter>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
  </method>
  <method name="create" start="610" end="618" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="IO instance" type="object" variable="$io">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </param>
      <param description="either a configuration array or a filename to read from, if null it will read from" type="mixed" variable="$config">the default filename</param>
      <param description="Whether plugins should not be loaded" type="object" variable="$disablePlugins">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <param description="Whether scripts should not be run" type="object" variable="$disableScripts">
        <type full="Composer\bool" namespace="Composer" name="bool"/>
      </param>
      <return type="object">
        <type full="Composer\Composer" namespace="Composer" name="Composer"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="disablePlugins" byreference="false" type="boolean" default="false"/>
    <parameter name="disableScripts" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="createHttpDownloader" start="628" end="668" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="If you are calling this in a plugin, you probably should instead use $composer-&gt;getLoop()-&gt;getHttpDownloader()"/>
      <param description="IO instance" type="object" variable="$io">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </param>
      <param description="Config instance" type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
      <param description="Array of options passed directly to HttpDownloader constructor" type="array" variable="$options" of="object">
        <type full="Composer\mixed" namespace="Composer" name="mixed"/>
      </param>
      <return type="object">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </return>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="allow running the config command if disable-tls is in the arg list, even if openssl is missing, to allow disabling it via the config command" line="632"/>
    </inline>
  </method>
  <method name="useXdg" start="670" end="683" abstract="false" final="false" static="true" visibility="private">
    <return type="bool" nullable="false"/>
  </method>
  <method name="getUserDir" start="688" end="696" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="validateJsonSchema" start="702" end="721" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="mixed" variable="$fileOrData"/>
      <param type="object" variable="$schema">
        <type full="Composer\JsonFile::*_SCHEMA" namespace="Composer" name="JsonFile::*_SCHEMA"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="io" byreference="false" nullable="true" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="fileOrData" byreference="false" type="{unknown}"/>
    <parameter name="schema" byreference="false" type="{unknown}" default="" constant="JsonFile::LAX_SCHEMA"/>
    <parameter name="source" byreference="false" nullable="true" type="string" default="NULL"/>
  </method>
</class>
