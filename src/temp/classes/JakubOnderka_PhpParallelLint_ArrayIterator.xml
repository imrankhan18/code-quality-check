<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="JakubOnderka\PhpParallelLint\ArrayIterator" namespace="JakubOnderka\PhpParallelLint" name="ArrayIterator" abstract="false" final="false" start="240" end="247">
  <file path="//var/www/html/vendor/php-parallel-lint/php-parallel-lint/src" file="Settings.php" realpath="/var/www/html/vendor/php-parallel-lint/php-parallel-lint/src/Settings.php" size="6164" time="2022-02-21T12:50:22+00:00" unixtime="1645447822" sha1="646bbea5e92da694ed04d0a0e171aa6198cd1325" relative="ar/www/html/vendor/php-parallel-lint/php-parallel-lint/src/Settings.php"/>
  <extends full="ArrayIterator" namespace="" name="ArrayIterator"/>
  <method name="getNext" start="242" end="246" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="ArrayIterator" namespace="" name="ArrayIterator">
    <implements full="ArrayAccess" namespace="" name="ArrayAccess"/>
    <constant name="" value="1" type="{unknown}">
    <docblock>
      <var type="integer"/>
    </docblock>
  </constant>
    <constant name="" value="2" type="{unknown}">
    <docblock>
      <var type="integer"/>
    </docblock>
  </constant>
    <method name="append" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Append an element"/>
      <return type="void"/>
    </docblock>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="asort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort array by values"/>
      <return type="void"/>
    </docblock>
  </method>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct an ArrayIterator"/>
      <return type="void"/>
    </docblock>
    <parameter name="array" optional="true" byreference="false" type="object" class="mixed"/>
    <parameter name="flags" optional="true" byreference="false" type="int"/>
  </constructor>
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current array entry"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getArrayCopy" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get array copy"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get behavior flags"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current array key"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="ksort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort array by keys"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="natcasesort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort an array naturally, case insensitive"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="natsort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort an array naturally"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move to next entry"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check if offset exists"/>
      <return type="bool"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get value for an offset"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set value for an offset"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="newval" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unset value for an offset"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind array back to the start"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="seek" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Seek to position"/>
      <return type="void"/>
    </docblock>
    <parameter name="position" optional="false" byreference="false" type="int"/>
  </method>
    <method name="serialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Serialize"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="setFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set behaviour flags"/>
      <return type="void"/>
    </docblock>
    <parameter name="flags" optional="false" byreference="false" type="string"/>
  </method>
    <method name="uasort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort with a user-defined comparison function and maintain index association">This method sorts the elements such that indices maintain their correlation with the values they are associated with, using a user-defined comparison function.</description>
      <return type="void"/>
    </docblock>
    <parameter name="cmp_function" optional="false" byreference="false" type="object" class="callable"/>
  </method>
    <method name="uksort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort by keys using a user-defined comparison function">This method sorts the elements by keys using a user-supplied comparison function.</description>
      <return type="void"/>
    </docblock>
    <parameter name="cmp_function" optional="false" byreference="false" type="object" class="callable"/>
  </method>
    <method name="unserialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unserialize"/>
      <return type="string"/>
    </docblock>
    <parameter name="serialized" optional="false" byreference="false" type="string"/>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether array contains more entries"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <interface full="ArrayAccess" namespace="" name="ArrayAccess">
    <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Whether an offset exists">Whether or not an offset exists.</description>
      <return type="bool"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Offset to retrieve">Returns the value at specified offset.</description>
      <return type="mixed"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Assign a value to the specified offset"/>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unset an offset">Unsets an offset.</description>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  </interface>
</class>
