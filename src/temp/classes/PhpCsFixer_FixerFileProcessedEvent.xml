<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\FixerFileProcessedEvent" namespace="PhpCsFixer" name="FixerFileProcessedEvent" abstract="false" final="true" start="26" end="52">
  <file path="//var/www/html/vendor/friendsofphp/php-cs-fixer/src" file="FixerFileProcessedEvent.php" realpath="/var/www/html/vendor/friendsofphp/php-cs-fixer/src/FixerFileProcessedEvent.php" size="1101" time="2022-03-18T17:20:59+00:00" unixtime="1647624059" sha1="bfec892fa8efd857bf61137b03c53658554622b3" relative="ar/www/html/vendor/friendsofphp/php-cs-fixer/src/FixerFileProcessedEvent.php"/>
  <docblock>
    <description compact="Event that is fired when file was processed by Fixer."/>
    <author value="Dariusz RumiÅ„ski &lt;dariusz.ruminski@gmail.com&gt;"/>
    <internal/>
  </docblock>
  <extends full="Symfony\Contracts\EventDispatcher\Event" namespace="Symfony\Contracts\EventDispatcher" name="Event"/>
  <constant type="string" name="NAME" value="'fixer.file_processed'">
    <docblock>
      <description compact="Event name."/>
    </docblock>
  </constant>
  <constant type="integer" name="STATUS_UNKNOWN" value="0"/>
  <constant type="integer" name="STATUS_INVALID" value="1"/>
  <constant type="integer" name="STATUS_SKIPPED" value="2"/>
  <constant type="integer" name="STATUS_NO_CHANGES" value="3"/>
  <constant type="integer" name="STATUS_FIXED" value="4"/>
  <constant type="integer" name="STATUS_EXCEPTION" value="5"/>
  <constant type="integer" name="STATUS_LINT" value="6"/>
  <member name="status" visibility="private" static="false" line="41"/>
  <constructor name="__construct" start="43" end="46" abstract="false" final="false" static="false" visibility="public">
    <parameter name="status" byreference="false" type="int"/>
  </constructor>
  <method name="getStatus" start="48" end="51" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
  </method>
  <parent full="Symfony\Contracts\EventDispatcher\Event" namespace="Symfony\Contracts\EventDispatcher" name="Event">
    <implements full="Psr\EventDispatcher\StoppableEventInterface" namespace="Psr\EventDispatcher" name="StoppableEventInterface"/>
    <method name="isPropagationStopped" start="38" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
    <method name="stopPropagation" start="50" end="53" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Stops the propagation of the event to further event listeners.">If multiple event listeners are connected to the same event, no
further event listener will be triggered once any trigger calls
stopPropagation().</description>
      </docblock>
      <return type="void" nullable="false"/>
    </method>
  </parent>
  <interface full="Psr\EventDispatcher\StoppableEventInterface" namespace="Psr\EventDispatcher" name="StoppableEventInterface">
    <method name="isPropagationStopped" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is propagation stopped?">This will typically only be used by the Dispatcher to determine if the
previous listener halted propagation.</description>
        <return type="object">True if the Event is complete and no further listeners should be called.
  False to continue calling listeners.<type full="Psr\EventDispatcher\bool" namespace="Psr\EventDispatcher" name="bool"/></return>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
  </interface>
</class>
