<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSniff" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="ReturnTypeHintSniff" abstract="false" final="false" start="47" end="668">
  <file path="//var/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints" file="ReturnTypeHintSniff.php" realpath="/var/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ReturnTypeHintSniff.php" size="21889" time="2022-03-29T12:44:16+00:00" unixtime="1648557856" sha1="6731af81215f10daf84b7a8c3f3c953af0308e66" relative="ar/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ReturnTypeHintSniff.php"/>
  <implements full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff"/>
  <constant type="string" name="CODE_MISSING_ANY_TYPE_HINT" value="'MissingAnyTypeHint'"/>
  <constant type="string" name="CODE_MISSING_NATIVE_TYPE_HINT" value="'MissingNativeTypeHint'"/>
  <constant type="string" name="CODE_MISSING_TRAVERSABLE_TYPE_HINT_SPECIFICATION" value="'MissingTraversableTypeHintSpecification'"/>
  <constant type="string" name="CODE_USELESS_ANNOTATION" value="'UselessAnnotation'"/>
  <constant type="string" name="CODE_USELESS_SUPPRESS" value="'UselessSuppress'"/>
  <constant type="string" name="NAME" value="'SlevomatCodingStandard.TypeHints.ReturnTypeHint'"/>
  <member name="enableObjectTypeHint" default="NULL" visibility="public" static="false" line="63">
    <docblock>
      <var type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\bool|null" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="bool|null"/>
      </var>
    </docblock>
  </member>
  <member name="enableStaticTypeHint" default="NULL" visibility="public" static="false" line="66">
    <docblock>
      <var type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\bool|null" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="bool|null"/>
      </var>
    </docblock>
  </member>
  <member name="enableMixedTypeHint" default="NULL" visibility="public" static="false" line="69">
    <docblock>
      <var type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\bool|null" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="bool|null"/>
      </var>
    </docblock>
  </member>
  <member name="enableUnionTypeHint" default="NULL" visibility="public" static="false" line="72">
    <docblock>
      <var type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\bool|null" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="bool|null"/>
      </var>
    </docblock>
  </member>
  <member name="traversableTypeHints" default="" type="array" visibility="public" static="false" line="75">
    <docblock>
      <var type="array" of="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\string" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="normalizedTraversableTypeHints" visibility="private" static="false" line="78">
    <docblock>
      <var description="string&gt;|null" type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\array&lt;int" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="array&lt;int"/>
      </var>
    </docblock>
  </member>
  <method name="register" start="83" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="(int|string)&gt;" type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\array&lt;int" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="process" start="95" end="129" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <phpcssuppress value="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint"/>
      <param type="int" variable="$pointer"/>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="{unknown}"/>
  </method>
  <method name="checkFunctionTypeHint" start="134" end="403" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$prefixedReturnAnnotations" of="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\ReturnAnnotation" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="ReturnAnnotation"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="functionPointer" byreference="false" type="int"/>
    <parameter name="returnTypeHint" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\TypeHint" namespace="SlevomatCodingStandard\Helpers" name="TypeHint"/>
    </parameter>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
    <parameter name="prefixedReturnAnnotations" byreference="false" type="array"/>
  </method>
  <method name="checkFunctionTraversableTypeHintSpecification" start="408" end="486" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$prefixedReturnAnnotations" of="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\ReturnAnnotation" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="ReturnAnnotation"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="functionPointer" byreference="false" type="int"/>
    <parameter name="returnTypeHint" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\TypeHint" namespace="SlevomatCodingStandard\Helpers" name="TypeHint"/>
    </parameter>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
    <parameter name="prefixedReturnAnnotations" byreference="false" type="array"/>
  </method>
  <method name="checkFunctionUselessAnnotation" start="488" end="553" abstract="false" final="false" static="false" visibility="private">
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="functionPointer" byreference="false" type="int"/>
    <parameter name="returnTypeHint" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\TypeHint" namespace="SlevomatCodingStandard\Helpers" name="TypeHint"/>
    </parameter>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
  </method>
  <method name="checkClosureTypeHint" start="555" end="581" abstract="false" final="false" static="false" visibility="private">
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="closurePointer" byreference="false" type="int"/>
  </method>
  <method name="getReturnTypeNode" start="586" end="593" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\GenericTypeNode|CallableTypeNode|IntersectionTypeNode|UnionTypeNode|ArrayTypeNode|ArrayShapeNode|IdentifierTypeNode|ThisTypeNode|NullableTypeNode|ConstTypeNode|ConditionalTypeNode|ConditionalTypeForParameterNode|null" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="GenericTypeNode|CallableTypeNode|IntersectionTypeNode|UnionTypeNode|ArrayTypeNode|ArrayShapeNode|IdentifierTypeNode|ThisTypeNode|NullableTypeNode|ConstTypeNode|ConditionalTypeNode|ConditionalTypeForParameterNode|null"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
  </method>
  <method name="hasTraversableTypeHint" start="595" end="624" abstract="false" final="false" static="false" visibility="private">
    <return type="bool" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="functionPointer" byreference="false" type="int"/>
    <parameter name="returnTypeHint" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\TypeHint" namespace="SlevomatCodingStandard\Helpers" name="TypeHint"/>
    </parameter>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
  </method>
  <method name="hasReturnAnnotation" start="626" end="629" abstract="false" final="false" static="false" visibility="private">
    <return type="bool" nullable="false"/>
    <parameter name="returnAnnotation" byreference="false" nullable="true" type="object">
      <type full="SlevomatCodingStandard\Helpers\Annotation\ReturnAnnotation" namespace="SlevomatCodingStandard\Helpers\Annotation" name="ReturnAnnotation"/>
    </parameter>
  </method>
  <method name="reportUselessSuppress" start="631" end="646" abstract="false" final="false" static="false" visibility="private">
    <return type="void" nullable="false"/>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="isSuppressed" byreference="false" type="bool"/>
    <parameter name="suppressName" byreference="false" type="string"/>
  </method>
  <method name="getSniffName" start="648" end="651" abstract="false" final="false" static="false" visibility="private">
    <return type="string" nullable="false"/>
    <parameter name="sniffName" byreference="false" type="string"/>
  </method>
  <method name="getTraversableTypeHints" start="656" end="666" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return description="string&gt;" type="object">
        <type full="SlevomatCodingStandard\Sniffs\TypeHints\array&lt;int" namespace="SlevomatCodingStandard\Sniffs\TypeHints" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <interface full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff">
    <method name="register" start="40" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Registers the tokens that this sniff wants to listen for.">An example return value for a sniff that wants to listen for whitespace
and any comments would be:

&lt;code&gt;
   return array(
           T_WHITESPACE,
           T_DOC_COMMENT,
           T_COMMENT,
          );
&lt;/code&gt;</description>
        <return type="array" of="object">
          <type full="PHP_CodeSniffer\Sniffs\mixed" namespace="PHP_CodeSniffer\Sniffs" name="mixed"/>
        </return>
        <see value="Tokens.php"/>
      </docblock>
    </method>
    <method name="process" start="77" end="77" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Called when one of the token types that this sniff is listening for is found.">The stackPtr variable indicates where in the stack the token was found.
A sniff can acquire information this token, along with all the other
tokens within the stack by first acquiring the token stack:

&lt;code&gt;
   $tokens = $phpcsFile-&gt;getTokens();
   echo 'Encountered a '.$tokens[$stackPtr]['type'].' token';
   echo 'token information: ';
   print_r($tokens[$stackPtr]);
&lt;/code&gt;

If the sniff discovers an anomaly in the code, they can raise an error
by calling addError() on the \PHP_CodeSniffer\Files\File object, specifying an error
message and the position of the offending token:

&lt;code&gt;
   $phpcsFile-&gt;addError('Encountered an error', $stackPtr);
&lt;/code&gt;</description>
        <param description="The PHP_CodeSniffer file where the" type="object" variable="$phpcsFile">token was found.<type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/></param>
        <param description="The position in the PHP_CodeSniffer" type="int" variable="$stackPtr">file's token stack where the token
                                              was found.</param>
        <return description="Optionally returns a stack pointer. The sniff will not be" type="object">called again on the current file until the returned stack
                 pointer is reached. Return (count($tokens) + 1) to skip
                 the rest of the file.<type full="PHP_CodeSniffer\Sniffs\void|int" namespace="PHP_CodeSniffer\Sniffs" name="void|int"/></return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="object">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </parameter>
      <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
