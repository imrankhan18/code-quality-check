<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SlevomatCodingStandard\Helpers\AnnotationTypeHelper" namespace="SlevomatCodingStandard\Helpers" name="AnnotationTypeHelper" abstract="false" final="false" start="35" end="797">
  <file path="//var/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers" file="AnnotationTypeHelper.php" realpath="/var/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers/AnnotationTypeHelper.php" size="22575" time="2022-03-29T12:44:16+00:00" unixtime="1648557856" sha1="64fa41d1059646cd812868c53cd97b825f896ba8" relative="ar/www/html/vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers/AnnotationTypeHelper.php"/>
  <docblock>
    <description/>
    <internal/>
  </docblock>
  <method name="getIdentifierTypeNodes" start="41" end="110" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\IdentifierTypeNode[]|ThisTypeNode" namespace="SlevomatCodingStandard\Helpers" name="IdentifierTypeNode[]|ThisTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getConstantTypeNodes" start="115" end="182" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\ConstTypeNode" namespace="SlevomatCodingStandard\Helpers" name="ConstTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getUnionTypeNodes" start="187" end="251" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getArrayTypeNodes" start="256" end="319" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\ArrayTypeNode" namespace="SlevomatCodingStandard\Helpers" name="ArrayTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getTypeHintFromNode" start="324" end="329" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\IdentifierTypeNode|ThisTypeNode" namespace="SlevomatCodingStandard\Helpers" name="IdentifierTypeNode|ThisTypeNode"/>
      </param>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="export" start="331" end="347" abstract="false" final="false" static="true" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="change" start="349" end="451" abstract="false" final="false" static="true" visibility="public">
    <return type="object" nullable="false">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="masterTypeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="typeNodeToChange" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="changedTypeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsStaticOrThisType" start="453" end="475" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsOneType" start="477" end="518" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsJustTwoTypes" start="520" end="534" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsTraversableType" start="539" end="577" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
  </method>
  <method name="containsItemsSpecificationForTraversable" start="582" end="686" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
    <parameter name="inTraversable" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getTypeHintFromOneType" start="691" end="740" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\CallableTypeNode|GenericTypeNode|IdentifierTypeNode|ThisTypeNode|ArrayTypeNode|ArrayShapeNode|ConstTypeNode" namespace="SlevomatCodingStandard\Helpers" name="CallableTypeNode|GenericTypeNode|IdentifierTypeNode|ThisTypeNode|ArrayTypeNode|ArrayShapeNode|ConstTypeNode"/>
      </param>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="enableUnionTypeHint" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getTraversableTypeHintsFromType" start="747" end="781" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\string" namespace="SlevomatCodingStandard\Helpers" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
    <parameter name="enableUnionTypeHint" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getItemsSpecificationTypeFromType" start="786" end="795" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
    </docblock>
    <return type="object" nullable="true">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
</class>
