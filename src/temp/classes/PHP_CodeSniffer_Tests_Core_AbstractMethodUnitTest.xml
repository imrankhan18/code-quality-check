<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Tests\Core\AbstractMethodUnitTest" namespace="PHP_CodeSniffer\Tests\Core" name="AbstractMethodUnitTest" abstract="true" final="false" start="17" end="140">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/tests/Core" file="AbstractMethodUnitTest.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/tests/Core/AbstractMethodUnitTest.php" size="4274" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="e8cc5ea1dc2cd423d86f6bcc2a9ebb5c210354ec" relative="ar/www/html/vendor/squizlabs/php_codesniffer/tests/Core/AbstractMethodUnitTest.php"/>
  <extends full="PHPUnit\Framework\TestCase" namespace="PHPUnit\Framework" name="TestCase" unresolved="true"/>
  <member name="fileExtension" default="'inc'" type="string" visibility="protected" static="true" line="28">
    <docblock>
      <description compact="The file extension of the test case file (without leading dot).">This allows child classes to overrule the default `inc` with, for instance,
`js` or `css` when applicable.</description>
      <var type="string"/>
    </docblock>
  </member>
  <member name="phpcsFile" visibility="protected" static="true" line="35">
    <docblock>
      <description compact="The \PHP_CodeSniffer\Files\File object containing the parsed contents of the test case file."/>
      <var type="object">
        <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
      </var>
    </docblock>
  </member>
  <method name="setUpBeforeClass" start="46" end="65" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Initialize &amp; tokenize \PHP_CodeSniffer\Files\File with code from the test case file.">The test case file for a unit test class has to be in the same directory
directory and use the same file name as the test class, using the .inc extension.</description>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\void" namespace="PHP_CodeSniffer\Tests\Core" name="void"/>
      </return>
    </docblock>
    <inline>
      <comment value="Default to a file with the same name as the test class. Extension is property based." line="53"/>
      <comment value="Make sure the file gets parsed correctly based on the file type." line="58"/>
    </inline>
  </method>
  <method name="tearDownAfterClass" start="73" end="77" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Clean up after finished test."/>
      <return type="object">
        <type full="PHP_CodeSniffer\Tests\Core\void" namespace="PHP_CodeSniffer\Tests\Core" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="getTargetToken" start="92" end="137" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the token pointer for a target token based on a specific comment found on the line before.">Note: the test delimiter comment MUST start with "/* test" to allow this function to
distinguish between comments used *in* a test and test delimiters.</description>
      <param description="The delimiter comment to look for." type="string" variable="$commentString"/>
      <param description="The type of token(s) to look for." type="object" variable="$tokenType">
        <type full="PHP_CodeSniffer\Tests\Core\int|string|array" namespace="PHP_CodeSniffer\Tests\Core" name="int|string|array"/>
      </param>
      <param description="Optional. The token content for the target token." type="string" variable="$tokenContent"/>
      <return type="int"/>
    </docblock>
    <parameter name="commentString" byreference="false" type="{unknown}"/>
    <parameter name="tokenType" byreference="false" type="{unknown}"/>
    <parameter name="tokenContent" byreference="false" type="{unknown}" default="NULL"/>
    <inline>
      <comment value="Limit the token finding to between this and the next delimiter comment." line="106"/>
    </inline>
  </method>
  <extenders>
    <extender full="PHP_CodeSniffer\Tests\Core\Sniffs\AbstractArraySniffTest" namespace="PHP_CodeSniffer\Tests\Core\Sniffs" name="AbstractArraySniffTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\GetMethodPropertiesTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="GetMethodPropertiesTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\FindStartOfStatementTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="FindStartOfStatementTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\FindExtendedClassNameTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="FindExtendedClassNameTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\IsReferenceTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="IsReferenceTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\FindImplementedInterfaceNamesTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="FindImplementedInterfaceNamesTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\GetMethodParametersTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="GetMethodParametersTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\GetMemberPropertiesTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="GetMemberPropertiesTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\File\FindEndOfStatementTest" namespace="PHP_CodeSniffer\Tests\Core\File" name="FindEndOfStatementTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\ArrayKeywordTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="ArrayKeywordTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\BackfillNumericSeparatorTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="BackfillNumericSeparatorTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\BackfillFnTokenTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="BackfillFnTokenTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\GotoLabelTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="GotoLabelTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\UndoNamespacedNameSingleTokenTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="UndoNamespacedNameSingleTokenTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\FinallyTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="FinallyTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\AttributesTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="AttributesTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\AnonClassParenthesisOwnerTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="AnonClassParenthesisOwnerTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\ShortArrayTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="ShortArrayTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\DoubleArrowTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="DoubleArrowTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\NullsafeObjectOperatorTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="NullsafeObjectOperatorTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\DefaultKeywordTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="DefaultKeywordTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\NamedFunctionCallArgumentsTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="NamedFunctionCallArgumentsTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\BackfillMatchTokenTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="BackfillMatchTokenTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\ScopeSettingWithNamespaceOperatorTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="ScopeSettingWithNamespaceOperatorTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\StableCommentWhitespaceTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="StableCommentWhitespaceTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\StableCommentWhitespaceWinTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="StableCommentWhitespaceWinTest"/>
    <extender full="PHP_CodeSniffer\Tests\Core\Tokenizer\BitwiseOrTest" namespace="PHP_CodeSniffer\Tests\Core\Tokenizer" name="BitwiseOrTest"/>
  </extenders>
</class>
