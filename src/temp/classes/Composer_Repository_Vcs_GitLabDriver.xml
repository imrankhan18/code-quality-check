<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Repository\Vcs\GitLabDriver" namespace="Composer\Repository\Vcs" name="GitLabDriver" abstract="false" final="false" start="31" end="649">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Repository/Vcs" file="GitLabDriver.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Repository/Vcs/GitLabDriver.php" size="20873" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="f6c28c1dcf5dd197cb333c00d72e0532c01e92c5" relative="ar/www/html/vendor/composer/composer/src/Composer/Repository/Vcs/GitLabDriver.php"/>
  <docblock>
    <description compact="Driver for GitLab API, use the Git driver for local checkouts."/>
    <author value="Henrik Bjørnskov &lt;henrik@bjrnskov.dk&gt;"/>
    <author value="Jérôme Tamarelle &lt;jerome@tamarelle.net&gt;"/>
  </docblock>
  <extends full="Composer\Repository\Vcs\VcsDriver" namespace="Composer\Repository\Vcs" name="VcsDriver"/>
  <member name="scheme" visibility="private" static="false" line="37">
    <docblock>
      <description/>
      <var type="string"/>
      <phpstan value="-var 'https'|'http'"/>
    </docblock>
  </member>
  <member name="namespace" visibility="private" static="false" line="39">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="repository" visibility="private" static="false" line="41">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="project" visibility="private" static="false" line="46">
    <docblock>
      <description/>
      <var description="Project data returned by GitLab API" type="array" of="object">
        <type full="Composer\Repository\Vcs\mixed" namespace="Composer\Repository\Vcs" name="mixed"/>
      </var>
    </docblock>
  </member>
  <member name="commits" default="" type="array" visibility="private" static="false" line="51">
    <docblock>
      <description/>
      <var description="mixed[]&gt; Keeps commits returned by GitLab API as commit id =&gt; info" type="object">
        <type full="Composer\Repository\Vcs\array&lt;string|int" namespace="Composer\Repository\Vcs" name="array&lt;string|int"/>
      </var>
    </docblock>
  </member>
  <member name="tags" visibility="private" static="false" line="54">
    <docblock>
      <var description="string&gt; Map of tag name to identifier" type="object">
        <type full="Composer\Repository\Vcs\array&lt;int|string" namespace="Composer\Repository\Vcs" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="branches" visibility="private" static="false" line="57">
    <docblock>
      <var description="string&gt; Map of branch name to identifier" type="object">
        <type full="Composer\Repository\Vcs\array&lt;int|string" namespace="Composer\Repository\Vcs" name="array&lt;int|string"/>
      </var>
    </docblock>
  </member>
  <member name="gitDriver" default="NULL" visibility="protected" static="false" line="64">
    <docblock>
      <description compact="Git Driver"/>
      <var type="object">
        <type full="Composer\Repository\Vcs\?GitDriver" namespace="Composer\Repository\Vcs" name="?GitDriver"/>
      </var>
    </docblock>
  </member>
  <member name="protocol" visibility="protected" static="false" line="71">
    <docblock>
      <description compact="Protocol to force use of for repository URLs."/>
      <var description="One of ssh, http" type="string"/>
    </docblock>
  </member>
  <member name="isPrivate" default="true" type="boolean" visibility="private" static="false" line="78">
    <docblock>
      <description compact="Defaults to true unless we can make sure it is public"/>
      <var description="defines whether the repo is private or not" type="object">
        <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="hasNonstandardOrigin" default="false" type="boolean" visibility="private" static="false" line="83">
    <docblock>
      <description/>
      <var description="true if the origin has a port number or a path component in it" type="object">
        <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
      </var>
    </docblock>
  </member>
  <constant type="string" name="URL_REGEX" value="'#^(?:(?P&lt;scheme&gt;https?)://(?P&lt;domain&gt;.+?)(?::(?P&lt;port&gt;[0-9]+))?/|git@(?P&lt;domain2&gt;[^:]+):)(?P&lt;parts&gt;.+)/(?P&lt;repo&gt;[^/]+?)(?:\.git|/)?$#'"/>
  <method name="initialize" start="94" end="133" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Extracts information from the repository url.">SSH urls use https by default. Set "secure-http": false on the repository config to use http instead.</description>
      <inheritdoc/>
    </docblock>
    <return type="void" nullable="false"/>
  </method>
  <method name="setHttpDownloader" start="143" end="146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Updates the HttpDownloader instance.">Mainly useful for tests.</description>
      <internal/>
      <return type="object">
        <type full="Composer\Repository\Vcs\void" namespace="Composer\Repository\Vcs" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="httpDownloader" byreference="false" type="object">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </parameter>
  </method>
  <method name="getComposerInformation" start="151" end="186" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="array" nullable="true"/>
    <parameter name="identifier" byreference="false" type="string"/>
  </method>
  <method name="getFileContent" start="191" end="218" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="string" nullable="true"/>
    <parameter name="file" byreference="false" type="string"/>
    <parameter name="identifier" byreference="false" type="string"/>
    <inline>
      <comment value="Convert the root identifier to a cacheable commit id" line="197"/>
    </inline>
  </method>
  <method name="getChangeDate" start="223" end="234" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="object" nullable="true">
      <type full="DateTimeImmutable" namespace="" name="DateTimeImmutable"/>
    </return>
    <parameter name="identifier" byreference="false" type="string"/>
  </method>
  <method name="getRepositoryUrl" start="239" end="246" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="getUrl" start="251" end="258" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="getDist" start="263" end="268" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="array" nullable="true"/>
    <parameter name="identifier" byreference="false" type="string"/>
  </method>
  <method name="getSource" start="273" end="280" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="identifier" byreference="false" type="string"/>
  </method>
  <method name="getRootIdentifier" start="285" end="292" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="getBranches" start="297" end="308" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getTags" start="313" end="324" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getApiUrl" start="329" end="332" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="Base URL for GitLab API v3" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="urlEncodeAll" start="340" end="352" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Urlencode all non alphanumeric characters. rawurlencode() can not be used as it does not encode `.`"/>
      <param type="string" variable="$string"/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="string" byreference="false" type="string"/>
  </method>
  <method name="getReferences" start="359" end="385" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$type"/>
      <return description="where keys are named references like tags or branches and the value a sha" type="array" of="object">
        <type full="Composer\Repository\Vcs\string" namespace="Composer\Repository\Vcs" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="type" byreference="false" type="string"/>
  </method>
  <method name="fetchProject" start="390" end="401" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\Vcs\void" namespace="Composer\Repository\Vcs" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <inline>
      <comment value="we need to fetch the default branch from the api" line="392"/>
    </inline>
  </method>
  <method name="attemptCloneFallback" start="409" end="430" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <phpstan value="-impure"/>
      <return type="object">
        <type full="Composer\Repository\Vcs\true" namespace="Composer\Repository\Vcs" name="true"/>
      </return>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="generateSshUrl" start="437" end="444" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generate an SSH URL"/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="generatePublicUrl" start="449" end="452" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="setupGitDriver" start="459" end="469" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$url"/>
      <return type="object">
        <type full="Composer\Repository\Vcs\void" namespace="Composer\Repository\Vcs" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="url" byreference="false" type="string"/>
  </method>
  <method name="getContents" start="476" end="567" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <inheritdoc/>
      <param type="object" variable="$fetchingRepoData">
        <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
      </param>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Util\Http\Response" namespace="Composer\Util\Http" name="Response"/>
    </return>
    <parameter name="url" byreference="false" type="string"/>
    <parameter name="fetchingRepoData" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="supports" start="575" end="596" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Uses the config `gitlab-domains` to see if the driver supports the url for the repository given."/>
      <inheritdoc/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="url" byreference="false" type="string"/>
    <parameter name="deep" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getNextPage" start="601" end="613" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\Vcs\string|null" namespace="Composer\Repository\Vcs" name="string|null"/>
      </return>
    </docblock>
    <return type="string" nullable="true"/>
    <parameter name="response" byreference="false" type="object">
      <type full="Composer\Util\Http\Response" namespace="Composer\Util\Http" name="Response"/>
    </parameter>
  </method>
  <method name="determineOrigin" start="623" end="648" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$configuredDomains">
        <type full="Composer\Repository\Vcs\array&lt;string&gt;" namespace="Composer\Repository\Vcs" name="array&lt;string&gt;"/>
      </param>
      <param type="string" variable="$guessedDomain"/>
      <param type="object" variable="$urlParts">
        <type full="Composer\Repository\Vcs\array&lt;string&gt;" namespace="Composer\Repository\Vcs" name="array&lt;string&gt;"/>
      </param>
      <param type="string" variable="$portNumber"/>
      <return type="object">
        <type full="Composer\Repository\Vcs\string|false" namespace="Composer\Repository\Vcs" name="string|false"/>
      </return>
    </docblock>
    <parameter name="configuredDomains" byreference="false" type="array"/>
    <parameter name="guessedDomain" byreference="false" type="string"/>
    <parameter name="urlParts" byreference="true" type="array"/>
    <parameter name="portNumber" byreference="false" nullable="true" type="string"/>
  </method>
  <parent full="Composer\Repository\Vcs\VcsDriver" namespace="Composer\Repository\Vcs" name="VcsDriver">
    <implements full="Composer\Repository\Vcs\VcsDriverInterface" namespace="Composer\Repository\Vcs" name="VcsDriverInterface"/>
    <member name="url" visibility="protected" static="false" line="34">
      <docblock>
        <var type="string"/>
      </docblock>
    </member>
    <member name="originUrl" visibility="protected" static="false" line="36">
      <docblock>
        <var type="string"/>
      </docblock>
    </member>
    <member name="repoConfig" visibility="protected" static="false" line="38">
      <docblock>
        <var description="mixed&gt;" type="object">
          <type full="Composer\Repository\Vcs\array&lt;string" namespace="Composer\Repository\Vcs" name="array&lt;string"/>
        </var>
      </docblock>
    </member>
    <member name="io" visibility="protected" static="false" line="40">
      <docblock>
        <var type="object">
          <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
        </var>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="42">
      <docblock>
        <var type="object">
          <type full="Composer\Config" namespace="Composer" name="Config"/>
        </var>
      </docblock>
    </member>
    <member name="process" visibility="protected" static="false" line="44">
      <docblock>
        <var type="object">
          <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
        </var>
      </docblock>
    </member>
    <member name="httpDownloader" visibility="protected" static="false" line="46">
      <docblock>
        <var type="object">
          <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
        </var>
      </docblock>
    </member>
    <member name="infoCache" default="" type="array" visibility="protected" static="false" line="48">
      <docblock>
        <var description="mixed&gt;" type="object">
          <type full="Composer\Repository\Vcs\array&lt;int|string" namespace="Composer\Repository\Vcs" name="array&lt;int|string"/>
        </var>
      </docblock>
    </member>
    <member name="cache" visibility="protected" static="false" line="50">
      <docblock>
        <var type="object">
          <type full="Composer\Repository\Vcs\?Cache" namespace="Composer\Repository\Vcs" name="?Cache"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="61" end="74" abstract="false" final="true" static="false" visibility="public">
      <docblock>
        <description compact="Constructor."/>
        <param description="string}&amp;array&lt;string mixed&gt;           $repoConfig     The repository configuration" type="object">
          <type full="Composer\Repository\Vcs\array{url:" namespace="Composer\Repository\Vcs" name="array{url:"/>
        </param>
        <param description="The IO instance" type="object" variable="$io">
          <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
        </param>
        <param description="The composer configuration" type="object" variable="$config">
          <type full="Composer\Config" namespace="Composer" name="Config"/>
        </param>
        <param description="Remote Filesystem, injectable for mocking" type="object" variable="$httpDownloader">
          <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
        </param>
        <param description="Process instance, injectable for mocking" type="object" variable="$process">
          <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
        </param>
      </docblock>
      <parameter name="repoConfig" byreference="false" type="array"/>
      <parameter name="io" byreference="false" type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </parameter>
      <parameter name="config" byreference="false" type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </parameter>
      <parameter name="httpDownloader" byreference="false" type="object">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </parameter>
      <parameter name="process" byreference="false" type="object">
        <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
      </parameter>
    </constructor>
    <method name="shouldCache" start="82" end="85" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns whether or not the given $identifier should be cached or not."/>
        <param type="string" variable="$identifier"/>
        <return type="object">
          <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
        </return>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getComposerInformation" start="90" end="107" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <return type="array" nullable="true"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getBaseComposerInformation" start="114" end="133" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$identifier"/>
        <return type="object">
          <type full="Composer\Repository\Vcs\array&lt;mixed&gt;|null" namespace="Composer\Repository\Vcs" name="array&lt;mixed&gt;|null"/>
        </return>
      </docblock>
      <return type="array" nullable="true"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="hasComposerFile" start="138" end="146" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getScheme" start="155" end="162" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the https or http protocol depending on SSL support.">Call this only if you know that the server supports both.</description>
        <return description="The correct type of protocol" type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="getContents" start="172" end="177" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the remote content."/>
        <param description="The URL of content" type="string" variable="$url"/>
        <return type="object">
          <type full="Composer\Util\Http\Response" namespace="Composer\Util\Http" name="Response"/>
        </return>
        <throws type="object">
          <type full="Composer\Downloader\TransportException" namespace="Composer\Downloader" name="TransportException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Composer\Util\Http\Response" namespace="Composer\Util\Http" name="Response"/>
      </return>
      <parameter name="url" byreference="false" type="string"/>
    </method>
    <method name="cleanup" start="182" end="185" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <return type="void" nullable="false"/>
    </method>
  </parent>
  <interface full="Composer\Repository\Vcs\VcsDriverInterface" namespace="Composer\Repository\Vcs" name="VcsDriverInterface">
    <method name="initialize" start="29" end="29" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Initializes the driver (git clone, svn checkout, fetch info etc)"/>
        <return type="object">
          <type full="Composer\Repository\Vcs\void" namespace="Composer\Repository\Vcs" name="void"/>
        </return>
      </docblock>
      <return type="void" nullable="false"/>
    </method>
    <method name="getComposerInformation" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the composer.json file information"/>
        <param description="Any identifier to a specific branch/tag/commit" type="string" variable="$identifier"/>
        <return description="Array containing all infos from the composer.json file, or null to denote that no file was present" type="array" of="object">
          <type full="Composer\Repository\Vcs\mixed[]|nu" namespace="Composer\Repository\Vcs" name="mixed[]|nu"/>
        </return>
      </docblock>
      <return type="array" nullable="true"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getFileContent" start="46" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the content of $file or null if the file does not exist."/>
        <param type="string" variable="$file"/>
        <param type="string" variable="$identifier"/>
        <return type="object">
          <type full="Composer\Repository\Vcs\string|null" namespace="Composer\Repository\Vcs" name="string|null"/>
        </return>
      </docblock>
      <return type="string" nullable="true"/>
      <parameter name="file" byreference="false" type="string"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getChangeDate" start="53" end="53" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the changedate for $identifier."/>
        <param type="string" variable="$identifier"/>
      </docblock>
      <return type="object" nullable="true">
        <type full="DateTimeImmutable" namespace="" name="DateTimeImmutable"/>
      </return>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getRootIdentifier" start="60" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the root identifier (trunk, master, default/tip ..)"/>
        <return description="Identifier" type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="getBranches" start="67" end="67" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return list of branches in the repository"/>
        <return description="string&gt; Branch names as keys, identifiers as values" type="object">
          <type full="Composer\Repository\Vcs\array&lt;int|string" namespace="Composer\Repository\Vcs" name="array&lt;int|string"/>
        </return>
      </docblock>
      <return type="array" nullable="false"/>
    </method>
    <method name="getTags" start="74" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return list of tags in the repository"/>
        <return description="string&gt; Tag names as keys, identifiers as values" type="object">
          <type full="Composer\Repository\Vcs\array&lt;int|string" namespace="Composer\Repository\Vcs" name="array&lt;int|string"/>
        </return>
      </docblock>
      <return type="array" nullable="false"/>
    </method>
    <method name="getDist" start="81" end="81" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param description="Any identifier to a specific branch/tag/commit" type="string" variable="$identifier"/>
        <return description="string, url: string, reference: string, shasum: string}|null" type="object">
          <type full="Composer\Repository\Vcs\array{type:" namespace="Composer\Repository\Vcs" name="array{type:"/>
        </return>
      </docblock>
      <return type="array" nullable="true"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getSource" start="88" end="88" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param description="Any identifier to a specific branch/tag/commit" type="string" variable="$identifier"/>
        <return description="string, url: string, reference: string}" type="object">
          <type full="Composer\Repository\Vcs\array{type:" namespace="Composer\Repository\Vcs" name="array{type:"/>
        </return>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="getUrl" start="95" end="95" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the URL of the repository"/>
        <return type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="hasComposerFile" start="104" end="104" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return true if the repository has a composer file for a given identifier, false otherwise."/>
        <param description="Any identifier to a specific branch/tag/commit" type="string" variable="$identifier"/>
        <return description="Whether the repository has a composer file for a given identifier." type="object">
          <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
        </return>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="identifier" byreference="false" type="string"/>
    </method>
    <method name="cleanup" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Performs any cleanup necessary as the driver is not longer needed"/>
        <return type="object">
          <type full="Composer\Repository\Vcs\void" namespace="Composer\Repository\Vcs" name="void"/>
        </return>
      </docblock>
      <return type="void" nullable="false"/>
    </method>
    <method name="supports" start="122" end="122" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Checks if this driver can handle a given url"/>
        <param description="IO instance" type="object" variable="$io">
          <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
        </param>
        <param description="current $config" type="object" variable="$config">
          <type full="Composer\Config" namespace="Composer" name="Config"/>
        </param>
        <param description="URL to validate/check" type="string" variable="$url"/>
        <param description="unless true, only shallow checks (url matching typically) should be done" type="object" variable="$deep">
          <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
        </param>
        <return type="object">
          <type full="Composer\Repository\Vcs\bool" namespace="Composer\Repository\Vcs" name="bool"/>
        </return>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="io" byreference="false" type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </parameter>
      <parameter name="config" byreference="false" type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </parameter>
      <parameter name="url" byreference="false" type="string"/>
      <parameter name="deep" byreference="false" type="boolean" default="false"/>
    </method>
  </interface>
</class>
