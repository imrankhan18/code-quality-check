<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Files\FileList" namespace="PHP_CodeSniffer\Files" name="FileList" abstract="false" final="false" start="21" end="255">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/src/Files" file="FileList.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/src/Files/FileList.php" size="6315" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="1929ac036e6de19048df3e7a6bf848b71efdcd55" relative="ar/www/html/vendor/squizlabs/php_codesniffer/src/Files/FileList.php"/>
  <implements full="Iterator" namespace="" name="Iterator"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <member name="files" default="" type="array" visibility="private" static="false" line="29">
    <docblock>
      <description compact="A list of file paths that are included in the list."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="numFiles" default="0" type="integer" visibility="private" static="false" line="36">
    <docblock>
      <description compact="The number of files in the list."/>
      <var type="integer"/>
    </docblock>
  </member>
  <member name="config" default="NULL" visibility="public" static="false" line="43">
    <docblock>
      <description compact="The config data for the run."/>
      <var type="object">
        <type full="\PHP_CodeSniffer\Config" namespace="\PHP_CodeSniffer" name="Config"/>
      </var>
    </docblock>
  </member>
  <member name="ruleset" default="NULL" visibility="public" static="false" line="50">
    <docblock>
      <description compact="The ruleset used for the run."/>
      <var type="object">
        <type full="\PHP_CodeSniffer\Ruleset" namespace="\PHP_CodeSniffer" name="Ruleset"/>
      </var>
    </docblock>
  </member>
  <member name="ignorePatterns" default="" type="array" visibility="protected" static="false" line="57">
    <docblock>
      <description compact="An array of patterns to use for skipping files."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="68" end="98" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a file list and loads in an array of file paths to process."/>
      <param description="The config data for the run." type="object" variable="$config">
        <type full="\PHP_CodeSniffer\Config" namespace="\PHP_CodeSniffer" name="Config"/>
      </param>
      <param description="The ruleset used for the run." type="object" variable="$ruleset">
        <type full="\PHP_CodeSniffer\Ruleset" namespace="\PHP_CodeSniffer" name="Ruleset"/>
      </param>
      <return type="object">
        <type full="PHP_CodeSniffer\Files\void" namespace="PHP_CodeSniffer\Files" name="void"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Config" namespace="PHP_CodeSniffer" name="Config"/>
    </parameter>
    <parameter name="ruleset" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Ruleset" namespace="PHP_CodeSniffer" name="Ruleset"/>
    </parameter>
    <inline>
      <comment value="end foreach" line="94"/>
    </inline>
  </constructor>
  <method name="addFile" start="112" end="133" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a file to the list.">If a file object has already been created, it can be passed here.
If it is left NULL, it will be created when accessed.</description>
      <param description="The path to the file being added." type="string" variable="$path"/>
      <param description="The file being added." type="object" variable="$file">
        <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
      </param>
      <return type="object">
        <type full="PHP_CodeSniffer\Files\void" namespace="PHP_CodeSniffer\Files" name="void"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="file" byreference="false" type="{unknown}" default="NULL"/>
    <inline>
      <comment value="No filtering is done for STDIN when the filename" line="114"/>
      <comment value="has not been specified." line="115"/>
    </inline>
  </method>
  <method name="getFilterClass" start="142" end="165" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Get the class name of the filter being used for the run."/>
      <return type="string"/>
      <throws description="If the specified filter could not be found." type="object">
        <type full="\PHP_CodeSniffer\Exceptions\DeepExitException" namespace="\PHP_CodeSniffer\Exceptions" name="DeepExitException"/>
      </throws>
    </docblock>
  </method>
  <method name="rewind" start="174" end="178" abstract="false" final="false" static="false" visibility="public"/>
  <method name="current" start="187" end="196" abstract="false" final="false" static="false" visibility="public"/>
  <method name="key" start="205" end="209" abstract="false" final="false" static="false" visibility="public"/>
  <method name="next" start="218" end="222" abstract="false" final="false" static="false" visibility="public"/>
  <method name="valid" start="231" end="239" abstract="false" final="false" static="false" visibility="public"/>
  <method name="count" start="248" end="252" abstract="false" final="false" static="false" visibility="public"/>
  <interface full="Iterator" namespace="" name="Iterator">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the current element"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the key of the current element"/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move forward to next element">Moves the current position to the next element.</description>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the Iterator to the first element">Rewinds back to the first element of the Iterator.</description>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if current position is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </interface>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
</class>
