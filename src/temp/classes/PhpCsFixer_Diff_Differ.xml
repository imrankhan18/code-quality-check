<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Diff\Differ" namespace="PhpCsFixer\Diff" name="Differ" abstract="false" final="true" start="19" end="329">
  <file path="//var/www/html/vendor/php-cs-fixer/diff/src" file="Differ.php" realpath="/var/www/html/vendor/php-cs-fixer/diff/src/Differ.php" size="9357" time="2020-10-14T08:32:19+00:00" unixtime="1602664339" sha1="6c56de3a6d7da4e3b5ead8093ea5a07931988f5d" relative="ar/www/html/vendor/php-cs-fixer/diff/src/Differ.php"/>
  <docblock>
    <description compact="Diff implementation."/>
  </docblock>
  <constant type="integer" name="OLD" value="0"/>
  <constant type="integer" name="ADDED" value="1"/>
  <constant type="integer" name="REMOVED" value="2"/>
  <constant type="integer" name="DIFF_LINE_END_WARNING" value="3"/>
  <constant type="integer" name="NO_LINE_END_EOF_WARNING" value="4"/>
  <member name="outputBuilder" visibility="private" static="false" line="30">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Diff\Output\DiffOutputBuilderInterface" namespace="PhpCsFixer\Diff\Output" name="DiffOutputBuilderInterface"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="37" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$outputBuilder">
        <type full="PhpCsFixer\Diff\Output\DiffOutputBuilderInterface" namespace="PhpCsFixer\Diff\Output" name="DiffOutputBuilderInterface"/>
      </param>
      <throws type="object">
        <type full="PhpCsFixer\Diff\InvalidArgumentException" namespace="PhpCsFixer\Diff" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="outputBuilder" byreference="false" type="{unknown}" default="NULL"/>
  </constructor>
  <method name="diff" start="67" end="76" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the diff between two arrays or strings as string."/>
      <param type="object" variable="$from">
        <type full="PhpCsFixer\Diff\array|string" namespace="PhpCsFixer\Diff" name="array|string"/>
      </param>
      <param type="object" variable="$to">
        <type full="PhpCsFixer\Diff\array|string" namespace="PhpCsFixer\Diff" name="array|string"/>
      </param>
      <param type="object" variable="$lcs">
        <type full="PhpCsFixer\Diff\null|LongestCommonSubsequenceCalculator" namespace="PhpCsFixer\Diff" name="null|LongestCommonSubsequenceCalculator"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="from" byreference="false" type="{unknown}"/>
    <parameter name="to" byreference="false" type="{unknown}"/>
    <parameter name="lcs" byreference="false" type="object" default="NULL">
      <type full="PhpCsFixer\Diff\LongestCommonSubsequenceCalculator" namespace="PhpCsFixer\Diff" name="LongestCommonSubsequenceCalculator"/>
    </parameter>
  </method>
  <method name="diffToArray" start="95" end="157" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the diff between two arrays or strings as array.">Each array element contains two elements:
  - [0] =&gt; mixed $token
  - [1] =&gt; 2|1|0

- 2: REMOVED: $token was removed from $from
- 1: ADDED: $token was added to $from
- 0: OLD: $token is not changed in $to</description>
      <param type="object" variable="$from">
        <type full="PhpCsFixer\Diff\array|string" namespace="PhpCsFixer\Diff" name="array|string"/>
      </param>
      <param type="object" variable="$to">
        <type full="PhpCsFixer\Diff\array|string" namespace="PhpCsFixer\Diff" name="array|string"/>
      </param>
      <param type="object" variable="$lcs">
        <type full="PhpCsFixer\Diff\LongestCommonSubsequenceCalculator" namespace="PhpCsFixer\Diff" name="LongestCommonSubsequenceCalculator"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="from" byreference="false" type="{unknown}"/>
    <parameter name="to" byreference="false" type="{unknown}"/>
    <parameter name="lcs" byreference="false" type="object" default="NULL">
      <type full="PhpCsFixer\Diff\LongestCommonSubsequenceCalculator" namespace="PhpCsFixer\Diff" name="LongestCommonSubsequenceCalculator"/>
    </parameter>
  </method>
  <method name="normalizeDiffInput" start="166" end="173" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Casts variable to string if it is not a string or array."/>
      <param type="mixed" variable="$input"/>
      <return type="object">
        <type full="PhpCsFixer\Diff\array|string" namespace="PhpCsFixer\Diff" name="array|string"/>
      </return>
    </docblock>
    <parameter name="input" byreference="false" type="{unknown}"/>
  </method>
  <method name="splitStringByLines" start="182" end="185" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Checks if input is string, if so it will split it line-by-line."/>
      <param type="string" variable="$input"/>
      <return type="array"/>
    </docblock>
    <parameter name="input" byreference="false" type="{unknown}"/>
  </method>
  <method name="selectLcsImplementation" start="193" end="206" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$from"/>
      <param type="array" variable="$to"/>
      <return type="object">
        <type full="PhpCsFixer\Diff\LongestCommonSubsequenceCalculator" namespace="PhpCsFixer\Diff" name="LongestCommonSubsequenceCalculator"/>
      </return>
    </docblock>
    <parameter name="from" byreference="false" type="array"/>
    <parameter name="to" byreference="false" type="array"/>
    <inline>
      <comment value="We do not want to use the time-efficient implementation if its memory" line="195"/>
      <comment value="footprint will probably exceed this value. Note that the footprint" line="196"/>
      <comment value="calculation is only an estimation for the matrix and the LCS method" line="197"/>
      <comment value="will typically allocate a bit more memory than this." line="198"/>
    </inline>
  </method>
  <method name="calculateEstimatedFootprint" start="216" end="221" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Calculates the estimated memory footprint for the DP-based method."/>
      <param type="array" variable="$from"/>
      <param type="array" variable="$to"/>
      <return type="object">
        <type full="PhpCsFixer\Diff\float|int" namespace="PhpCsFixer\Diff" name="float|int"/>
      </return>
    </docblock>
    <parameter name="from" byreference="false" type="array"/>
    <parameter name="to" byreference="false" type="array"/>
  </method>
  <method name="detectUnmatchedLineEndings" start="230" end="266" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns true if line ends don't match in a diff."/>
      <param type="array" variable="$diff"/>
      <return type="object">
        <type full="PhpCsFixer\Diff\bool" namespace="PhpCsFixer\Diff" name="bool"/>
      </return>
    </docblock>
    <parameter name="diff" byreference="false" type="array"/>
    <inline>
      <comment value="if either input or output is a single line without breaks than no warning should be raised" line="247"/>
      <comment value="two way compare" line="252"/>
    </inline>
  </method>
  <method name="getLinebreak" start="268" end="288" abstract="false" final="false" static="false" visibility="private">
    <parameter name="line" byreference="false" type="{unknown}"/>
  </method>
  <method name="getArrayDiffParted" start="290" end="328" abstract="false" final="false" static="true" visibility="private">
    <parameter name="from" byreference="true" type="array"/>
    <parameter name="to" byreference="true" type="array"/>
  </method>
</class>
