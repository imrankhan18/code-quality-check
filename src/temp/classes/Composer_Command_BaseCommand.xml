<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Command\BaseCommand" namespace="Composer\Command" name="BaseCommand" abstract="true" final="false" start="40" end="381">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Command" file="BaseCommand.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Command/BaseCommand.php" size="13150" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="f7f9db0e4390a3e311dbcd55f46e4e74dd8ee495" relative="ar/www/html/vendor/composer/composer/src/Composer/Command/BaseCommand.php"/>
  <docblock>
    <description compact="Base class for Composer commands"/>
    <author value="Ryan Weaver &lt;ryan@knplabs.com&gt;"/>
    <author value="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
  <member name="composer" visibility="private" static="false" line="45">
    <docblock>
      <description/>
      <var type="object">
        <type full="Composer\Command\Composer|null" namespace="Composer\Command" name="Composer|null"/>
      </var>
    </docblock>
  </member>
  <member name="io" visibility="private" static="false" line="50">
    <docblock>
      <description/>
      <var type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </var>
    </docblock>
  </member>
  <method name="getApplication" start="55" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the application instance for this command."/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Console\Application" namespace="Composer\Console" name="Application"/>
    </return>
  </method>
  <method name="getComposer" start="73" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="Should be set to false, or use `requireComposer` instead" type="object" variable="$required">
        <type full="Composer\Command\bool" namespace="Composer\Command" name="bool"/>
      </param>
      <param description="If null, reads --no-plugins as default" type="object" variable="$disablePlugins">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
      <param description="If null, reads --no-scripts as default" type="object" variable="$disableScripts">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return type="object">
        <type full="Composer\Command\Composer|null" namespace="Composer\Command" name="Composer|null"/>
      </return>
      <deprecated value="since Composer 2.3.0 use requireComposer or tryComposer depending on whether you have $required set to true or false"/>
    </docblock>
    <parameter name="required" byreference="false" type="boolean" default="true"/>
    <parameter name="disablePlugins" byreference="false" nullable="true" type="bool" default="NULL"/>
    <parameter name="disableScripts" byreference="false" nullable="true" type="bool" default="NULL"/>
  </method>
  <method name="requireComposer" start="91" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves the default Composer\Composer instance or throws">Use this instead of getComposer if you absolutely need an instance</description>
      <param description="If null, reads --no-plugins as default" type="object" variable="$disablePlugins">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
      <param description="If null, reads --no-scripts as default" type="object" variable="$disableScripts">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="object" nullable="false">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </return>
    <parameter name="disablePlugins" byreference="false" type="bool" default="NULL"/>
    <parameter name="disableScripts" byreference="false" type="bool" default="NULL"/>
  </method>
  <method name="tryComposer" start="117" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves the default Composer\Composer instance or null">Use this instead of getComposer(false)</description>
      <param description="If null, reads --no-plugins as default" type="object" variable="$disablePlugins">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
      <param description="If null, reads --no-scripts as default" type="object" variable="$disableScripts">
        <type full="Composer\Command\bool|null" namespace="Composer\Command" name="bool|null"/>
      </param>
    </docblock>
    <return type="object" nullable="true">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </return>
    <parameter name="disablePlugins" byreference="false" type="bool" default="NULL"/>
    <parameter name="disableScripts" byreference="false" type="bool" default="NULL"/>
  </method>
  <method name="setComposer" start="132" end="135" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Command\void" namespace="Composer\Command" name="void"/>
      </return>
    </docblock>
    <parameter name="composer" byreference="false" type="object">
      <type full="Composer\Composer" namespace="Composer" name="Composer"/>
    </parameter>
  </method>
  <method name="resetComposer" start="142" end="146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes the cached composer instance"/>
      <return type="object">
        <type full="Composer\Command\void" namespace="Composer\Command" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="isProxyCommand" start="155" end="158" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Whether or not this command is meant to call another command.">This is mainly needed to avoid duplicated warnings messages.</description>
      <return type="object">
        <type full="Composer\Command\bool" namespace="Composer\Command" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="getIO" start="163" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </return>
    </docblock>
  </method>
  <method name="setIO" start="180" end="183" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Command\void" namespace="Composer\Command" name="void"/>
      </return>
    </docblock>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
  </method>
  <method name="initialize" start="190" end="239" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <inheritdoc/>
      <return type="object">
        <type full="Composer\Command\void" namespace="Composer\Command" name="void"/>
      </return>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <inline>
      <comment value="initialize a plugin-enabled Composer instance, either local or global" line="192"/>
    </inline>
  </method>
  <method name="getPreferredInstallOptions" start="248" end="299" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns preferSource and preferDist values based on the configuration."/>
      <param type="object" variable="$keepVcsRequiresPreferSource">
        <type full="Composer\Command\bool" namespace="Composer\Command" name="bool"/>
      </param>
      <return description="An array composed of the preferSource and preferDist values" type="array" of="object">
        <type full="Composer\Command\bool" namespace="Composer\Command" name="bool"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="keepVcsRequiresPreferSource" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getPlatformRequirementFilter" start="301" end="317" abstract="false" final="false" static="false" visibility="protected">
    <return type="object" nullable="false">
      <type full="Composer\Filter\PlatformRequirementFilter\PlatformRequirementFilterInterface" namespace="Composer\Filter\PlatformRequirementFilter" name="PlatformRequirementFilterInterface"/>
    </return>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
  </method>
  <method name="formatRequirements" start="324" end="336" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$requirements">
        <type full="Composer\Command\array&lt;string&gt;" namespace="Composer\Command" name="array&lt;string&gt;"/>
      </param>
      <return description="string&gt;" type="object">
        <type full="Composer\Command\array&lt;string" namespace="Composer\Command" name="array&lt;string"/>
      </return>
    </docblock>
    <parameter name="requirements" byreference="false" type="array"/>
  </method>
  <method name="normalizeRequirements" start="343" end="348" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$requirements">
        <type full="Composer\Command\array&lt;string&gt;" namespace="Composer\Command" name="array&lt;string&gt;"/>
      </param>
      <return description="string, version?: string}&gt;" type="object">
        <type full="Composer\Command\list&lt;array{name:" namespace="Composer\Command" name="list&lt;array{name:"/>
      </return>
    </docblock>
    <parameter name="requirements" byreference="false" type="array"/>
  </method>
  <method name="renderTable" start="355" end="363" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="array" variable="$table" of="object">
        <type full="Composer\Command\array&lt;TableSeparator|mixed[" namespace="Composer\Command" name="array&lt;TableSeparator|mixed["/>
      </param>
      <return type="object">
        <type full="Composer\Command\void" namespace="Composer\Command" name="void"/>
      </return>
    </docblock>
    <parameter name="table" byreference="false" type="array"/>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
  </method>
  <method name="getTerminalWidth" start="368" end="380" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="int"/>
    </docblock>
  </method>
  <extenders>
    <extender full="Composer\Command\DependsCommand" namespace="Composer\Command" name="DependsCommand"/>
    <extender full="Composer\Command\ProhibitsCommand" namespace="Composer\Command" name="ProhibitsCommand"/>
    <extender full="Composer\Command\InstallCommand" namespace="Composer\Command" name="InstallCommand"/>
    <extender full="Composer\Command\StatusCommand" namespace="Composer\Command" name="StatusCommand"/>
    <extender full="Composer\Command\ReinstallCommand" namespace="Composer\Command" name="ReinstallCommand"/>
    <extender full="Composer\Command\OutdatedCommand" namespace="Composer\Command" name="OutdatedCommand"/>
    <extender full="Composer\Command\DumpAutoloadCommand" namespace="Composer\Command" name="DumpAutoloadCommand"/>
    <extender full="Composer\Command\ScriptAliasCommand" namespace="Composer\Command" name="ScriptAliasCommand"/>
    <extender full="Composer\Command\AboutCommand" namespace="Composer\Command" name="AboutCommand"/>
    <extender full="Composer\Command\RequireCommand" namespace="Composer\Command" name="RequireCommand"/>
    <extender full="Composer\Command\SearchCommand" namespace="Composer\Command" name="SearchCommand"/>
    <extender full="Composer\Command\FundCommand" namespace="Composer\Command" name="FundCommand"/>
    <extender full="Composer\Command\InitCommand" namespace="Composer\Command" name="InitCommand"/>
    <extender full="Composer\Command\HomeCommand" namespace="Composer\Command" name="HomeCommand"/>
    <extender full="Composer\Command\ExecCommand" namespace="Composer\Command" name="ExecCommand"/>
    <extender full="Composer\Command\ValidateCommand" namespace="Composer\Command" name="ValidateCommand"/>
    <extender full="Composer\Command\CreateProjectCommand" namespace="Composer\Command" name="CreateProjectCommand"/>
    <extender full="Composer\Command\SelfUpdateCommand" namespace="Composer\Command" name="SelfUpdateCommand"/>
    <extender full="Composer\Command\BaseDependencyCommand" namespace="Composer\Command" name="BaseDependencyCommand"/>
    <extender full="Composer\Command\RunScriptCommand" namespace="Composer\Command" name="RunScriptCommand"/>
    <extender full="Composer\Command\UpdateCommand" namespace="Composer\Command" name="UpdateCommand"/>
    <extender full="Composer\Command\LicensesCommand" namespace="Composer\Command" name="LicensesCommand"/>
    <extender full="Composer\Command\SuggestsCommand" namespace="Composer\Command" name="SuggestsCommand"/>
    <extender full="Composer\Command\ShowCommand" namespace="Composer\Command" name="ShowCommand"/>
    <extender full="Composer\Command\GlobalCommand" namespace="Composer\Command" name="GlobalCommand"/>
    <extender full="Composer\Command\CheckPlatformReqsCommand" namespace="Composer\Command" name="CheckPlatformReqsCommand"/>
    <extender full="Composer\Command\ArchiveCommand" namespace="Composer\Command" name="ArchiveCommand"/>
    <extender full="Composer\Command\ClearCacheCommand" namespace="Composer\Command" name="ClearCacheCommand"/>
    <extender full="Composer\Command\ConfigCommand" namespace="Composer\Command" name="ConfigCommand"/>
    <extender full="Composer\Command\DiagnoseCommand" namespace="Composer\Command" name="DiagnoseCommand"/>
    <extender full="Composer\Command\RemoveCommand" namespace="Composer\Command" name="RemoveCommand"/>
  </extenders>
  <parent full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command">
    <constant type="{unknown}" name="SUCCESS" value="0"/>
    <constant type="{unknown}" name="FAILURE" value="1"/>
    <constant type="{unknown}" name="INVALID" value="2"/>
    <member name="defaultName" visibility="protected" static="true" line="43">
      <docblock>
        <description/>
        <var description="The default command name" type="object">
          <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
        </var>
      </docblock>
    </member>
    <member name="defaultDescription" visibility="protected" static="true" line="48">
      <docblock>
        <description/>
        <var description="The default command description" type="object">
          <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
        </var>
      </docblock>
    </member>
    <method name="getDefaultName" start="68" end="79" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
        </return>
      </docblock>
    </method>
    <method name="getDefaultDescription" start="81" end="92" abstract="false" final="false" static="true" visibility="public">
      <return type="string" nullable="true"/>
    </method>
    <constructor name="__construct" start="99" end="123" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param description="The name of the command; passing null means it must be set in configure()" type="object" variable="$name">
          <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
        </param>
        <throws description="When the command name is empty" type="object">
          <type full="Symfony\Component\Console\Exception\LogicException" namespace="Symfony\Component\Console\Exception" name="LogicException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string" default="NULL"/>
    </constructor>
    <method name="ignoreValidationErrors" start="130" end="133" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Ignores validation errors.">This is mainly useful for the help command.</description>
      </docblock>
    </method>
    <method name="setApplication" start="135" end="145" abstract="false" final="false" static="false" visibility="public">
      <parameter name="application" byreference="false" type="object" default="NULL">
        <type full="Symfony\Component\Console\Application" namespace="Symfony\Component\Console" name="Application"/>
      </parameter>
    </method>
    <method name="setHelperSet" start="147" end="150" abstract="false" final="false" static="false" visibility="public">
      <parameter name="helperSet" byreference="false" type="object">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </parameter>
    </method>
    <method name="getHelperSet" start="157" end="160" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the helper set."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\HelperSet|null" namespace="Symfony\Component\Console\Command" name="HelperSet|null"/>
        </return>
      </docblock>
    </method>
    <method name="getApplication" start="167" end="170" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the application instance for this command."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\Application|null" namespace="Symfony\Component\Console\Command" name="Application|null"/>
        </return>
      </docblock>
    </method>
    <method name="isEnabled" start="180" end="183" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks whether the command is enabled or not in the current environment.">Override this to check for x or y and return false if the command cannot
run properly under the current conditions.</description>
        <return type="object">
          <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="configure" start="188" end="190" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Configures the current command."/>
      </docblock>
    </method>
    <method name="execute" start="206" end="209" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Executes the current command.">This method is not abstract because you can use this class
as a concrete class. In this case, instead of defining the
execute() method, you set the code to execute by passing
a Closure to the setCode() method.</description>
        <return description="0 if everything went fine, or an exit code" type="int"/>
        <throws description="When this abstract method is not implemented" type="object">
          <type full="Symfony\Component\Console\Exception\LogicException" namespace="Symfony\Component\Console\Exception" name="LogicException"/>
        </throws>
        <see value="setCode()"/>
      </docblock>
      <parameter name="input" byreference="false" type="object">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </parameter>
      <parameter name="output" byreference="false" type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </parameter>
    </method>
    <method name="interact" start="218" end="220" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Interacts with the user.">This method is executed before the InputDefinition is validated.
This means that this is the only place where the command can
interactively ask for values of missing required arguments.</description>
      </docblock>
      <parameter name="input" byreference="false" type="object">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </parameter>
      <parameter name="output" byreference="false" type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </parameter>
    </method>
    <method name="initialize" start="232" end="234" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Initializes the command after the input has been bound and before the input is validated.">This is mainly useful when a lot of commands extends one main command
where some things need to be initialized based on the input arguments and options.</description>
        <see value="InputInterface::bind()"/>
        <see value="InputInterface::validate()"/>
      </docblock>
      <parameter name="input" byreference="false" type="object">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </parameter>
      <parameter name="output" byreference="false" type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </parameter>
    </method>
    <method name="run" start="250" end="306" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runs the command.">The code to execute is either defined directly with the
setCode() method or by overriding the execute() method
in a sub-class.</description>
        <return description="The command exit code" type="int"/>
        <throws description="When binding input fails. Bypass this by calling {@link ignoreValidationErrors()}." type="object">
          <type full="\Exception" namespace="" name="Exception"/>
        </throws>
        <see value="setCode()"/>
        <see value="execute()"/>
      </docblock>
      <parameter name="input" byreference="false" type="object">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </parameter>
      <parameter name="output" byreference="false" type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </parameter>
      <inline>
        <comment value="add the application arguments and options" line="252"/>
        <comment value="bind the input against the command specific arguments/options" line="255"/>
        <comment value="The command name argument is often omitted when a command is executed directly with its run() method." line="286"/>
        <comment value="It would fail the validation if we didn't make sure the command argument is present," line="287"/>
        <comment value="since it's required by the application." line="288"/>
      </inline>
    </method>
    <method name="complete" start="311" end="313" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Adds suggestions to $suggestions for the current completion input (e.g. option or argument)."/>
      </docblock>
      <return type="void" nullable="false"/>
      <parameter name="input" byreference="false" type="object">
        <type full="Symfony\Component\Console\Completion\CompletionInput" namespace="Symfony\Component\Console\Completion" name="CompletionInput"/>
      </parameter>
      <parameter name="suggestions" byreference="false" type="object">
        <type full="Symfony\Component\Console\Completion\CompletionSuggestions" namespace="Symfony\Component\Console\Completion" name="CompletionSuggestions"/>
      </parameter>
    </method>
    <method name="setCode" start="329" end="348" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the code to execute when running this command.">If this method is used, it overrides the code defined
in the execute() method.</description>
        <param description="A callable(InputInterface $input, OutputInterface $output)" type="object" variable="$code">
          <type full="Symfony\Component\Console\Command\callable" namespace="Symfony\Component\Console\Command" name="callable"/>
        </param>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
        <throws type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
        <see value="execute()"/>
      </docblock>
      <parameter name="code" byreference="false" type="callable"/>
    </method>
    <method name="mergeApplicationDefinition" start="359" end="375" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Merges the application definition with the command definition.">This method is not part of public API and should not be used directly.</description>
        <param description="Whether to merge or not the Application definition arguments to Command definition arguments" type="object" variable="$mergeArgs">
          <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
        </param>
        <internal/>
      </docblock>
      <parameter name="mergeArgs" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="setDefinition" start="384" end="395" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets an array of argument and option instances."/>
        <param description="An array of argument and option instances or a definition instance" type="object" variable="$definition">
          <type full="Symfony\Component\Console\Command\array|InputDefinition" namespace="Symfony\Component\Console\Command" name="array|InputDefinition"/>
        </param>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="definition" byreference="false" type="{unknown}"/>
    </method>
    <method name="getDefinition" start="402" end="405" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the InputDefinition attached to this Command."/>
        <return type="object">
          <type full="Symfony\Component\Console\Input\InputDefinition" namespace="Symfony\Component\Console\Input" name="InputDefinition"/>
        </return>
      </docblock>
    </method>
    <method name="getNativeDefinition" start="417" end="424" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the InputDefinition to be used to create representations of this Command.">Can be overridden to provide the original command representation when it would otherwise
be changed by merging with the application InputDefinition.

This method is not part of public API and should not be used directly.</description>
        <return type="object">
          <type full="Symfony\Component\Console\Input\InputDefinition" namespace="Symfony\Component\Console\Input" name="InputDefinition"/>
        </return>
      </docblock>
    </method>
    <method name="addArgument" start="436" end="444" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Adds an argument."/>
        <param description="The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL" type="object" variable="$mode">
          <type full="Symfony\Component\Console\Command\int|null" namespace="Symfony\Component\Console\Command" name="int|null"/>
        </param>
        <param description="The default value (for InputArgument::OPTIONAL mode only)" type="mixed" variable="$default"/>
        <throws description="When argument mode is not valid" type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="mode" byreference="false" type="int" default="NULL"/>
      <parameter name="description" byreference="false" type="string" default="''"/>
      <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="addOption" start="457" end="465" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Adds an option."/>
        <param description="The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts" type="object" variable="$shortcut">
          <type full="Symfony\Component\Console\Command\string|array|null" namespace="Symfony\Component\Console\Command" name="string|array|null"/>
        </param>
        <param description="The option mode: One of the InputOption::VALUE_* constants" type="object" variable="$mode">
          <type full="Symfony\Component\Console\Command\int|null" namespace="Symfony\Component\Console\Command" name="int|null"/>
        </param>
        <param description="The default value (must be null for InputOption::VALUE_NONE)" type="mixed" variable="$default"/>
        <throws description="If option mode is invalid or incompatible" type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="shortcut" byreference="false" type="{unknown}" default="NULL"/>
      <parameter name="mode" byreference="false" type="int" default="NULL"/>
      <parameter name="description" byreference="false" type="string" default="''"/>
      <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="setName" start="479" end="486" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the name of the command.">This method can set both the namespace and the name if
you separate them by a colon (:)

    $command-&gt;setName('foo:bar');</description>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
        <throws description="When the name is invalid" type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
    <method name="setProcessTitle" start="496" end="501" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the process title of the command.">This feature should be used only when creating a long process command,
like a daemon.</description>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="title" byreference="false" type="string"/>
    </method>
    <method name="getName" start="508" end="511" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the command name."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
        </return>
      </docblock>
    </method>
    <method name="setHidden" start="521" end="526" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param description="Whether or not the command should be hidden from the list of commands" type="object" variable="$hidden">The default value will be true in Symfony 6.0<type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/></param>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
        <final value="since Symfony 5.1"/>
      </docblock>
      <parameter name="hidden" byreference="false" type="bool"/>
    </method>
    <method name="isHidden" start="531" end="534" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return description="whether the command should be publicly shown or not" type="object">
          <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="setDescription" start="541" end="546" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the description for the command."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="description" byreference="false" type="string"/>
    </method>
    <method name="getDescription" start="553" end="556" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the description for the command."/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="setHelp" start="563" end="568" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the help for the command."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="help" byreference="false" type="string"/>
    </method>
    <method name="getHelp" start="575" end="578" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the help for the command."/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="getProcessedHelp" start="586" end="601" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the processed help for the command replacing the %command.name% and %command.full_name% patterns with the real values dynamically."/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="setAliases" start="612" end="624" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the aliases for the command."/>
        <param description="An array of aliases for the command" type="array" variable="$aliases" of="object">
          <type full="Symfony\Component\Console\Command\string" namespace="Symfony\Component\Console\Command" name="string"/>
        </param>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
        <throws description="When an alias is invalid" type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="aliases" byreference="false" type="object">
        <type full="Symfony\Component\Console\Command\iterable" namespace="Symfony\Component\Console\Command" name="iterable"/>
      </parameter>
    </method>
    <method name="getAliases" start="631" end="634" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the aliases for the command."/>
        <return type="array"/>
      </docblock>
    </method>
    <method name="getSynopsis" start="643" end="652" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the synopsis for the command."/>
        <param description="Whether to show the short version of the synopsis (with options folded) or not" type="object" variable="$short">
          <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="short" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="addUsage" start="659" end="668" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add a command usage example, it'll be prefixed with the command name."/>
        <return type="object">
          <type full="Symfony\Component\Console\Command\$this" namespace="Symfony\Component\Console\Command" name="$this"/>
        </return>
      </docblock>
      <parameter name="usage" byreference="false" type="string"/>
    </method>
    <method name="getUsages" start="675" end="678" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns alternative usages of the command."/>
        <return type="array"/>
      </docblock>
    </method>
    <method name="getHelper" start="688" end="695" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets a helper instance by name."/>
        <return type="mixed"/>
        <throws description="if no HelperSet is defined" type="object">
          <type full="Symfony\Component\Console\Exception\LogicException" namespace="Symfony\Component\Console\Exception" name="LogicException"/>
        </throws>
        <throws description="if the helper is not defined" type="object">
          <type full="Symfony\Component\Console\Exception\InvalidArgumentException" namespace="Symfony\Component\Console\Exception" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
  </parent>
</class>
