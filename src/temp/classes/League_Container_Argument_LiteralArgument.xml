<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="League\Container\Argument\LiteralArgument" namespace="League\Container\Argument" name="LiteralArgument" abstract="false" final="false" start="9" end="48">
  <file path="//var/www/html/vendor/league/container/src/Argument" file="LiteralArgument.php" realpath="/var/www/html/vendor/league/container/src/Argument/LiteralArgument.php" size="1208" time="2021-11-16T10:29:06+00:00" unixtime="1637058546" sha1="61a11072e6a25a9bdc2d0bb589401649abcbc757" relative="ar/www/html/vendor/league/container/src/Argument/LiteralArgument.php"/>
  <implements full="League\Container\Argument\LiteralArgumentInterface" namespace="League\Container\Argument" name="LiteralArgumentInterface"/>
  <constant type="{unknown}" name="TYPE_ARRAY" value="'array'"/>
  <constant type="{unknown}" name="TYPE_BOOL" value="'boolean'"/>
  <constant type="{unknown}" name="TYPE_BOOLEAN" value="'boolean'"/>
  <constant type="{unknown}" name="TYPE_CALLABLE" value="'callable'"/>
  <constant type="{unknown}" name="TYPE_DOUBLE" value="'double'"/>
  <constant type="{unknown}" name="TYPE_FLOAT" value="'double'"/>
  <constant type="{unknown}" name="TYPE_INT" value="'integer'"/>
  <constant type="{unknown}" name="TYPE_INTEGER" value="'integer'"/>
  <constant type="{unknown}" name="TYPE_OBJECT" value="'object'"/>
  <constant type="{unknown}" name="TYPE_STRING" value="'string'"/>
  <member name="value" visibility="protected" static="false" line="25">
    <docblock>
      <description/>
      <var type="mixed"/>
    </docblock>
  </member>
  <constructor name="__construct" start="27" end="39" abstract="false" final="false" static="false" visibility="public">
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="string" default="NULL"/>
  </constructor>
  <method name="getValue" start="44" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <interface full="League\Container\Argument\LiteralArgumentInterface" namespace="League\Container\Argument" name="LiteralArgumentInterface">
    <extends full="League\Container\Argument\ArgumentInterface" namespace="League\Container\Argument" name="ArgumentInterface"/>
  </interface>
  <extenders>
    <extender full="League\Container\Argument\Literal\BooleanArgument" namespace="League\Container\Argument\Literal" name="BooleanArgument"/>
    <extender full="League\Container\Argument\Literal\ArrayArgument" namespace="League\Container\Argument\Literal" name="ArrayArgument"/>
    <extender full="League\Container\Argument\Literal\ObjectArgument" namespace="League\Container\Argument\Literal" name="ObjectArgument"/>
    <extender full="League\Container\Argument\Literal\CallableArgument" namespace="League\Container\Argument\Literal" name="CallableArgument"/>
    <extender full="League\Container\Argument\Literal\FloatArgument" namespace="League\Container\Argument\Literal" name="FloatArgument"/>
    <extender full="League\Container\Argument\Literal\StringArgument" namespace="League\Container\Argument\Literal" name="StringArgument"/>
    <extender full="League\Container\Argument\Literal\IntegerArgument" namespace="League\Container\Argument\Literal" name="IntegerArgument"/>
  </extenders>
</class>
