<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Fabfuel\Prophiler\Iterator\ComponentFilteredIterator" namespace="Fabfuel\Prophiler\Iterator" name="ComponentFilteredIterator" abstract="false" final="false" start="16" end="87">
  <file path="//var/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler/Iterator" file="ComponentFilteredIterator.php" realpath="/var/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler/Iterator/ComponentFilteredIterator.php" size="2101" time="2017-09-16T06:49:25+00:00" unixtime="1505544565" sha1="147542f4f80a3d3625ef4b359d2797a95be6c4da" relative="ar/www/html/vendor/fabfuel/prophiler/src/Fabfuel/Prophiler/Iterator/ComponentFilteredIterator.php"/>
  <docblock>
    <description compact="Class ComponentFilteredIterator"/>
    <package value="Fabfuel\Prophiler\Iterator"/>
    <method value="BenchmarkInterface current"/>
  </docblock>
  <extends full="FilterIterator" namespace="" name="FilterIterator"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <member name="component" visibility="protected" static="false" line="21">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="filters" default="" type="array" visibility="protected" static="false" line="26">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="33" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$profiler">
        <type full="Fabfuel\Prophiler\Iterator\ProfilerInterface|\Iterator" namespace="Fabfuel\Prophiler\Iterator\ProfilerInterface|" name="Iterator"/>
      </param>
      <param type="string" variable="$component"/>
      <param description="Additional filters (e.g. ['severity' =&gt; ['alert', 'emergency', 'error']" type="array" variable="$filters"/>
    </docblock>
    <parameter name="profiler" byreference="false" type="object">
      <type full="Fabfuel\Prophiler\ProfilerInterface" namespace="Fabfuel\Prophiler" name="ProfilerInterface"/>
    </parameter>
    <parameter name="component" byreference="false" type="{unknown}"/>
    <parameter name="filters" byreference="false" type="array" default=""/>
  </constructor>
  <method name="accept" start="45" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if the benchmark belongs to the predefined component"/>
      <return type="object">
        <type full="Fabfuel\Prophiler\Iterator\bool" namespace="Fabfuel\Prophiler\Iterator" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="acceptFilters" start="56" end="64" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Fabfuel\Prophiler\Iterator\bool" namespace="Fabfuel\Prophiler\Iterator" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="acceptFilter" start="72" end="78" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$benchmark">
        <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
      </param>
      <param type="string" variable="$field"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Fabfuel\Prophiler\Iterator\bool" namespace="Fabfuel\Prophiler\Iterator" name="bool"/>
      </return>
    </docblock>
    <parameter name="benchmark" byreference="false" type="object">
      <type full="Fabfuel\Prophiler\Benchmark\BenchmarkInterface" namespace="Fabfuel\Prophiler\Benchmark" name="BenchmarkInterface"/>
    </parameter>
    <parameter name="field" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="count" start="83" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="int"/>
    </docblock>
  </method>
  <parent full="FilterIterator" namespace="" name="FilterIterator">
    <implements full="OuterIterator" namespace="" name="OuterIterator"/>
    <method name="accept" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element of the iterator is acceptable"/>
      <return type="bool"/>
    </docblock>
  </method>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct a filterIterator"/>
      <return type="void"/>
    </docblock>
    <parameter name="iterator" optional="false" byreference="false" type="object" class="Iterator"/>
  </constructor>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current element value"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the inner iterator"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current key"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move the iterator forward"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the iterator"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <interface full="OuterIterator" namespace="" name="OuterIterator">
    <extends full="Iterator" namespace="" name="Iterator"/>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the inner iterator for the current entry"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
  </interface>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
</class>
