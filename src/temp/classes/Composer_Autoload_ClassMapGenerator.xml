<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Autoload\ClassMapGenerator" namespace="Composer\Autoload" name="ClassMapGenerator" abstract="false" final="false" start="33" end="315">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Autoload" file="ClassMapGenerator.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Autoload/ClassMapGenerator.php" size="13369" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="fb573fda7290b022b94a0b84afe8184582e56ed4" relative="ar/www/html/vendor/composer/composer/src/Composer/Autoload/ClassMapGenerator.php"/>
  <docblock>
    <description compact="ClassMapGenerator"/>
    <author value="Gyula Sallai &lt;salla016@gmail.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <method name="dump" start="42" end="51" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Generate a class map file"/>
      <param description="Directories or a single path to search in" type="object" variable="$dirs">
        <type full="\Traversable&lt;string&gt;|array&lt;string&gt;" namespace="" name="Traversable&lt;string&gt;|array&lt;string&gt;"/>
      </param>
      <param description="The name of the class map file" type="string" variable="$file"/>
      <return type="object">
        <type full="Composer\Autoload\void" namespace="Composer\Autoload" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="dirs" byreference="false" type="object">
      <type full="Composer\Autoload\iterable" namespace="Composer\Autoload" name="iterable"/>
    </parameter>
    <parameter name="file" byreference="false" type="string"/>
  </method>
  <method name="createMap" start="65" end="148" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Iterate over all files in the given directory searching for classes"/>
      <param description="The path to search in or an iterator" type="object" variable="$path">
        <type full="\Traversable&lt;\SplFileInfo&gt;|string|array&lt;string&gt;" namespace="\Traversable&lt;" name="SplFileInfo&gt;|string|array&lt;string&gt;"/>
      </param>
      <param description="Regex that matches file paths to be excluded from the classmap" type="string" variable="$excluded"/>
      <param description="IO object" type="object" variable="$io">
        <type full="Composer\Autoload\?IOInterface" namespace="Composer\Autoload" name="?IOInterface"/>
      </param>
      <param description="Optional namespace prefix to filter by" type="object" variable="$namespace">
        <type full="Composer\Autoload\null|string" namespace="Composer\Autoload" name="null|string"/>
      </param>
      <param description="psr-0|psr-4 Optional autoload standard to use mapping rules" type="object" variable="$autoloadType">
        <type full="Composer\Autoload\null|string" namespace="Composer\Autoload" name="null|string"/>
      </param>
      <param description="true&gt; $scannedFiles" type="object">
        <type full="Composer\Autoload\array&lt;string" namespace="Composer\Autoload" name="array&lt;string"/>
      </param>
      <return description="string&gt; A class map array" type="object">
        <type full="Composer\Autoload\array&lt;class-string" namespace="Composer\Autoload" name="array&lt;class-string"/>
      </return>
      <throws description="When the path is neither an existing file nor directory" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="excluded" byreference="false" type="string" default="NULL"/>
    <parameter name="io" byreference="false" type="object" default="NULL">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="namespace" byreference="false" nullable="true" type="string" default="NULL"/>
    <parameter name="autoloadType" byreference="false" nullable="true" type="string" default="NULL"/>
    <parameter name="scannedFiles" byreference="true" type="array" default=""/>
  </method>
  <method name="filterByNamespace" start="161" end="210" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Remove classes which could not have been loaded by namespace autoloaders"/>
      <param description="class-string&gt; $classes       found classes in given file" type="object">
        <type full="Composer\Autoload\array&lt;int" namespace="Composer\Autoload" name="array&lt;int"/>
      </param>
      <param description="current file" type="string" variable="$filePath"/>
      <param description="prefix of given autoload mapping" type="string" variable="$baseNamespace"/>
      <param description="psr-0|psr-4" type="string" variable="$namespaceType"/>
      <param description="root directory of given autoload mapping" type="string" variable="$basePath"/>
      <param description="IO object" type="object" variable="$io">
        <type full="Composer\Autoload\?IOInterface" namespace="Composer\Autoload" name="?IOInterface"/>
      </param>
      <return description="class-string&gt; valid classes" type="object">
        <type full="Composer\Autoload\array&lt;int" namespace="Composer\Autoload" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="classes" byreference="false" type="array"/>
    <parameter name="filePath" byreference="false" type="string"/>
    <parameter name="baseNamespace" byreference="false" type="string"/>
    <parameter name="namespaceType" byreference="false" type="string"/>
    <parameter name="basePath" byreference="false" type="string"/>
    <parameter name="io" byreference="false" nullable="true" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <inline>
      <comment value="warn only if no valid classes, else silently skip invalid" line="198"/>
    </inline>
  </method>
  <method name="findClasses" start="219" end="295" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Extract the classes in the given file"/>
      <param description="The file to check" type="string" variable="$path"/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return description="class-string&gt; The found classes" type="object">
        <type full="Composer\Autoload\array&lt;int" namespace="Composer\Autoload" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="path" byreference="false" type="string"/>
    <inline>
      <comment value="Use @ here instead of Silencer to actively suppress 'unhelpful' output" line="223"/>
      <comment value="@link https://github.com/composer/composer/pull/4886" line="224"/>
      <comment value="return early if there is no chance of matching anything in this file" line="244"/>
    </inline>
  </method>
  <method name="getExtraTypes" start="300" end="314" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
</class>
