<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="GuzzleHttp\Promise\TaskQueue" namespace="GuzzleHttp\Promise" name="TaskQueue" abstract="false" final="false" start="14" end="67">
  <file path="//var/www/html/vendor/guzzlehttp/promises/src" file="TaskQueue.php" realpath="/var/www/html/vendor/guzzlehttp/promises/src/TaskQueue.php" size="1940" time="2021-10-22T20:56:57+00:00" unixtime="1634936217" sha1="d376ce029640b2a66abb11e046311f841ef40ca3" relative="ar/www/html/vendor/guzzlehttp/promises/src/TaskQueue.php"/>
  <docblock>
    <description compact="A task queue that executes tasks in a FIFO order.">This task queue class is used to settle promises asynchronously and
maintains a constant stack size. You can use the task queue asynchronously
by calling the `run()` function of the global task queue in an event loop.

    GuzzleHttp\Promise\Utils::queue()-&gt;run();</description>
  </docblock>
  <implements full="GuzzleHttp\Promise\TaskQueueInterface" namespace="GuzzleHttp\Promise" name="TaskQueueInterface"/>
  <member name="enableShutdown" default="true" type="boolean" visibility="private" static="false" line="16"/>
  <member name="queue" default="" type="array" visibility="private" static="false" line="17"/>
  <constructor name="__construct" start="19" end="32" abstract="false" final="false" static="false" visibility="public">
    <parameter name="withShutdown" byreference="false" type="boolean" default="true"/>
  </constructor>
  <method name="isEmpty" start="34" end="37" abstract="false" final="false" static="false" visibility="public"/>
  <method name="add" start="39" end="42" abstract="false" final="false" static="false" visibility="public">
    <parameter name="task" byreference="false" type="callable"/>
  </method>
  <method name="run" start="44" end="50" abstract="false" final="false" static="false" visibility="public"/>
  <method name="disableShutdown" start="63" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The task queue will be run and exhausted by default when the process exits IFF the exit is not the result of a PHP E_ERROR error.">You can disable running the automatic shutdown of the queue by calling
this function. If you disable the task queue shutdown process, then you
MUST either run the task queue (as a result of running your event loop
or manually using the run() method) or wait on each outstanding promise.

Note: This shutdown will occur before any destructors are triggered.</description>
    </docblock>
  </method>
  <interface full="GuzzleHttp\Promise\TaskQueueInterface" namespace="GuzzleHttp\Promise" name="TaskQueueInterface">
    <method name="isEmpty" start="12" end="12" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the queue is empty."/>
        <return type="object">
          <type full="GuzzleHttp\Promise\bool" namespace="GuzzleHttp\Promise" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="add" start="18" end="18" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Adds a task to the queue that will be executed the next time run is called."/>
      </docblock>
      <parameter name="task" byreference="false" type="callable"/>
    </method>
    <method name="run" start="23" end="23" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Execute all of the pending task in the queue."/>
      </docblock>
    </method>
  </interface>
</class>
