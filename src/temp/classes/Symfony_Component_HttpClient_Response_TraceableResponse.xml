<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpClient\Response\TraceableResponse" namespace="Symfony\Component\HttpClient\Response" name="TraceableResponse" abstract="false" final="false" start="32" end="219">
  <file path="//var/www/html/vendor/symfony/http-client/Response" file="TraceableResponse.php" realpath="/var/www/html/vendor/symfony/http-client/Response/TraceableResponse.php" size="6660" time="2022-04-12T16:02:29+00:00" unixtime="1649779349" sha1="7abb180c0642f0447d4b8611153468554cc1e0f5" relative="ar/www/html/vendor/symfony/http-client/Response/TraceableResponse.php"/>
  <docblock>
    <description/>
    <author value="Nicolas Grekas &lt;p@tchwork.com&gt;"/>
    <internal/>
  </docblock>
  <implements full="Symfony\Contracts\HttpClient\ResponseInterface" namespace="Symfony\Contracts\HttpClient" name="ResponseInterface"/>
  <implements full="Symfony\Component\HttpClient\Response\StreamableInterface" namespace="Symfony\Component\HttpClient\Response" name="StreamableInterface"/>
  <member name="client" visibility="private" static="false" line="34"/>
  <member name="response" visibility="private" static="false" line="35"/>
  <member name="content" visibility="private" static="false" line="36"/>
  <member name="event" visibility="private" static="false" line="37"/>
  <constructor name="__construct" start="39" end="45" abstract="false" final="false" static="false" visibility="public">
    <parameter name="client" byreference="false" type="object">
      <type full="Symfony\Contracts\HttpClient\HttpClientInterface" namespace="Symfony\Contracts\HttpClient" name="HttpClientInterface"/>
    </parameter>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Contracts\HttpClient\ResponseInterface" namespace="Symfony\Contracts\HttpClient" name="ResponseInterface"/>
    </parameter>
    <parameter name="content" byreference="true" type="{unknown}"/>
    <parameter name="event" byreference="false" type="object" default="NULL">
      <type full="Symfony\Component\Stopwatch\StopwatchEvent" namespace="Symfony\Component\Stopwatch" name="StopwatchEvent"/>
    </parameter>
  </constructor>
  <method name="__sleep" start="47" end="50" abstract="false" final="false" static="false" visibility="public">
    <return type="array" nullable="false"/>
  </method>
  <method name="__wakeup" start="52" end="55" abstract="false" final="false" static="false" visibility="public"/>
  <destructor name="__destruct" start="57" end="66" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getStatusCode" start="68" end="77" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
  </method>
  <method name="getHeaders" start="79" end="88" abstract="false" final="false" static="false" visibility="public">
    <return type="array" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getContent" start="90" end="106" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="toArray" start="108" end="124" abstract="false" final="false" static="false" visibility="public">
    <return type="array" nullable="false"/>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="cancel" start="126" end="133" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
  </method>
  <method name="getInfo" start="135" end="138" abstract="false" final="false" static="false" visibility="public">
    <parameter name="type" byreference="false" type="string" default="NULL"/>
  </method>
  <method name="toStream" start="150" end="162" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Casts the response to a PHP stream resource."/>
      <return type="resource"/>
      <throws description="When a network error occurs" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
      </throws>
      <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
      </throws>
      <throws description="On a 4xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
      </throws>
      <throws description="On a 5xx when $throw is true" type="object">
        <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
      </throws>
    </docblock>
    <parameter name="throw" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="stream" start="167" end="203" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <internal/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Generator" namespace="" name="Generator"/>
    </return>
    <parameter name="client" byreference="false" type="object">
      <type full="Symfony\Contracts\HttpClient\HttpClientInterface" namespace="Symfony\Contracts\HttpClient" name="HttpClientInterface"/>
    </parameter>
    <parameter name="responses" byreference="false" type="object">
      <type full="Symfony\Component\HttpClient\Response\iterable" namespace="Symfony\Component\HttpClient\Response" name="iterable"/>
    </parameter>
    <parameter name="timeout" byreference="false" nullable="true" type="float"/>
  </method>
  <method name="checkStatusCode" start="205" end="218" abstract="false" final="false" static="false" visibility="private">
    <parameter name="code" byreference="false" type="int"/>
  </method>
  <interface full="Symfony\Contracts\HttpClient\ResponseInterface" namespace="Symfony\Contracts\HttpClient" name="ResponseInterface">
    <method name="getStatusCode" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the HTTP status code of the response."/>
        <throws description="when a network error occurs" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
        </throws>
      </docblock>
      <return type="int" nullable="false"/>
    </method>
    <method name="getHeaders" start="47" end="47" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the HTTP headers of the response."/>
        <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
          <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
        </param>
        <return description="The headers of the response keyed by header names in lowercase" type="array" of="object">
          <type full="Symfony\Contracts\HttpClient\string[]" namespace="Symfony\Contracts\HttpClient" name="string[]"/>
        </return>
        <throws description="When a network error occurs" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
        </throws>
        <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
        </throws>
        <throws description="On a 4xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
        </throws>
        <throws description="On a 5xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
        </throws>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="throw" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="getContent" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the response body as a string."/>
        <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
          <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
        </param>
        <throws description="When a network error occurs" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
        </throws>
        <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
        </throws>
        <throws description="On a 4xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
        </throws>
        <throws description="On a 5xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
        </throws>
      </docblock>
      <return type="string" nullable="false"/>
      <parameter name="throw" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="toArray" start="72" end="72" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the response body decoded as array, typically from a JSON payload."/>
        <param description="Whether an exception should be thrown on 3/4/5xx status codes" type="object" variable="$throw">
          <type full="Symfony\Contracts\HttpClient\bool" namespace="Symfony\Contracts\HttpClient" name="bool"/>
        </param>
        <throws description="When the body cannot be decoded to an array" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\DecodingExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="DecodingExceptionInterface"/>
        </throws>
        <throws description="When a network error occurs" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
        </throws>
        <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
        </throws>
        <throws description="On a 4xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
        </throws>
        <throws description="On a 5xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
        </throws>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="throw" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="cancel" start="79" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Closes the response stream and all related buffers.">No further chunk will be yielded after this method has been called.</description>
      </docblock>
      <return type="void" nullable="false"/>
    </method>
    <method name="getInfo" start="108" end="108" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns info coming from the transport layer.">This method SHOULD NOT throw any ExceptionInterface and SHOULD be non-blocking.
The returned info is "live": it can be empty and can change from one call to
another, as the request/response progresses.

The following info MUST be returned:
 - canceled (bool) - true if the response was canceled using ResponseInterface::cancel(), false otherwise
 - error (string|null) - the error message when the transfer was aborted, null otherwise
 - http_code (int) - the last response code or 0 when it is not known yet
 - http_method (string) - the HTTP verb of the last request
 - redirect_count (int) - the number of redirects followed while executing the request
 - redirect_url (string|null) - the resolved location of redirect responses, null otherwise
 - response_headers (array) - an array modelled after the special $http_response_header variable
 - start_time (float) - the time when the request was sent or 0.0 when it's pending
 - url (string) - the last effective URL of the request
 - user_data (mixed) - the value of the "user_data" request option, null if not set

When the "capture_peer_cert_chain" option is true, the "peer_certificate_chain"
attribute SHOULD list the peer certificates as an array of OpenSSL X.509 resources.

Other info SHOULD be named after curl_getinfo()'s associative return value.</description>
        <return description="An array of all available info, or one of them when $type is" type="mixed">provided, or null when an unsupported type is requested</return>
      </docblock>
      <parameter name="type" byreference="false" type="string" default="NULL"/>
    </method>
  </interface>
  <interface full="Symfony\Component\HttpClient\Response\StreamableInterface" namespace="Symfony\Component\HttpClient\Response" name="StreamableInterface">
    <method name="toStream" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Casts the response to a PHP stream resource."/>
        <return type="resource"/>
        <throws description="When a network error occurs" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\TransportExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="TransportExceptionInterface"/>
        </throws>
        <throws description="On a 3xx when $throw is true and the &quot;max_redirects&quot; option has been reached" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\RedirectionExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="RedirectionExceptionInterface"/>
        </throws>
        <throws description="On a 4xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ClientExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ClientExceptionInterface"/>
        </throws>
        <throws description="On a 5xx when $throw is true" type="object">
          <type full="Symfony\Contracts\HttpClient\Exception\ServerExceptionInterface" namespace="Symfony\Contracts\HttpClient\Exception" name="ServerExceptionInterface"/>
        </throws>
      </docblock>
      <parameter name="throw" byreference="false" type="boolean" default="true"/>
    </method>
  </interface>
</class>
