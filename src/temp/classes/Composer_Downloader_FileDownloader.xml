<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Downloader\FileDownloader" namespace="Composer\Downloader" name="FileDownloader" abstract="false" final="false" start="45" end="518">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Downloader" file="FileDownloader.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Downloader/FileDownloader.php" size="19513" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="af6e052a376d0c86146ece18c87401d5ac02d07d" relative="ar/www/html/vendor/composer/composer/src/Composer/Downloader/FileDownloader.php"/>
  <docblock>
    <description compact="Base downloader for files"/>
    <author value="Kirill chEbba Chebunin &lt;iam@chebba.org&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
    <author value="FranÃ§ois Pluchino &lt;francois.pluchino@opendisplay.com&gt;"/>
    <author value="Nils Adermann &lt;naderman@naderman.de&gt;"/>
  </docblock>
  <implements full="Composer\Downloader\DownloaderInterface" namespace="Composer\Downloader" name="DownloaderInterface"/>
  <implements full="Composer\Downloader\ChangeReportInterface" namespace="Composer\Downloader" name="ChangeReportInterface"/>
  <member name="io" visibility="protected" static="false" line="48">
    <docblock>
      <var type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </var>
    </docblock>
  </member>
  <member name="config" visibility="protected" static="false" line="50">
    <docblock>
      <var type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </var>
    </docblock>
  </member>
  <member name="httpDownloader" visibility="protected" static="false" line="52">
    <docblock>
      <var type="object">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </var>
    </docblock>
  </member>
  <member name="filesystem" visibility="protected" static="false" line="54">
    <docblock>
      <var type="object">
        <type full="Composer\Util\Filesystem" namespace="Composer\Util" name="Filesystem"/>
      </var>
    </docblock>
  </member>
  <member name="cache" visibility="protected" static="false" line="56">
    <docblock>
      <var type="object">
        <type full="Composer\Downloader\?Cache" namespace="Composer\Downloader" name="?Cache"/>
      </var>
    </docblock>
  </member>
  <member name="eventDispatcher" visibility="protected" static="false" line="58">
    <docblock>
      <var type="object">
        <type full="Composer\Downloader\?EventDispatcher" namespace="Composer\Downloader" name="?EventDispatcher"/>
      </var>
    </docblock>
  </member>
  <member name="process" visibility="protected" static="false" line="60">
    <docblock>
      <var type="object">
        <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
      </var>
    </docblock>
  </member>
  <member name="downloadMetadata" default="" type="array" visibility="public" static="true" line="66">
    <docblock>
      <description/>
      <var description="int|string&gt;" type="object">
        <type full="Composer\Downloader\array&lt;string" namespace="Composer\Downloader" name="array&lt;string"/>
      </var>
      <private/>
      <internal/>
    </docblock>
  </member>
  <member name="lastCacheWrites" default="" type="array" visibility="private" static="false" line="71">
    <docblock>
      <description/>
      <var description="string&gt; Map of package name to cache key" type="object">
        <type full="Composer\Downloader\array&lt;string" namespace="Composer\Downloader" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="additionalCleanupPaths" default="" type="array" visibility="private" static="false" line="73">
    <docblock>
      <var description="string[]&gt; Map of package name to list of paths" type="object">
        <type full="Composer\Downloader\array&lt;string" namespace="Composer\Downloader" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="85" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="The IO instance" type="object" variable="$io">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </param>
      <param description="The config" type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
      <param description="The remote filesystem" type="object" variable="$httpDownloader">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </param>
      <param description="The event dispatcher" type="object" variable="$eventDispatcher">
        <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
      </param>
      <param description="Cache instance" type="object" variable="$cache">
        <type full="Composer\Cache" namespace="Composer" name="Cache"/>
      </param>
      <param description="The filesystem" type="object" variable="$filesystem">
        <type full="Composer\Util\Filesystem" namespace="Composer\Util" name="Filesystem"/>
      </param>
    </docblock>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="httpDownloader" byreference="false" type="object">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </parameter>
    <parameter name="eventDispatcher" byreference="false" type="object" default="NULL">
      <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
    </parameter>
    <parameter name="cache" byreference="false" type="object" default="NULL">
      <type full="Composer\Cache" namespace="Composer" name="Cache"/>
    </parameter>
    <parameter name="filesystem" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\Filesystem" namespace="Composer\Util" name="Filesystem"/>
    </parameter>
    <parameter name="process" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
  </constructor>
  <method name="getInstallationSource" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="download" start="114" end="292" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
      <param type="object" variable="$output">
        <type full="Composer\Downloader\bool" namespace="Composer\Downloader" name="bool"/>
      </param>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="prepare" start="297" end="300" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="cleanup" start="305" end="331" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
    <parameter name="prevPackage" byreference="false" type="object" default="NULL">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="install" start="338" end="359" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
      <param type="object" variable="$output">
        <type full="Composer\Downloader\bool" namespace="Composer\Downloader" name="bool"/>
      </param>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
    <parameter name="output" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="clearLastCacheWrite" start="364" end="370" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Downloader\void" namespace="Composer\Downloader" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="addCleanupPath" start="377" end="380" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Composer\Downloader\void" namespace="Composer\Downloader" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <method name="removeCleanupPath" start="387" end="395" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Composer\Downloader\void" namespace="Composer\Downloader" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <method name="update" start="400" end="409" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="initial" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="target" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <method name="remove" start="416" end="428" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
      <param type="object" variable="$output">
        <type full="Composer\Downloader\bool" namespace="Composer\Downloader" name="bool"/>
      </param>
    </docblock>
    <return type="object" nullable="false">
      <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
    <parameter name="output" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getFileName" start="437" end="440" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Gets file name for specific package"/>
      <param description="package instance" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <param description="download path" type="string" variable="$path"/>
      <return description="file name" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <method name="getInstallOperationAppendix" start="449" end="452" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Gets appendix message to add to the &quot;- Upgrading x&quot; string being output on update"/>
      <param description="package instance" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <param description="download path" type="string" variable="$path"/>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <method name="processUrl" start="462" end="473" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Process the download url"/>
      <param description="package the url is coming from" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <param description="download url" type="string" variable="$url"/>
      <throws description="If any problem with the url" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return description="url" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="url" byreference="false" type="string"/>
  </method>
  <method name="getLocalChanges" start="479" end="517" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <inheritdoc/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <return type="string" nullable="true"/>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="path" byreference="false" type="string"/>
  </method>
  <extenders>
    <extender full="Composer\Downloader\TarDownloader" namespace="Composer\Downloader" name="TarDownloader"/>
    <extender full="Composer\Downloader\PharDownloader" namespace="Composer\Downloader" name="PharDownloader"/>
    <extender full="Composer\Downloader\RarDownloader" namespace="Composer\Downloader" name="RarDownloader"/>
    <extender full="Composer\Downloader\ArchiveDownloader" namespace="Composer\Downloader" name="ArchiveDownloader"/>
    <extender full="Composer\Downloader\ZipDownloader" namespace="Composer\Downloader" name="ZipDownloader"/>
    <extender full="Composer\Downloader\GzipDownloader" namespace="Composer\Downloader" name="GzipDownloader"/>
    <extender full="Composer\Downloader\XzDownloader" namespace="Composer\Downloader" name="XzDownloader"/>
    <extender full="Composer\Downloader\PathDownloader" namespace="Composer\Downloader" name="PathDownloader"/>
  </extenders>
  <interface full="Composer\Downloader\DownloaderInterface" namespace="Composer\Downloader" name="DownloaderInterface">
    <method name="getInstallationSource" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns installation source (either source or dist)."/>
        <return description="&quot;source&quot; or &quot;dist&quot;" type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="download" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This should do any network-related tasks to prepare for an upcoming install/update"/>
        <param description="download path" type="string" variable="$path"/>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="prepare" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Do anything that needs to be done between all downloads have been completed and the actual operation is executed">All packages get first downloaded, then all together prepared, then all together installed/updated/uninstalled. Therefore
for error recovery it is important to avoid failing during install/update/uninstall as much as possible, and risky things or
user prompts should happen in the prepare step rather. In case of failure, cleanup() will be called so that changes can
be undone as much as possible.</description>
        <param description="one of install/update/uninstall" type="string" variable="$type"/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="download path" type="string" variable="$path"/>
        <param description="previous package instance in case of an update" type="object" variable="$prevPackage">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="type" byreference="false" type="string"/>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="install" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Installs specific package into specific folder."/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="download path" type="string" variable="$path"/>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
    </method>
    <method name="update" start="74" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Updates specific package in specific folder from initial to target version."/>
        <param description="initial package" type="object" variable="$initial">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="updated package" type="object" variable="$target">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="download path" type="string" variable="$path"/>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="initial" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="target" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
    </method>
    <method name="remove" start="83" end="83" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Removes specific package from specific folder."/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="download path" type="string" variable="$path"/>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
    </method>
    <method name="cleanup" start="98" end="98" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Do anything to cleanup changes applied in the prepare or install/update/uninstall steps">Note that cleanup will be called for all packages, either after install/update/uninstall is complete,
or if any package failed any operation. This is to give all installers a change to cleanup things
they did previously, so you need to keep track of changes applied in the installer/downloader themselves.</description>
        <param description="one of install/update/uninstall" type="string" variable="$type"/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="download path" type="string" variable="$path"/>
        <param description="previous package instance in case of an update" type="object" variable="$prevPackage">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="React\Promise\PromiseInterface" namespace="React\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="type" byreference="false" type="string"/>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
      <parameter name="prevPackage" byreference="false" type="object" default="NULL">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
  </interface>
  <interface full="Composer\Downloader\ChangeReportInterface" namespace="Composer\Downloader" name="ChangeReportInterface">
    <method name="getLocalChanges" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks for changes to the local copy"/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <param description="package directory" type="string" variable="$path"/>
        <return description="changes or null" type="object">
          <type full="Composer\Downloader\string|null" namespace="Composer\Downloader" name="string|null"/>
        </return>
      </docblock>
      <return type="string" nullable="true"/>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <parameter name="path" byreference="false" type="string"/>
    </method>
  </interface>
</class>
