<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Console\Helper\ProcessHelper" namespace="Symfony\Component\Console\Helper" name="ProcessHelper" abstract="false" final="false" start="26" end="144">
  <file path="//var/www/html/vendor/symfony/console/Helper" file="ProcessHelper.php" realpath="/var/www/html/vendor/symfony/console/Helper/ProcessHelper.php" size="4981" time="2022-04-12T16:02:29+00:00" unixtime="1649779349" sha1="c4d69913211ff226b20bbbbba07d5f839736341f" relative="ar/www/html/vendor/symfony/console/Helper/ProcessHelper.php"/>
  <docblock>
    <description compact="The ProcessHelper class provides helpers to run external processes."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <final/>
  </docblock>
  <extends full="Symfony\Component\Console\Helper\Helper" namespace="Symfony\Component\Console\Helper" name="Helper"/>
  <method name="run" start="35" end="85" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs an external process."/>
      <param description="An instance of Process or an array of the command and arguments" type="object" variable="$cmd">
        <type full="Symfony\Component\Console\Helper\array|Process" namespace="Symfony\Component\Console\Helper" name="array|Process"/>
      </param>
      <param description="A PHP callback to run whenever there is some" type="object" variable="$callback">output available on STDOUT or STDERR<type full="Symfony\Component\Console\Helper\callable|null" namespace="Symfony\Component\Console\Helper" name="callable|null"/></param>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
    </return>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="cmd" byreference="false" type="{unknown}"/>
    <parameter name="error" byreference="false" type="string" default="NULL"/>
    <parameter name="callback" byreference="false" type="callable" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="OutputInterface::VERBOSITY_VERY_VERBOSE"/>
  </method>
  <method name="mustRun" start="101" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs the process.">This is identical to run() except that an exception is thrown if the process
exits with a non-zero exit code.</description>
      <param description="An instance of Process or a command to run" type="object" variable="$cmd">
        <type full="Symfony\Component\Console\Helper\array|Process" namespace="Symfony\Component\Console\Helper" name="array|Process"/>
      </param>
      <param description="A PHP callback to run whenever there is some" type="object" variable="$callback">output available on STDOUT or STDERR<type full="Symfony\Component\Console\Helper\callable|null" namespace="Symfony\Component\Console\Helper" name="callable|null"/></param>
      <throws type="object">
        <type full="Symfony\Component\Process\Exception\ProcessFailedException" namespace="Symfony\Component\Process\Exception" name="ProcessFailedException"/>
      </throws>
      <see value="run()"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
    </return>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="cmd" byreference="false" type="{unknown}"/>
    <parameter name="error" byreference="false" type="string" default="NULL"/>
    <parameter name="callback" byreference="false" type="callable" default="NULL"/>
  </method>
  <method name="wrapCallback" start="115" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wraps a Process callback to add debugging output."/>
    </docblock>
    <return type="callable" nullable="false"/>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="process" byreference="false" type="object">
      <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
    </parameter>
    <parameter name="callback" byreference="false" type="callable" default="NULL"/>
  </method>
  <method name="escapeString" start="132" end="135" abstract="false" final="false" static="false" visibility="private">
    <return type="string" nullable="false"/>
    <parameter name="str" byreference="false" type="string"/>
  </method>
  <method name="getName" start="140" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <parent full="Symfony\Component\Console\Helper\Helper" namespace="Symfony\Component\Console\Helper" name="Helper">
    <implements full="Symfony\Component\Console\Helper\HelperInterface" namespace="Symfony\Component\Console\Helper" name="HelperInterface"/>
    <member name="helperSet" default="NULL" visibility="protected" static="false" line="24"/>
    <method name="setHelperSet" start="29" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <parameter name="helperSet" byreference="false" type="object" default="NULL">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </parameter>
    </method>
    <method name="getHelperSet" start="37" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="strlen" start="49" end="54" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns the length of a string, using mb_strwidth if it is available."/>
        <deprecated value="since Symfony 5.3"/>
        <return type="int"/>
      </docblock>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
    </method>
    <method name="width" start="60" end="73" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns the width of a string, using mb_strwidth if it is available.">The width is how many characters positions the string will use.</description>
      </docblock>
      <return type="int" nullable="false"/>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
    </method>
    <method name="length" start="79" end="92" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns the length of a string, using mb_strlen if it is available.">The length is related to how many bytes the string will use.</description>
      </docblock>
      <return type="int" nullable="false"/>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
    </method>
    <method name="substr" start="99" end="108" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns the subset of a string, using mb_substr if it is available."/>
        <return type="string"/>
      </docblock>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
      <parameter name="from" byreference="false" type="int"/>
      <parameter name="length" byreference="false" type="int" default="NULL"/>
    </method>
    <method name="formatTime" start="110" end="137" abstract="false" final="false" static="true" visibility="public">
      <parameter name="secs" byreference="false" type="{unknown}"/>
    </method>
    <method name="formatMemory" start="139" end="154" abstract="false" final="false" static="true" visibility="public">
      <parameter name="memory" byreference="false" type="int"/>
    </method>
    <method name="strlenWithoutDecoration" start="159" end="164" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <deprecated value="since Symfony 5.3"/>
      </docblock>
      <parameter name="formatter" byreference="false" type="object">
        <type full="Symfony\Component\Console\Formatter\OutputFormatterInterface" namespace="Symfony\Component\Console\Formatter" name="OutputFormatterInterface"/>
      </parameter>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
    </method>
    <method name="removeDecoration" start="166" end="177" abstract="false" final="false" static="true" visibility="public">
      <parameter name="formatter" byreference="false" type="object">
        <type full="Symfony\Component\Console\Formatter\OutputFormatterInterface" namespace="Symfony\Component\Console\Formatter" name="OutputFormatterInterface"/>
      </parameter>
      <parameter name="string" byreference="false" nullable="true" type="string"/>
      <inline>
        <comment value="remove &lt;...&gt; formatting" line="170"/>
        <comment value="remove already formatted characters" line="172"/>
      </inline>
    </method>
  </parent>
  <interface full="Symfony\Component\Console\Helper\HelperInterface" namespace="Symfony\Component\Console\Helper" name="HelperInterface">
    <method name="setHelperSet" start="24" end="24" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the helper set associated with this helper."/>
      </docblock>
      <parameter name="helperSet" byreference="false" type="object" default="NULL">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </parameter>
    </method>
    <method name="getHelperSet" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Gets the helper set associated with this helper."/>
        <return type="object">
          <type full="Symfony\Component\Console\Helper\HelperSet|null" namespace="Symfony\Component\Console\Helper" name="HelperSet|null"/>
        </return>
      </docblock>
    </method>
    <method name="getName" start="38" end="38" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the canonical name of this helper."/>
        <return type="string"/>
      </docblock>
    </method>
  </interface>
</class>
