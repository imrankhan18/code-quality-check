<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="MongoDB\Collection" namespace="MongoDB" name="Collection" abstract="false" final="false" start="69" end="1155">
  <file path="//var/www/html/vendor/mongodb/mongodb/src" file="Collection.php" realpath="/var/www/html/vendor/mongodb/mongodb/src/Collection.php" size="45558" time="2022-03-23T20:18:39+00:00" unixtime="1648066719" sha1="f9a9426e798d397118a61a6cca86e3a02385fdea" relative="ar/www/html/vendor/mongodb/mongodb/src/Collection.php"/>
  <member name="defaultTypeMap" default="" type="array" visibility="private" static="true" line="72">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <member name="wireVersionForReadConcernWithWriteStage" default="8" type="integer" visibility="private" static="true" line="79">
    <docblock>
      <var type="integer"/>
    </docblock>
  </member>
  <member name="collectionName" visibility="private" static="false" line="82">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="databaseName" visibility="private" static="false" line="85">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="manager" visibility="private" static="false" line="88">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </var>
    </docblock>
  </member>
  <member name="readConcern" visibility="private" static="false" line="91">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\ReadConcern" namespace="MongoDB\Driver" name="ReadConcern"/>
      </var>
    </docblock>
  </member>
  <member name="readPreference" visibility="private" static="false" line="94">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\ReadPreference" namespace="MongoDB\Driver" name="ReadPreference"/>
      </var>
    </docblock>
  </member>
  <member name="typeMap" visibility="private" static="false" line="97">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <member name="writeConcern" visibility="private" static="false" line="100">
    <docblock>
      <var type="object">
        <type full="MongoDB\Driver\WriteConcern" namespace="MongoDB\Driver" name="WriteConcern"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="129" end="162" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs new Collection instance.">This class provides methods for collection-specific operations, such as
CRUD (i.e. create, read, update, and delete) and index management.

Supported options:

 * readConcern (MongoDB\Driver\ReadConcern): The default read concern to
   use for collection operations. Defaults to the Manager's read concern.

 * readPreference (MongoDB\Driver\ReadPreference): The default read
   preference to use for collection operations. Defaults to the Manager's
   read preference.

 * typeMap (array): Default type map for cursors and BSON documents.

 * writeConcern (MongoDB\Driver\WriteConcern): The default write concern
   to use for collection operations. Defaults to the Manager's write
   concern.</description>
      <param description="Manager instance from the driver" type="object" variable="$manager">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </param>
      <param description="Database name" type="string" variable="$databaseName"/>
      <param description="Collection name" type="string" variable="$collectionName"/>
      <param description="Collection options" type="array" variable="$options"/>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="manager" byreference="false" type="object">
      <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
    </parameter>
    <parameter name="databaseName" byreference="false" type="{unknown}"/>
    <parameter name="collectionName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </constructor>
  <method name="__debugInfo" start="170" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return internal properties for debugging purposes."/>
      <see value="http://php.net/manual/en/language.oop5.magic.php#language.oop5.magic.debuginfo"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="__toString" start="189" end="192" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the collection namespace (e.g. &quot;db.collection&quot;)."/>
      <see value="https://docs.mongodb.org/manual/faq/developers/#faq-dev-namespace"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="aggregate" start="211" end="247" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Executes an aggregation framework pipeline on the collection.">Note: this method's return value depends on the MongoDB server version
and the "useCursor" option. If "useCursor" is true, a Cursor will be
returned; otherwise, an ArrayIterator is returned, which wraps the
"result" array from the command response document.</description>
      <see value="Aggregate::__construct() for supported options"/>
      <param description="List of pipeline operations" type="array" variable="$pipeline"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="pipeline" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="MongoDB 4.2 and later supports a read concern when an $out stage is" line="223"/>
      <comment xmlns="http://xml.phpdox.net/src" value="being used, but earlier versions do not." line="224"/>
      <comment xmlns="http://xml.phpdox.net/src" value="A read concern is also not compatible with transactions." line="225"/>
    </inline>
  </method>
  <method name="bulkWrite" start="260" end="270" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Executes multiple write operations."/>
      <see value="BulkWrite::__construct() for supported options"/>
      <param description="List of write operations" type="array" variable="$operations" of="object">
        <type full="MongoDB\array" namespace="MongoDB" name="array"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\BulkWriteResult" namespace="MongoDB" name="BulkWriteResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="operations" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="count" start="286" end="301" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the number of documents matching the filter."/>
      <see value="Count::__construct() for supported options"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="integer"/>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
      <deprecated value="1.4"/>
    </docblock>
    <parameter name="filter" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="countDocuments" start="315" end="330" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the number of documents matching the filter."/>
      <see value="CountDocuments::__construct() for supported options"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="integer"/>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="createIndex" start="345" end="352" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a single index for the collection."/>
      <see value="Collection::createIndexes()"/>
      <see value="CreateIndexes::__construct() for supported command options"/>
      <param description="Document containing fields mapped to values," type="object" variable="$key">which denote order or an index type<type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/></param>
      <param description="Index and command options" type="array" variable="$options"/>
      <return description="The name of the created index" type="string"/>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="createIndexes" start="381" end="392" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create one or more indexes for the collection.">Each element in the $indexes array must have a "key" document, which
contains fields mapped to an order or type. Other options may follow.
For example:

    $indexes = [
        // Create a unique index on the "username" field
        [ 'key' =&gt; [ 'username' =&gt; 1 ], 'unique' =&gt; true ],
        // Create a 2dsphere index on the "loc" field with a custom name
        [ 'key' =&gt; [ 'loc' =&gt; '2dsphere' ], 'name' =&gt; 'geo' ],
    ];

If the "name" option is unspecified, a name will be generated from the
"key" document.</description>
      <see value="http://docs.mongodb.org/manual/reference/command/createIndexes/"/>
      <see value="http://docs.mongodb.org/manual/reference/method/db.collection.createIndex/"/>
      <see value="CreateIndexes::__construct() for supported command options"/>
      <param description="List of index specifications" type="array" variable="$indexes" of="object">
        <type full="MongoDB\array" namespace="MongoDB" name="array"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return description="The names of the created indexes" type="array" of="object">
        <type full="MongoDB\string" namespace="MongoDB" name="string"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="indexes" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="deleteMany" start="406" end="416" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Deletes all documents matching the filter."/>
      <see value="DeleteMany::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/delete/"/>
      <param description="Query by which to delete documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\DeleteResult" namespace="MongoDB" name="DeleteResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="deleteOne" start="430" end="440" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Deletes at most one document matching the filter."/>
      <see value="DeleteOne::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/delete/"/>
      <param description="Query by which to delete documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\DeleteResult" namespace="MongoDB" name="DeleteResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="distinct" start="455" end="474" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds the distinct values for a specified field across the collection."/>
      <see value="Distinct::__construct() for supported options"/>
      <param description="Field for which to return distinct values" type="string" variable="$fieldName"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="array" of="object">
        <type full="MongoDB\mixed" namespace="MongoDB" name="mixed"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="fieldName" byreference="false" type="{unknown}"/>
    <parameter name="filter" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="drop" start="486" end="501" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Drop this collection."/>
      <see value="DropCollection::__construct() for supported options"/>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="dropIndex" start="514" end="535" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Drop a single index in the collection."/>
      <see value="DropIndexes::__construct() for supported options"/>
      <param description="Index name or model object" type="object" variable="$indexName">
        <type full="MongoDB\string|IndexInfo" namespace="MongoDB" name="string|IndexInfo"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="indexName" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="dropIndexes" start="547" end="562" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Drop all indexes in the collection."/>
      <see value="DropIndexes::__construct() for supported options"/>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="estimatedDocumentCount" start="575" end="590" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets an estimated number of documents in the collection using the collection metadata."/>
      <see value="EstimatedDocumentCount::__construct() for supported options"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="integer"/>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="explain" start="604" end="619" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Explains explainable commands."/>
      <see value="Explain::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/explain/"/>
      <param description="Command on which to run explain" type="object" variable="$explainable">
        <type full="MongoDB\Operation\Explainable" namespace="MongoDB\Operation" name="Explainable"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if explainable or options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="explainable" byreference="false" type="object">
      <type full="MongoDB\Operation\Explainable" namespace="MongoDB\Operation" name="Explainable"/>
    </parameter>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="find" start="633" end="652" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds documents matching the query."/>
      <see value="Find::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/core/read-operations-introduction/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Driver\Cursor" namespace="MongoDB\Driver" name="Cursor"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="findOne" start="666" end="685" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds a single document matching the query."/>
      <see value="FindOne::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/core/read-operations-introduction/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object|null" namespace="MongoDB" name="array|object|null"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="findOneAndDelete" start="702" end="717" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds a single document and deletes it, returning the original.">The document to return may be null if no document matched the filter.</description>
      <see value="FindOneAndDelete::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/findAndModify/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object|null" namespace="MongoDB" name="array|object|null"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="findOneAndReplace" start="739" end="754" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds a single document and replaces it, returning either the original or the replaced document.">The document to return may be null if no document matched the filter. By
default, the original document is returned. Specify
FindOneAndReplace::RETURN_DOCUMENT_AFTER for the "returnDocument" option
to return the updated document.</description>
      <see value="FindOneAndReplace::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/findAndModify/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Replacement document" type="object" variable="$replacement">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object|null" namespace="MongoDB" name="array|object|null"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="replacement" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="findOneAndUpdate" start="776" end="791" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds a single document and updates it, returning either the original or the updated document.">The document to return may be null if no document matched the filter. By
default, the original document is returned. Specify
FindOneAndUpdate::RETURN_DOCUMENT_AFTER for the "returnDocument" option
to return the updated document.</description>
      <see value="FindOneAndReplace::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/findAndModify/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Update to apply to the matched document" type="object" variable="$update">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\array|object|null" namespace="MongoDB" name="array|object|null"/>
      </return>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="update" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="getCollectionName" start="798" end="801" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the collection name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getDatabaseName" start="808" end="811" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the database name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getManager" start="818" end="821" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the Manager."/>
      <return type="object">
        <type full="MongoDB\Driver\Manager" namespace="MongoDB\Driver" name="Manager"/>
      </return>
    </docblock>
  </method>
  <method name="getNamespace" start="829" end="832" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the collection namespace."/>
      <see value="https://docs.mongodb.org/manual/reference/glossary/#term-namespace"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getReadConcern" start="840" end="843" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the read concern for this collection."/>
      <see value="http://php.net/manual/en/mongodb-driver-readconcern.isdefault.php"/>
      <return type="object">
        <type full="MongoDB\Driver\ReadConcern" namespace="MongoDB\Driver" name="ReadConcern"/>
      </return>
    </docblock>
  </method>
  <method name="getReadPreference" start="850" end="853" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the read preference for this collection."/>
      <return type="object">
        <type full="MongoDB\Driver\ReadPreference" namespace="MongoDB\Driver" name="ReadPreference"/>
      </return>
    </docblock>
  </method>
  <method name="getTypeMap" start="860" end="863" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the type map for this collection."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getWriteConcern" start="871" end="874" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the write concern for this collection."/>
      <see value="http://php.net/manual/en/mongodb-driver-writeconcern.isdefault.php"/>
      <return type="object">
        <type full="MongoDB\Driver\WriteConcern" namespace="MongoDB\Driver" name="WriteConcern"/>
      </return>
    </docblock>
  </method>
  <method name="insertMany" start="887" end="897" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Inserts multiple documents."/>
      <see value="InsertMany::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/insert/"/>
      <param description="The documents to insert" type="array" variable="$documents" of="object">
        <type full="MongoDB\array[]|object" namespace="MongoDB" name="array[]|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\InsertManyResult" namespace="MongoDB" name="InsertManyResult"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="documents" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="insertOne" start="910" end="920" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Inserts one document."/>
      <see value="InsertOne::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/insert/"/>
      <param description="The document to insert" type="object" variable="$document">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\InsertOneResult" namespace="MongoDB" name="InsertOneResult"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="document" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="listIndexes" start="931" end="937" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns information for all indexes for the collection."/>
      <see value="ListIndexes::__construct() for supported options"/>
      <param type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Model\IndexInfoIterator" namespace="MongoDB\Model" name="IndexInfoIterator"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="mapReduce" start="954" end="989" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Executes a map-reduce aggregation on the collection."/>
      <see value="MapReduce::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/mapReduce/"/>
      <param description="Map function" type="object" variable="$map">
        <type full="MongoDB\BSON\JavascriptInterface" namespace="MongoDB\BSON" name="JavascriptInterface"/>
      </param>
      <param description="Reduce function" type="object" variable="$reduce">
        <type full="MongoDB\BSON\JavascriptInterface" namespace="MongoDB\BSON" name="JavascriptInterface"/>
      </param>
      <param description="Output specification" type="object" variable="$out">
        <type full="MongoDB\string|array|object" namespace="MongoDB" name="string|array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\MapReduceResult" namespace="MongoDB" name="MapReduceResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
      <throws description="if the command response was malformed" type="object">
        <type full="MongoDB\Exception\UnexpectedValueException" namespace="MongoDB\Exception" name="UnexpectedValueException"/>
      </throws>
    </docblock>
    <parameter name="map" byreference="false" type="object">
      <type full="MongoDB\BSON\JavascriptInterface" namespace="MongoDB\BSON" name="JavascriptInterface"/>
    </parameter>
    <parameter name="reduce" byreference="false" type="object">
      <type full="MongoDB\BSON\JavascriptInterface" namespace="MongoDB\BSON" name="JavascriptInterface"/>
    </parameter>
    <parameter name="out" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Check if the out option is inline because we will want to coerce a primary read preference if not" line="962"/>
      <comment value="A &quot;majority&quot; read concern is not compatible with inline output, so" line="969"/>
      <comment xmlns="http://xml.phpdox.net/src" value="avoid providing the Collection's read concern if it would conflict." line="970"/>
      <comment xmlns="http://xml.phpdox.net/src" value="A read concern is also not compatible with transactions." line="971"/>
    </inline>
  </method>
  <method name="rename" start="1003" end="1022" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Renames the collection."/>
      <see value="RenameCollection::__construct() for supported options"/>
      <param description="New name of the collection" type="string" variable="$toCollectionName"/>
      <param description="New database name of the collection. Defaults to the original database." type="object" variable="$toDatabaseName">
        <type full="MongoDB\?string" namespace="MongoDB" name="?string"/>
      </param>
      <param description="Additional options" type="array" variable="$options"/>
      <return description="Command result document" type="object">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="toCollectionName" byreference="false" type="string"/>
    <parameter name="toDatabaseName" byreference="false" nullable="true" type="string" default="NULL"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="replaceOne" start="1037" end="1047" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Replaces at most one document matching the filter."/>
      <see value="ReplaceOne::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/update/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Replacement document" type="object" variable="$replacement">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\UpdateResult" namespace="MongoDB" name="UpdateResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="replacement" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="updateMany" start="1062" end="1072" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Updates all documents matching the filter."/>
      <see value="UpdateMany::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/update/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Update to apply to the matched documents" type="object" variable="$update">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\UpdateResult" namespace="MongoDB" name="UpdateResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="update" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="updateOne" start="1087" end="1097" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Updates at most one document matching the filter."/>
      <see value="UpdateOne::__construct() for supported options"/>
      <see value="http://docs.mongodb.org/manual/reference/command/update/"/>
      <param description="Query by which to filter documents" type="object" variable="$filter">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Update to apply to the matched document" type="object" variable="$update">
        <type full="MongoDB\array|object" namespace="MongoDB" name="array|object"/>
      </param>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\UpdateResult" namespace="MongoDB" name="UpdateResult"/>
      </return>
      <throws description="if options are not supported by the selected server" type="object">
        <type full="MongoDB\Exception\UnsupportedException" namespace="MongoDB\Exception" name="UnsupportedException"/>
      </throws>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
      <throws description="for other driver errors (e.g. connection errors)" type="object">
        <type full="MongoDB\Driver\Exception\RuntimeException" namespace="MongoDB\Driver\Exception" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="update" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="watch" start="1108" end="1134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a change stream for watching changes to the collection."/>
      <see value="Watch::__construct() for supported options"/>
      <param description="List of pipeline operations" type="array" variable="$pipeline"/>
      <param description="Command options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\ChangeStream" namespace="MongoDB" name="ChangeStream"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="pipeline" byreference="false" type="array" default=""/>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Although change streams require a newer version of the server than" line="1116"/>
      <comment xmlns="http://xml.phpdox.net/src" value="read concerns, perform the usual wire version check before inheriting" line="1117"/>
      <comment xmlns="http://xml.phpdox.net/src" value="the collection's read concern. In the event that the server is too" line="1118"/>
      <comment xmlns="http://xml.phpdox.net/src" value="old, this makes it more likely that users will encounter an error" line="1119"/>
      <comment xmlns="http://xml.phpdox.net/src" value="related to change streams being unsupported instead of an" line="1120"/>
      <comment xmlns="http://xml.phpdox.net/src" value="UnsupportedException regarding use of the &quot;readConcern&quot; option from" line="1121"/>
      <comment xmlns="http://xml.phpdox.net/src" value="* the Aggregate operation class." line="1122"/>
    </inline>
  </method>
  <method name="withOptions" start="1144" end="1154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a clone of this collection with different options."/>
      <see value="Collection::__construct() for supported options"/>
      <param description="Collection constructor options" type="array" variable="$options"/>
      <return type="object">
        <type full="MongoDB\Collection" namespace="MongoDB" name="Collection"/>
      </return>
      <throws description="for parameter/option parsing errors" type="object">
        <type full="MongoDB\Exception\InvalidArgumentException" namespace="MongoDB\Exception" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
</class>
