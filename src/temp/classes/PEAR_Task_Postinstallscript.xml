<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PEAR_Task_Postinstallscript" namespace="" name="PEAR_Task_Postinstallscript" abstract="false" final="false" start="34" end="350">
  <file path="//usr/local/lib/php/PEAR/Task" file="Postinstallscript.php" realpath="/usr/local/lib/php/PEAR/Task/Postinstallscript.php" size="14712" time="2020-02-26T12:11:53+00:00" unixtime="1582719113" sha1="b80c23ecbea0a7221c5e12347be228fbe9cd076d" relative="sr/local/lib/php/PEAR/Task/Postinstallscript.php"/>
  <docblock>
    <description compact="Implements the postinstallscript file task.">Note that post-install scripts are handled separately from installation, by the
"pear run-scripts" command</description>
    <category value="pear"/>
    <package value="PEAR"/>
    <author value="Greg Beaver &lt;cellog@php.net&gt;"/>
    <copyright value="1997-2009 The Authors"/>
    <license name="http://opensource.org/licenses/bsd-license.php New BSD License"/>
    <version value="Release: 1.10.10"/>
    <link value="http://pear.php.net/package/PEAR"/>
    <since value="Class available since Release 1.4.0a1"/>
  </docblock>
  <extends full="PEAR_Task_Common" namespace="" name="PEAR_Task_Common"/>
  <member name="type" default="'script'" type="string" visibility="public" static="false" line="36"/>
  <member name="_class" visibility="public" static="false" line="37"/>
  <member name="_params" visibility="public" static="false" line="38"/>
  <member name="_obj" visibility="public" static="false" line="39"/>
  <member name="_pkg" visibility="public" static="false" line="44">
    <docblock>
      <description/>
      <var type="object">
        <type full="PEAR_PackageFile_v2" namespace="" name="PEAR_PackageFile_v2"/>
      </var>
    </docblock>
  </member>
  <member name="_contents" visibility="public" static="false" line="45"/>
  <member name="phase" default="" type="{unknown}" constant="PEAR_TASK_INSTALL" visibility="public" static="false" line="46"/>
  <method name="validateXml" start="59" end="238" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Validate the raw xml at parsing-time.">This also attempts to validate the script to make sure it meets the criteria
for a post-install script</description>
      <param type="object">
        <type full="PEAR_PackageFile_v2" namespace="" name="PEAR_PackageFile_v2"/>
      </param>
      <param description="The XML contents of the &lt;postinstallscript&gt; tag" type="array"/>
      <param type="object">
        <type full="PEAR_Config" namespace="" name="PEAR_Config"/>
      </param>
      <param description="the entire parsed &lt;file&gt; tag" type="array"/>
    </docblock>
    <parameter name="pkg" byreference="false" type="{unknown}"/>
    <parameter name="xml" byreference="false" type="{unknown}"/>
    <parameter name="config" byreference="false" type="{unknown}"/>
    <parameter name="fileXml" byreference="false" type="{unknown}"/>
  </method>
  <method name="init" start="248" end="255" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initialize a task instance with the parameters"/>
      <param description="raw, parsed xml" type="array" variable="$xml"/>
      <param description="attributes from the &lt;file&gt; tag containing" type="array" variable="$fileattribs">this task</param>
      <param description="last installed version of this package," type="object" variable="$lastversion">if any (useful for upgrades)<type full="string|null" namespace="" name="string|null"/></param>
    </docblock>
    <parameter name="xml" byreference="false" type="{unknown}"/>
    <parameter name="fileattribs" byreference="false" type="{unknown}"/>
    <parameter name="lastversion" byreference="false" type="{unknown}"/>
  </method>
  <method name="_stripNamespace" start="262" end="287" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Strip the tasks: namespace from internal params"/>
      <access value="private"/>
    </docblock>
    <parameter name="params" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="startSession" start="300" end="337" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Unlike other tasks, the installed file name is passed in instead of the file contents, because this task is handled post-installation"/>
      <param description="PEAR_PackageFile_v1|PEAR_PackageFile_v2" type="mixed" variable="$pkg"/>
      <param description="file name" type="string" variable="$contents"/>
      <param description="the eventual final file location (informational only)" type="string" variable="$dest"/>
      <return description="false to skip this file, PEAR_Error to fail" type="object">(use $this-&gt;throwError)<type full="bool|PEAR_Error" namespace="" name="bool|PEAR_Error"/></return>
    </docblock>
    <parameter name="pkg" byreference="false" type="{unknown}"/>
    <parameter name="contents" byreference="false" type="{unknown}"/>
    <parameter name="dest" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="remove the tasks: namespace if present" line="305"/>
    </inline>
  </method>
  <method name="run" start="347" end="349" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="No longer used"/>
      <see value="PEAR_PackageFile_v2::runPostinstallScripts()"/>
      <param description="an array of tasks" type="array"/>
      <param description="install or upgrade" type="string"/>
      <access value="protected"/>
    </docblock>
    <parameter name="tasks" byreference="false" type="{unknown}"/>
  </method>
  <extenders>
    <extender full="PEAR_Task_Postinstallscript_rw" namespace="" name="PEAR_Task_Postinstallscript_rw"/>
  </extenders>
  <parent full="PEAR_Task_Common" namespace="" name="PEAR_Task_Common">
    <member name="type" default="'simple'" type="string" visibility="protected" static="false" line="68">
      <docblock>
        <description compact="Valid types for this version are 'simple' and 'multiple'">- simple tasks operate on the contents of a file and write out changes to disk
- multiple tasks operate on the contents of many files and write out the
  changes directly to disk

Child task classes must override this property.</description>
        <access value="protected"/>
      </docblock>
    </member>
    <member name="phase" default="" type="{unknown}" constant="PEAR_TASK_INSTALL" visibility="public" static="false" line="72">
      <docblock>
        <description compact="Determines which install phase this task is executed under"/>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="76">
      <docblock>
        <description/>
        <access value="protected"/>
      </docblock>
    </member>
    <member name="registry" visibility="protected" static="false" line="80">
      <docblock>
        <description/>
        <access value="protected"/>
      </docblock>
    </member>
    <member name="logger" visibility="public" static="false" line="84">
      <docblock>
        <description/>
        <access value="protected"/>
      </docblock>
    </member>
    <member name="installphase" visibility="protected" static="false" line="88">
      <docblock>
        <description/>
        <access value="protected"/>
      </docblock>
    </member>
    <constructor name="__construct" start="93" end="102" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param type="object">
          <type full="PEAR_Config" namespace="" name="PEAR_Config"/>
        </param>
        <param type="object">
          <type full="PEAR_Common" namespace="" name="PEAR_Common"/>
        </param>
      </docblock>
      <parameter name="config" byreference="true" type="{unknown}"/>
      <parameter name="logger" byreference="true" type="{unknown}"/>
      <parameter name="phase" byreference="false" type="{unknown}"/>
    </constructor>
    <method name="validateXml" start="121" end="123" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Validate the basic contents of a task tag."/>
        <param type="object">
          <type full="PEAR_PackageFile_v2" namespace="" name="PEAR_PackageFile_v2"/>
        </param>
        <param type="array"/>
        <param type="object">
          <type full="PEAR_Config" namespace="" name="PEAR_Config"/>
        </param>
        <param description="the entire parsed &lt;file&gt; tag" type="array"/>
        <return description="On error, return an array in format:" type="object">array(PEAR_TASK_ERROR_???[, param1][, param2][, ...])

For PEAR_TASK_ERROR_MISSING_ATTRIB, pass the attribute name in
For PEAR_TASK_ERROR_WRONG_ATTRIB_VALUE, pass the attribute name and
an array of legal values in<type full="true|array" namespace="" name="true|array"/></return>
        <abstract/>
      </docblock>
      <parameter name="pkg" byreference="false" type="{unknown}"/>
      <parameter name="xml" byreference="false" type="{unknown}"/>
      <parameter name="config" byreference="false" type="{unknown}"/>
      <parameter name="fileXml" byreference="false" type="{unknown}"/>
    </method>
    <method name="init" start="133" end="135" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Initialize a task instance with the parameters"/>
        <param description="raw parsed xml" type="array"/>
        <param description="attributes from the &lt;file&gt; tag containing this task" type="array"/>
        <param description="last installed version of this package" type="object">
          <type full="string|null" namespace="" name="string|null"/>
        </param>
        <abstract/>
      </docblock>
      <parameter name="xml" byreference="false" type="{unknown}"/>
      <parameter name="fileAttributes" byreference="false" type="{unknown}"/>
      <parameter name="lastVersion" byreference="false" type="{unknown}"/>
    </method>
    <method name="startSession" start="152" end="154" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Begin a task processing session.  All multiple tasks will be processed after each file has been successfully installed, all simple tasks should perform their task here and return any errors using the custom throwError() method to allow forward compatibility">This method MUST NOT write out any changes to disk</description>
        <param type="object">
          <type full="PEAR_PackageFile_v2" namespace="" name="PEAR_PackageFile_v2"/>
        </param>
        <param description="file contents" type="string"/>
        <param description="the eventual final file location (informational only)" type="string"/>
        <return description="false to skip this file, PEAR_Error to fail" type="object">(use $this-&gt;throwError), otherwise return the new contents<type full="string|false|PEAR_Error" namespace="" name="string|false|PEAR_Error"/></return>
        <abstract/>
      </docblock>
      <parameter name="pkg" byreference="false" type="{unknown}"/>
      <parameter name="contents" byreference="false" type="{unknown}"/>
      <parameter name="dest" byreference="false" type="{unknown}"/>
    </method>
    <method name="run" start="163" end="165" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="This method is used to process each of the tasks for a particular multiple class type.  Simple tasks need not implement this method."/>
        <param description="an array of tasks" type="array"/>
        <access value="protected"/>
      </docblock>
      <parameter name="tasks" byreference="false" type="{unknown}"/>
    </method>
    <method name="hasPostinstallTasks" start="170" end="173" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <final/>
      </docblock>
    </method>
    <method name="runPostinstallTasks" start="178" end="190" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <final/>
      </docblock>
    </method>
    <method name="isScript" start="196" end="199" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Determines whether a role is a script"/>
        <return type="object">
          <type full="bool" namespace="" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="throwError" start="201" end="206" abstract="false" final="false" static="false" visibility="public">
      <parameter name="msg" byreference="false" type="{unknown}"/>
      <parameter name="code" byreference="false" type="integer" default="1"/>
    </method>
  </parent>
</class>
