<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="GuzzleHttp\Client" namespace="GuzzleHttp" name="Client" abstract="false" final="false" start="17" end="477">
  <file path="//var/www/html/vendor/guzzlehttp/guzzle/src" file="Client.php" realpath="/var/www/html/vendor/guzzlehttp/guzzle/src/Client.php" size="18370" time="2022-03-20T14:16:28+00:00" unixtime="1647785788" sha1="e2a5669b7e175ae12a585299fb3670ade718284a" relative="ar/www/html/vendor/guzzlehttp/guzzle/src/Client.php"/>
  <docblock>
    <description/>
    <final/>
  </docblock>
  <implements full="GuzzleHttp\ClientInterface" namespace="GuzzleHttp" name="ClientInterface"/>
  <implements full="Psr\Http\Client\ClientInterface" namespace="Psr\Http\Client" name="ClientInterface"/>
  <uses full="GuzzleHttp\ClientTrait" namespace="GuzzleHttp" name="ClientTrait" start="19" end="19"/>
  <member name="config" visibility="private" static="false" line="24">
    <docblock>
      <description/>
      <var description="Default request options" type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="57" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clients accept an array of constructor parameters.">Here's an example of creating a client using a base_uri and an array of
default request options to apply to each request:

    $client = new Client([
        'base_uri'        =&gt; 'http://www.foo.com/1.0/',
        'timeout'         =&gt; 0,
        'allow_redirects' =&gt; false,
        'proxy'           =&gt; '192.168.16.1:10'
    ]);

Client configuration settings include the following options:

- handler: (callable) Function that transfers HTTP requests over the
  wire. The function is called with a Psr7\Http\Message\RequestInterface
  and array of transfer options, and must return a
  GuzzleHttp\Promise\PromiseInterface that is fulfilled with a
  Psr7\Http\Message\ResponseInterface on success.
  If no handler is provided, a default handler will be created
  that enables all of the request options below by attaching all of the
  default middleware to the handler.
- base_uri: (string|UriInterface) Base URI of the client that is merged
  into relative URIs. Can be a string or instance of UriInterface.
- **: any request option</description>
      <param description="Client configuration settings." type="array" variable="$config"/>
      <see value="\GuzzleHttp\RequestOptions for a list of available request options."/>
    </docblock>
    <parameter name="config" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Convert the base_uri to a UriInterface" line="65"/>
    </inline>
  </constructor>
  <method name="__call" start="81" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$args"/>
      <return type="object">
        <type full="GuzzleHttp\PromiseInterface|ResponseInterface" namespace="GuzzleHttp" name="PromiseInterface|ResponseInterface"/>
      </return>
      <deprecated value="Client::__call will be removed in guzzlehttp/guzzle:8.0."/>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="args" byreference="false" type="{unknown}"/>
  </method>
  <method name="sendAsync" start="101" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asynchronously send an HTTP request."/>
      <param description="Request options to apply to the given" type="array" variable="$options">request and to the transfer. See \GuzzleHttp\RequestOptions.</param>
    </docblock>
    <return type="object" nullable="false">
      <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Merge the base URI into the request URI if needed." line="103"/>
    </inline>
  </method>
  <method name="send" start="120" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Send an HTTP request."/>
      <param description="Request options to apply to the given" type="array" variable="$options">request and to the transfer. See \GuzzleHttp\RequestOptions.</param>
      <throws type="object">
        <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
      </throws>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="sendRequest" start="131" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The HttpClient PSR (PSR-18) specify this method."/>
      <inheritdoc/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
  </method>
  <method name="requestAsync" start="152" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create and send an asynchronous HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
      <param description="HTTP method" type="string" variable="$method"/>
      <param description="URI object or string." type="object" variable="$uri">
        <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
      </param>
      <param description="Request options to apply. See \GuzzleHttp\RequestOptions." type="array" variable="$options"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="method" byreference="false" type="string"/>
    <parameter name="uri" byreference="false" type="string" default="''"/>
    <parameter name="options" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Remove request modifying parameter because it can be done up-front." line="155"/>
      <comment value="Merge the URI into the base URI." line="159"/>
      <comment value="Remove the option so that they are not doubly-applied." line="165"/>
    </inline>
  </method>
  <method name="request" start="184" end="188" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create and send an HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
      <param description="HTTP method." type="string" variable="$method"/>
      <param description="URI object or string." type="object" variable="$uri">
        <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
      </param>
      <param description="Request options to apply. See \GuzzleHttp\RequestOptions." type="array" variable="$options"/>
      <throws type="object">
        <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
      </throws>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
    </return>
    <parameter name="method" byreference="false" type="string"/>
    <parameter name="uri" byreference="false" type="string" default="''"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="getConfig" start="203" end="208" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a client configuration option.">These options include default request options of the client, a "handler"
(if utilized by the concrete client), and a "base_uri" if utilized by
the concrete client.</description>
      <param description="The config option to retrieve." type="object" variable="$option">
        <type full="GuzzleHttp\string|null" namespace="GuzzleHttp" name="string|null"/>
      </param>
      <return type="mixed"/>
      <deprecated value="Client::getConfig will be removed in guzzlehttp/guzzle:8.0."/>
    </docblock>
    <parameter name="option" byreference="false" nullable="true" type="string" default="NULL"/>
  </method>
  <method name="buildUri" start="210" end="222" abstract="false" final="false" static="false" visibility="private">
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface"/>
    </return>
    <parameter name="uri" byreference="false" type="object">
      <type full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="array"/>
  </method>
  <method name="configureDefaults" start="227" end="274" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Configures the default options for a client."/>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="config" byreference="false" type="array"/>
    <inline>
      <comment value="Use the standard Linux HTTP_PROXY and HTTPS_PROXY if set." line="238"/>
      <comment value="We can only trust the HTTP_PROXY environment variable in a CLI" line="240"/>
      <comment value="process due to the fact that PHP has no reliable mechanism to" line="241"/>
      <comment value="get environment variables that start with &quot;HTTP_&quot;." line="242"/>
      <comment value="Add the default user-agent header." line="262"/>
    </inline>
  </method>
  <method name="prepareDefaults" start="281" end="314" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Merges default options into the array."/>
      <param description="Options to modify by reference" type="array" variable="$options"/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="Special handling for headers is required as they are added as" line="291"/>
      <comment value="conditional headers and as headers passed to a request ctor." line="292"/>
      <comment value="Shallow merge defaults underneath options." line="303"/>
      <comment value="Remove null values." line="306"/>
    </inline>
  </method>
  <method name="transfer" start="324" end="335" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Transfers the given request and applies request options.">The URI of the request is not modified and the request options are used
as-is without merging in default options.</description>
      <param description="See \GuzzleHttp\RequestOptions." type="array" variable="$options"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="applyOptions" start="340" end="464" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Applies the array of request options to a request."/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
    </parameter>
    <parameter name="options" byreference="true" type="array"/>
    <inline>
      <comment value="Ensure that sink is not an invalid value." line="432"/>
      <comment value="Merge in conditional headers if they are not present." line="449"/>
    </inline>
  </method>
  <method name="invalidBody" start="469" end="476" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Return an InvalidArgumentException with pre-set message."/>
    </docblock>
    <return type="object" nullable="false">
      <type full="GuzzleHttp\Exception\InvalidArgumentException" namespace="GuzzleHttp\Exception" name="InvalidArgumentException"/>
    </return>
  </method>
  <interface full="GuzzleHttp\ClientInterface" namespace="GuzzleHttp" name="ClientInterface">
    <constant type="{unknown}" name="MAJOR_VERSION" value="7">
      <docblock>
        <description compact="The Guzzle major version."/>
      </docblock>
    </constant>
    <method name="send" start="30" end="30" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Send an HTTP request."/>
        <param description="Request to send" type="object" variable="$request">
          <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
        </param>
        <param description="Request options to apply to the given" type="array" variable="$options">request and to the transfer.</param>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="request" byreference="false" type="object">
        <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
      </parameter>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="sendAsync" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asynchronously send an HTTP request."/>
        <param description="Request to send" type="object" variable="$request">
          <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
        </param>
        <param description="Request options to apply to the given" type="array" variable="$options">request and to the transfer.</param>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="request" byreference="false" type="object">
        <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
      </parameter>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="request" start="54" end="54" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="HTTP method." type="string" variable="$method"/>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="requestAsync" start="68" end="68" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="HTTP method" type="string" variable="$method"/>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="getConfig" start="83" end="83" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get a client configuration option.">These options include default request options of the client, a "handler"
(if utilized by the concrete client), and a "base_uri" if utilized by
the concrete client.</description>
        <param description="The config option to retrieve." type="object" variable="$option">
          <type full="GuzzleHttp\string|null" namespace="GuzzleHttp" name="string|null"/>
        </param>
        <return type="mixed"/>
        <deprecated value="ClientInterface::getConfig will be removed in guzzlehttp/guzzle:8.0."/>
      </docblock>
      <parameter name="option" byreference="false" nullable="true" type="string" default="NULL"/>
    </method>
  </interface>
  <interface full="Psr\Http\Client\ClientInterface" namespace="Psr\Http\Client" name="ClientInterface">
    <method name="sendRequest" start="19" end="19" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sends a PSR-7 request and returns a PSR-7 response."/>
        <param type="object" variable="$request">
          <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
        </param>
        <return type="object">
          <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
        </return>
        <throws description="If an error happens while processing the request." type="object">
          <type full="\Psr\Http\Client\ClientExceptionInterface" namespace="\Psr\Http\Client" name="ClientExceptionInterface"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="request" byreference="false" type="object">
        <type full="Psr\Http\Message\RequestInterface" namespace="Psr\Http\Message" name="RequestInterface"/>
      </parameter>
    </method>
  </interface>
  <trait full="GuzzleHttp\ClientTrait" namespace="GuzzleHttp" name="ClientTrait">
    <method name="request" start="28" end="28" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="HTTP method." type="string" variable="$method"/>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="get" start="42" end="45" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP GET request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="head" start="59" end="62" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP HEAD request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="put" start="76" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP PUT request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="post" start="93" end="96" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP POST request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="patch" start="110" end="113" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP PATCH request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="delete" start="127" end="130" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an HTTP DELETE request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
        <throws type="object">
          <type full="GuzzleHttp\Exception\GuzzleException" namespace="GuzzleHttp\Exception" name="GuzzleException"/>
        </throws>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Http\Message\ResponseInterface" namespace="Psr\Http\Message" name="ResponseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="requestAsync" start="144" end="144" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="HTTP method" type="string" variable="$method"/>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="getAsync" start="157" end="160" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP GET request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="headAsync" start="173" end="176" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP HEAD request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="putAsync" start="189" end="192" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP PUT request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="postAsync" start="205" end="208" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP POST request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="patchAsync" start="221" end="224" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP PATCH request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
    <method name="deleteAsync" start="237" end="240" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create and send an asynchronous HTTP DELETE request.">Use an absolute path to override the base path of the client, or a
relative path to append to the base path of the client. The URL can
contain the query string as well. Use an array to provide a URL
template and additional variables to use in the URL template expansion.</description>
        <param description="URI object or string." type="object" variable="$uri">
          <type full="GuzzleHttp\string|UriInterface" namespace="GuzzleHttp" name="string|UriInterface"/>
        </param>
        <param description="Request options to apply." type="array" variable="$options"/>
      </docblock>
      <return type="object" nullable="false">
        <type full="GuzzleHttp\Promise\PromiseInterface" namespace="GuzzleHttp\Promise" name="PromiseInterface"/>
      </return>
      <parameter name="uri" byreference="false" type="{unknown}"/>
      <parameter name="options" byreference="false" type="array" default=""/>
    </method>
  </trait>
</class>
