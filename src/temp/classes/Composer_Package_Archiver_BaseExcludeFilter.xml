<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Package\Archiver\BaseExcludeFilter" namespace="Composer\Package\Archiver" name="BaseExcludeFilter" abstract="true" final="false" start="21" end="152">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Package/Archiver" file="BaseExcludeFilter.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Package/Archiver/BaseExcludeFilter.php" size="4413" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="fb868b7e8f8d5270b854a7ae1ee2cf6fc0d08ba8" relative="ar/www/html/vendor/composer/composer/src/Composer/Package/Archiver/BaseExcludeFilter.php"/>
  <docblock>
    <description/>
    <author value="Nils Adermann &lt;naderman@naderman.de&gt;"/>
  </docblock>
  <member name="sourcePath" visibility="protected" static="false" line="26">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="excludePatterns" visibility="protected" static="false" line="31">
    <docblock>
      <description/>
      <var description="non-empty-string, 1: bool, 2: bool}&gt; array of [$pattern, $negate, $stripLeadingSlash] arrays" type="object">
        <type full="Composer\Package\Archiver\array&lt;array{0:" namespace="Composer\Package\Archiver" name="array&lt;array{0:"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="36" end="40" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="Directory containing sources to be filtered" type="string" variable="$sourcePath"/>
    </docblock>
    <parameter name="sourcePath" byreference="false" type="string"/>
  </constructor>
  <method name="filter" start="52" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks the given path against all exclude patterns in this filter">Negated patterns overwrite exclude decisions of previous filters.</description>
      <param description="The file's path relative to the sourcePath" type="string" variable="$relativePath"/>
      <param description="Whether a previous filter wants to exclude this file" type="object" variable="$exclude">
        <type full="Composer\Package\Archiver\bool" namespace="Composer\Package\Archiver" name="bool"/>
      </param>
      <return description="Whether the file should be excluded" type="object">
        <type full="Composer\Package\Archiver\bool" namespace="Composer\Package\Archiver" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="relativePath" byreference="false" type="string"/>
    <parameter name="exclude" byreference="false" type="bool"/>
  </method>
  <method name="parseLines" start="83" end="102" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Processes a file containing exclude rules of different formats per line"/>
      <param description="A set of lines to be parsed" type="array" variable="$lines" of="object">
        <type full="Composer\Package\Archiver\string" namespace="Composer\Package\Archiver" name="string"/>
      </param>
      <param description="The parser to be used on each line" type="object" variable="$lineParser">
        <type full="Composer\Package\Archiver\callable" namespace="Composer\Package\Archiver" name="callable"/>
      </param>
      <return description="non-empty-string, 1: bool, 2: bool}&gt; Exclude patterns to be used in filter()" type="object">
        <type full="Composer\Package\Archiver\array&lt;array{0:" namespace="Composer\Package\Archiver" name="array&lt;array{0:"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="lines" byreference="false" type="array"/>
    <parameter name="lineParser" byreference="false" type="callable"/>
  </method>
  <method name="generatePatterns" start="111" end="119" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generates a set of exclude patterns for filter() from gitignore rules"/>
      <param description="A list of exclude rules in gitignore syntax" type="array" variable="$rules" of="object">
        <type full="Composer\Package\Archiver\string" namespace="Composer\Package\Archiver" name="string"/>
      </param>
      <return description="array{0: non-empty-string, 1: bool, 2: bool}&gt; Exclude patterns" type="object">
        <type full="Composer\Package\Archiver\array&lt;int" namespace="Composer\Package\Archiver" name="array&lt;int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="rules" byreference="false" type="array"/>
  </method>
  <method name="generatePattern" start="128" end="151" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generates an exclude pattern for filter() from a gitignore rule"/>
      <param description="An exclude rule in gitignore syntax" type="string" variable="$rule"/>
      <return description="non-empty-string, 1: bool, 2: bool} An exclude pattern" type="object">
        <type full="Composer\Package\Archiver\array{0:" namespace="Composer\Package\Archiver" name="array{0:"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="rule" byreference="false" type="string"/>
    <inline>
      <comment value="remove delimiters as well as caret (^) and dollar sign ($) from the regex" line="147"/>
    </inline>
  </method>
  <extenders>
    <extender full="Composer\Package\Archiver\GitExcludeFilter" namespace="Composer\Package\Archiver" name="GitExcludeFilter"/>
    <extender full="Composer\Package\Archiver\ComposerExcludeFilter" namespace="Composer\Package\Archiver" name="ComposerExcludeFilter"/>
  </extenders>
</class>
