<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Console\ConsoleEvents" namespace="Symfony\Component\Console" name="ConsoleEvents" abstract="false" final="true" start="24" end="72">
  <file path="//var/www/html/vendor/symfony/console" file="ConsoleEvents.php" realpath="/var/www/html/vendor/symfony/console/ConsoleEvents.php" size="2174" time="2022-04-12T16:02:29+00:00" unixtime="1649779349" sha1="e199d7984aec0956bde7a2bd43927853cc3217dd" relative="ar/www/html/vendor/symfony/console/ConsoleEvents.php"/>
  <docblock>
    <description compact="Contains all events dispatched by an Application."/>
    <author value="Francesco Levorato &lt;git@flevour.net&gt;"/>
  </docblock>
  <constant type="string" name="COMMAND" value="'console.command'">
    <docblock>
      <description compact="The COMMAND event allows you to attach listeners before any command is executed by the console. It also allows you to modify the command, input and output before they are handed to the command."/>
      <event value="(&quot;Symfony\Component\Console\Event\ConsoleCommandEvent&quot;)"/>
    </docblock>
  </constant>
  <constant type="string" name="SIGNAL" value="'console.signal'">
    <docblock>
      <description compact="The SIGNAL event allows you to perform some actions after the command execution was interrupted."/>
      <event value="(&quot;Symfony\Component\Console\Event\ConsoleSignalEvent&quot;)"/>
    </docblock>
  </constant>
  <constant type="string" name="TERMINATE" value="'console.terminate'">
    <docblock>
      <description compact="The TERMINATE event allows you to attach listeners after a command is executed by the console."/>
      <event value="(&quot;Symfony\Component\Console\Event\ConsoleTerminateEvent&quot;)"/>
    </docblock>
  </constant>
  <constant type="string" name="ERROR" value="'console.error'">
    <docblock>
      <description compact="The ERROR event occurs when an uncaught exception or error appears.">This event allows you to deal with the exception/error or
to modify the thrown exception.</description>
      <event value="(&quot;Symfony\Component\Console\Event\ConsoleErrorEvent&quot;)"/>
    </docblock>
  </constant>
  <constant type="array" name="ALIASES" value="">
    <docblock>
      <description compact="Event aliases.">These aliases can be consumed by RegisterListenersPass.</description>
    </docblock>
  </constant>
</class>
