<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="GuzzleHttp\Psr7\FnStream" namespace="GuzzleHttp\Psr7" name="FnStream" abstract="false" final="true" start="15" end="179">
  <file path="//var/www/html/vendor/guzzlehttp/psr7/src" file="FnStream.php" realpath="/var/www/html/vendor/guzzlehttp/psr7/src/FnStream.php" size="4480" time="2022-03-20T21:55:58+00:00" unixtime="1647813358" sha1="62534f8688add5fa54c01e393d87da964dbf21e8" relative="ar/www/html/vendor/guzzlehttp/psr7/src/FnStream.php"/>
  <docblock>
    <description compact="Compose stream implementations based on a hash of functions.">Allows for easy testing and extension of a provided stream without needing
to create a concrete class for a simple extension point.</description>
  </docblock>
  <implements full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
  <constant type="array" name="SLOTS" value=""/>
  <member name="methods" visibility="private" static="false" line="24">
    <docblock>
      <var description="callable&gt;" type="object">
        <type full="GuzzleHttp\Psr7\array&lt;string" namespace="GuzzleHttp\Psr7" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="29" end="37" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="callable&gt; $methods Hash of method name to a callable." type="object">
        <type full="GuzzleHttp\Psr7\array&lt;string" namespace="GuzzleHttp\Psr7" name="array&lt;string"/>
      </param>
    </docblock>
    <parameter name="methods" byreference="false" type="array"/>
    <inline>
      <comment value="Create the functions on the class" line="33"/>
    </inline>
  </constructor>
  <method name="__get" start="44" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Lazily determine which methods are not implemented."/>
      <throws type="object">
        <type full="\BadMethodCallException" namespace="" name="BadMethodCallException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="name" byreference="false" type="string"/>
  </method>
  <destructor name="__destruct" start="53" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The close method is called on the underlying stream only if possible."/>
    </docblock>
  </destructor>
  <method name="__wakeup" start="65" end="68" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="An unserialize would allow the __destruct to run when the unserialized value goes out of scope."/>
      <throws type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
  </method>
  <method name="decorate" start="79" end="90" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Adds custom functionality to an underlying stream by intercepting specific method calls."/>
      <param description="Stream to decorate" type="object" variable="$stream">
        <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
      </param>
      <param description="callable&gt; $methods Hash of method name to a closure" type="object">
        <type full="GuzzleHttp\Psr7\array&lt;string" namespace="GuzzleHttp\Psr7" name="array&lt;string"/>
      </param>
      <return type="object">
        <type full="GuzzleHttp\Psr7\FnStream" namespace="GuzzleHttp\Psr7" name="FnStream"/>
      </return>
    </docblock>
    <parameter name="stream" byreference="false" type="object">
      <type full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
    </parameter>
    <parameter name="methods" byreference="false" type="array"/>
    <inline>
      <comment value="If any of the required methods were not provided, then simply" line="81"/>
      <comment value="proxy to the decorated stream." line="82"/>
    </inline>
  </method>
  <method name="__toString" start="92" end="103" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <method name="close" start="105" end="108" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
  </method>
  <method name="detach" start="110" end="113" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getSize" start="115" end="118" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="true"/>
  </method>
  <method name="tell" start="120" end="123" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
  </method>
  <method name="eof" start="125" end="128" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="isSeekable" start="130" end="133" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="rewind" start="135" end="138" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
  </method>
  <method name="seek" start="140" end="143" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
    <parameter name="offset" byreference="false" type="{unknown}"/>
    <parameter name="whence" byreference="false" type="{unknown}" default="" constant="SEEK_SET"/>
  </method>
  <method name="isWritable" start="145" end="148" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="write" start="150" end="153" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="isReadable" start="155" end="158" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="read" start="160" end="163" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="length" byreference="false" type="{unknown}"/>
  </method>
  <method name="getContents" start="165" end="168" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <method name="getMetadata" start="175" end="178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <interface full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface">
    <method name="__toString" start="28" end="28" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Reads all data from the stream into a string, from the beginning to end.">This method MUST attempt to seek to the beginning of the stream before
reading data and read the stream until the end is reached.

Warning: This could attempt to load a large amount of data into memory.

This method MUST NOT raise an exception in order to conform with PHP's
string casting operations.</description>
        <see value="http://php.net/manual/en/language.oop5.magic.php#object.tostring"/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="close" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Closes the stream and any underlying resources."/>
        <return type="object">
          <type full="Psr\Http\Message\void" namespace="Psr\Http\Message" name="void"/>
        </return>
      </docblock>
    </method>
    <method name="detach" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Separates any underlying resources from the stream.">After the stream has been detached, the stream is in an unusable state.</description>
        <return description="Underlying PHP stream, if any" type="object">
          <type full="Psr\Http\Message\resource|null" namespace="Psr\Http\Message" name="resource|null"/>
        </return>
      </docblock>
    </method>
    <method name="getSize" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the size of the stream if known."/>
        <return description="Returns the size in bytes if known, or null if unknown." type="object">
          <type full="Psr\Http\Message\int|null" namespace="Psr\Http\Message" name="int|null"/>
        </return>
      </docblock>
    </method>
    <method name="tell" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the current position of the file read/write pointer"/>
        <return description="Position of the file pointer" type="int"/>
        <throws description="on error." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
    </method>
    <method name="eof" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the stream is at the end of the stream."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isSeekable" start="73" end="73" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is seekable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="seek" start="87" end="87" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Seek to a position in the stream."/>
        <link value="http://www.php.net/manual/en/function.fseek.php"/>
        <param description="Stream offset" type="int" variable="$offset"/>
        <param description="Specifies how the cursor position will be calculated" type="int" variable="$whence">based on the seek offset. Valid values are identical to the built-in
    PHP $whence values for `fseek()`.  SEEK_SET: Set position equal to
    offset bytes SEEK_CUR: Set position to current location plus offset
    SEEK_END: Set position to end-of-stream plus offset.</param>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="offset" byreference="false" type="{unknown}"/>
      <parameter name="whence" byreference="false" type="{unknown}" default="" constant="SEEK_SET"/>
    </method>
    <method name="rewind" start="99" end="99" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Seek to the beginning of the stream.">If the stream is not seekable, this method will raise an exception;
otherwise, it will perform a seek(0).</description>
        <see value="seek()"/>
        <link value="http://www.php.net/manual/en/function.fseek.php"/>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
    </method>
    <method name="isWritable" start="106" end="106" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is writable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="write" start="115" end="115" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Write data to the stream."/>
        <param description="The string that is to be written." type="string" variable="$string"/>
        <return description="Returns the number of bytes written to the stream." type="int"/>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
    <method name="isReadable" start="122" end="122" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is readable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="read" start="134" end="134" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Read data from the stream."/>
        <param description="Read up to $length bytes from the object and return" type="int" variable="$length">them. Fewer than $length bytes may be returned if underlying stream
    call returns fewer bytes.</param>
        <return description="Returns the data read from the stream, or an empty string" type="string">if no bytes are available.</return>
        <throws description="if an error occurs." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="length" byreference="false" type="{unknown}"/>
    </method>
    <method name="getContents" start="143" end="143" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the remaining contents in a string"/>
        <return type="string"/>
        <throws description="if unable to read or an error occurs while" type="object">reading.<type full="\RuntimeException" namespace="" name="RuntimeException"/></throws>
      </docblock>
    </method>
    <method name="getMetadata" start="157" end="157" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get stream metadata as an associative array or retrieve a specific key.">The keys returned are identical to the keys returned from PHP's
stream_get_meta_data() function.</description>
        <link value="http://php.net/manual/en/function.stream-get-meta-data.php"/>
        <param description="Specific metadata to retrieve." type="string" variable="$key"/>
        <return description="Returns an associative array if no key is" type="object">provided. Returns a specific key value if a key is provided and the
    value is found, or null if the key is not found.<type full="Psr\Http\Message\array|mixed|null" namespace="Psr\Http\Message" name="array|mixed|null"/></return>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}" default="NULL"/>
    </method>
  </interface>
</class>
