<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="GuzzleHttp\Psr7\PumpStream" namespace="GuzzleHttp\Psr7" name="PumpStream" abstract="false" final="true" start="19" end="179">
  <file path="//var/www/html/vendor/guzzlehttp/psr7/src" file="PumpStream.php" realpath="/var/www/html/vendor/guzzlehttp/psr7/src/PumpStream.php" size="4603" time="2022-03-20T21:55:58+00:00" unixtime="1647813358" sha1="19e3aaa561748c56716d168268d60c8ab7824803" relative="ar/www/html/vendor/guzzlehttp/psr7/src/PumpStream.php"/>
  <docblock>
    <description compact="Provides a read only stream that pumps data from a PHP callable.">When invoking the provided callable, the PumpStream will pass the amount of
data requested to read to the callable. The callable can choose to ignore
this value and return fewer or more bytes than requested. Any extra data
returned by the provided callable is buffered internally until drained using
the read() function of the PumpStream. The provided callable MUST return
false when there is no more data to read.</description>
  </docblock>
  <implements full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface"/>
  <member name="source" visibility="private" static="false" line="22">
    <docblock>
      <var type="object">
        <type full="GuzzleHttp\Psr7\callable|null" namespace="GuzzleHttp\Psr7" name="callable|null"/>
      </var>
    </docblock>
  </member>
  <member name="size" visibility="private" static="false" line="25">
    <docblock>
      <var type="object">
        <type full="GuzzleHttp\Psr7\int|null" namespace="GuzzleHttp\Psr7" name="int|null"/>
      </var>
    </docblock>
  </member>
  <member name="tellPos" default="0" type="integer" visibility="private" static="false" line="28">
    <docblock>
      <var type="int"/>
    </docblock>
  </member>
  <member name="metadata" visibility="private" static="false" line="31">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <member name="buffer" visibility="private" static="false" line="34">
    <docblock>
      <var type="object">
        <type full="GuzzleHttp\Psr7\BufferStream" namespace="GuzzleHttp\Psr7" name="BufferStream"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="46" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="(string|null|false) $source  Source of the stream data. The callable MAY" type="object">accept an integer argument used to control the
                                                    amount of data to return. The callable MUST
                                                    return a string when called, or false|null on error
                                                    or EOF.<type full="GuzzleHttp\Psr7\callable(int):" namespace="GuzzleHttp\Psr7" name="callable(int):"/></param>
      <param description="int metadata?: array} $options Stream options:" type="object">- metadata: Hash of metadata to use with stream.
                                                    - size: Size of the stream, if known.<type full="GuzzleHttp\Psr7\array{size?:" namespace="GuzzleHttp\Psr7" name="array{size?:"/></param>
    </docblock>
    <parameter name="source" byreference="false" type="callable"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </constructor>
  <method name="__toString" start="54" end="65" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <method name="close" start="67" end="70" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
  </method>
  <method name="detach" start="72" end="78" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getSize" start="80" end="83" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="true"/>
  </method>
  <method name="tell" start="85" end="88" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
  </method>
  <method name="eof" start="90" end="93" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="isSeekable" start="95" end="98" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="rewind" start="100" end="103" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
  </method>
  <method name="seek" start="105" end="108" abstract="false" final="false" static="false" visibility="public">
    <return type="void" nullable="false"/>
    <parameter name="offset" byreference="false" type="{unknown}"/>
    <parameter name="whence" byreference="false" type="{unknown}" default="" constant="SEEK_SET"/>
  </method>
  <method name="isWritable" start="110" end="113" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="write" start="115" end="118" abstract="false" final="false" static="false" visibility="public">
    <return type="int" nullable="false"/>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="isReadable" start="120" end="123" abstract="false" final="false" static="false" visibility="public">
    <return type="bool" nullable="false"/>
  </method>
  <method name="read" start="125" end="139" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="length" byreference="false" type="{unknown}"/>
  </method>
  <method name="getContents" start="141" end="149" abstract="false" final="false" static="false" visibility="public">
    <return type="string" nullable="false"/>
  </method>
  <method name="getMetadata" start="156" end="163" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="pump" start="165" end="178" abstract="false" final="false" static="false" visibility="private">
    <return type="void" nullable="false"/>
    <parameter name="length" byreference="false" type="int"/>
  </method>
  <interface full="Psr\Http\Message\StreamInterface" namespace="Psr\Http\Message" name="StreamInterface">
    <method name="__toString" start="28" end="28" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Reads all data from the stream into a string, from the beginning to end.">This method MUST attempt to seek to the beginning of the stream before
reading data and read the stream until the end is reached.

Warning: This could attempt to load a large amount of data into memory.

This method MUST NOT raise an exception in order to conform with PHP's
string casting operations.</description>
        <see value="http://php.net/manual/en/language.oop5.magic.php#object.tostring"/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="close" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Closes the stream and any underlying resources."/>
        <return type="object">
          <type full="Psr\Http\Message\void" namespace="Psr\Http\Message" name="void"/>
        </return>
      </docblock>
    </method>
    <method name="detach" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Separates any underlying resources from the stream.">After the stream has been detached, the stream is in an unusable state.</description>
        <return description="Underlying PHP stream, if any" type="object">
          <type full="Psr\Http\Message\resource|null" namespace="Psr\Http\Message" name="resource|null"/>
        </return>
      </docblock>
    </method>
    <method name="getSize" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the size of the stream if known."/>
        <return description="Returns the size in bytes if known, or null if unknown." type="object">
          <type full="Psr\Http\Message\int|null" namespace="Psr\Http\Message" name="int|null"/>
        </return>
      </docblock>
    </method>
    <method name="tell" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the current position of the file read/write pointer"/>
        <return description="Position of the file pointer" type="int"/>
        <throws description="on error." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
    </method>
    <method name="eof" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the stream is at the end of the stream."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isSeekable" start="73" end="73" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is seekable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="seek" start="87" end="87" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Seek to a position in the stream."/>
        <link value="http://www.php.net/manual/en/function.fseek.php"/>
        <param description="Stream offset" type="int" variable="$offset"/>
        <param description="Specifies how the cursor position will be calculated" type="int" variable="$whence">based on the seek offset. Valid values are identical to the built-in
    PHP $whence values for `fseek()`.  SEEK_SET: Set position equal to
    offset bytes SEEK_CUR: Set position to current location plus offset
    SEEK_END: Set position to end-of-stream plus offset.</param>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="offset" byreference="false" type="{unknown}"/>
      <parameter name="whence" byreference="false" type="{unknown}" default="" constant="SEEK_SET"/>
    </method>
    <method name="rewind" start="99" end="99" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Seek to the beginning of the stream.">If the stream is not seekable, this method will raise an exception;
otherwise, it will perform a seek(0).</description>
        <see value="seek()"/>
        <link value="http://www.php.net/manual/en/function.fseek.php"/>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
    </method>
    <method name="isWritable" start="106" end="106" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is writable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="write" start="115" end="115" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Write data to the stream."/>
        <param description="The string that is to be written." type="string" variable="$string"/>
        <return description="Returns the number of bytes written to the stream." type="int"/>
        <throws description="on failure." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
    <method name="isReadable" start="122" end="122" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns whether or not the stream is readable."/>
        <return type="object">
          <type full="Psr\Http\Message\bool" namespace="Psr\Http\Message" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="read" start="134" end="134" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Read data from the stream."/>
        <param description="Read up to $length bytes from the object and return" type="int" variable="$length">them. Fewer than $length bytes may be returned if underlying stream
    call returns fewer bytes.</param>
        <return description="Returns the data read from the stream, or an empty string" type="string">if no bytes are available.</return>
        <throws description="if an error occurs." type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
      </docblock>
      <parameter name="length" byreference="false" type="{unknown}"/>
    </method>
    <method name="getContents" start="143" end="143" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the remaining contents in a string"/>
        <return type="string"/>
        <throws description="if unable to read or an error occurs while" type="object">reading.<type full="\RuntimeException" namespace="" name="RuntimeException"/></throws>
      </docblock>
    </method>
    <method name="getMetadata" start="157" end="157" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get stream metadata as an associative array or retrieve a specific key.">The keys returned are identical to the keys returned from PHP's
stream_get_meta_data() function.</description>
        <link value="http://php.net/manual/en/function.stream-get-meta-data.php"/>
        <param description="Specific metadata to retrieve." type="string" variable="$key"/>
        <return description="Returns an associative array if no key is" type="object">provided. Returns a specific key value if a key is provided and the
    value is found, or null if the key is not found.<type full="Psr\Http\Message\array|mixed|null" namespace="Psr\Http\Message" name="array|mixed|null"/></return>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}" default="NULL"/>
    </method>
  </interface>
</class>
