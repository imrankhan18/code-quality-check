<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="RuntimeException" namespace="" name="RuntimeException">
  <extends name="Exception" full="Exception"/>
  <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
  <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="Throwable"/>
    </docblock>
  </method>
  <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__clone" abstract="false" static="false" final="true">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
<extenders><extender full="PHP_CodeSniffer\Exceptions\RuntimeException" namespace="PHP_CodeSniffer\Exceptions" name="RuntimeException"/><extender full="JsonSchema\Exception\InvalidSchemaMediaTypeException" namespace="JsonSchema\Exception" name="InvalidSchemaMediaTypeException"/><extender full="JsonSchema\Exception\ResourceNotFoundException" namespace="JsonSchema\Exception" name="ResourceNotFoundException"/><extender full="JsonSchema\Exception\InvalidSchemaException" namespace="JsonSchema\Exception" name="InvalidSchemaException"/><extender full="JsonSchema\Exception\UriResolverException" namespace="JsonSchema\Exception" name="UriResolverException"/><extender full="JsonSchema\Exception\InvalidConfigException" namespace="JsonSchema\Exception" name="InvalidConfigException"/><extender full="JsonSchema\Exception\JsonDecodingException" namespace="JsonSchema\Exception" name="JsonDecodingException"/><extender full="JsonSchema\Exception\ValidationException" namespace="JsonSchema\Exception" name="ValidationException"/><extender full="JsonSchema\Exception\RuntimeException" namespace="JsonSchema\Exception" name="RuntimeException"/><extender full="Composer\Exception\NoSslException" namespace="Composer\Exception" name="NoSslException"/><extender full="Composer\Exception\IrrecoverableDownloadException" namespace="Composer\Exception" name="IrrecoverableDownloadException"/><extender full="Composer\Downloader\TransportException" namespace="Composer\Downloader" name="TransportException"/><extender full="Composer\Downloader\MaxFileSizeExceededException" namespace="Composer\Downloader" name="MaxFileSizeExceededException"/><extender full="Composer\EventDispatcher\ScriptExecutionException" namespace="Composer\EventDispatcher" name="ScriptExecutionException"/><extender full="Composer\DependencyResolver\SolverProblemsException" namespace="Composer\DependencyResolver" name="SolverProblemsException"/><extender full="Composer\DependencyResolver\SolverBugException" namespace="Composer\DependencyResolver" name="SolverBugException"/><extender full="Composer\Pcre\PcreException" namespace="Composer\Pcre" name="PcreException"/><extender full="SebastianBergmann\PHPLOC\ArgumentsBuilderException" namespace="SebastianBergmann\PHPLOC" name="ArgumentsBuilderException"/><extender full="SebastianBergmann\PHPLOC\RuntimeException" namespace="SebastianBergmann\PHPLOC" name="RuntimeException"/><extender full="GuzzleHttp\Promise\RejectionException" namespace="GuzzleHttp\Promise" name="RejectionException"/><extender full="GuzzleHttp\Promise\CancellationException" namespace="GuzzleHttp\Promise" name="CancellationException"/><extender full="GuzzleHttp\Promise\AggregateException" namespace="GuzzleHttp\Promise" name="AggregateException"/><extender full="GuzzleHttp\Exception\TransferException" namespace="GuzzleHttp\Exception" name="TransferException"/><extender full="GuzzleHttp\Exception\ClientException" namespace="GuzzleHttp\Exception" name="ClientException"/><extender full="GuzzleHttp\Exception\ConnectException" namespace="GuzzleHttp\Exception" name="ConnectException"/><extender full="GuzzleHttp\Exception\RequestException" namespace="GuzzleHttp\Exception" name="RequestException"/><extender full="GuzzleHttp\Exception\BadResponseException" namespace="GuzzleHttp\Exception" name="BadResponseException"/><extender full="GuzzleHttp\Exception\TooManyRedirectsException" namespace="GuzzleHttp\Exception" name="TooManyRedirectsException"/><extender full="GuzzleHttp\Exception\ServerException" namespace="GuzzleHttp\Exception" name="ServerException"/><extender full="League\Container\Exception\ContainerException" namespace="League\Container\Exception" name="ContainerException"/><extender full="React\Promise\UnhandledRejectionException" namespace="React\Promise" name="UnhandledRejectionException"/><extender full="SebastianBergmann\CliParser\RequiredOptionArgumentMissingException" namespace="SebastianBergmann\CliParser" name="RequiredOptionArgumentMissingException"/><extender full="SebastianBergmann\CliParser\UnknownOptionException" namespace="SebastianBergmann\CliParser" name="UnknownOptionException"/><extender full="SebastianBergmann\CliParser\AmbiguousOptionException" namespace="SebastianBergmann\CliParser" name="AmbiguousOptionException"/><extender full="SebastianBergmann\CliParser\OptionDoesNotAllowArgumentException" namespace="SebastianBergmann\CliParser" name="OptionDoesNotAllowArgumentException"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\DirectoryNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="DirectoryNotFound"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\InvalidConfiguration" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="InvalidConfiguration"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\InternetConnectionNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="InternetConnectionNotFound"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\SniffClassNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="SniffClassNotFound"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\PresetNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="PresetNotFound"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\ComposerNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="ComposerNotFound"/><extender full="NunoMaduro\PhpInsights\Domain\Exceptions\InsightClassNotFound" namespace="NunoMaduro\PhpInsights\Domain\Exceptions" name="InsightClassNotFound"/><extender full="Firebase\JWT\BeforeValidException" namespace="Firebase\JWT" name="BeforeValidException"/><extender full="Firebase\JWT\SignatureInvalidException" namespace="Firebase\JWT" name="SignatureInvalidException"/><extender full="Firebase\JWT\ExpiredException" namespace="Firebase\JWT" name="ExpiredException"/><extender full="PhpCsFixer\Linter\UnavailableLinterException" namespace="PhpCsFixer\Linter" name="UnavailableLinterException"/><extender full="PhpCsFixer\Linter\LintingException" namespace="PhpCsFixer\Linter" name="LintingException"/><extender full="PhpCsFixer\PregException" namespace="PhpCsFixer" name="PregException"/><extender full="Symfony\Component\OptionsResolver\Exception\NoSuchOptionException" namespace="Symfony\Component\OptionsResolver\Exception" name="NoSuchOptionException"/><extender full="Symfony\Component\OptionsResolver\Exception\NoConfigurationException" namespace="Symfony\Component\OptionsResolver\Exception" name="NoConfigurationException"/><extender full="Symfony\Component\Process\Exception\ProcessSignaledException" namespace="Symfony\Component\Process\Exception" name="ProcessSignaledException"/><extender full="Symfony\Component\Process\Exception\ProcessFailedException" namespace="Symfony\Component\Process\Exception" name="ProcessFailedException"/><extender full="Symfony\Component\Process\Exception\ProcessTimedOutException" namespace="Symfony\Component\Process\Exception" name="ProcessTimedOutException"/><extender full="Symfony\Component\Process\Exception\RuntimeException" namespace="Symfony\Component\Process\Exception" name="RuntimeException"/><extender full="Symfony\Component\HttpClient\Exception\ClientException" namespace="Symfony\Component\HttpClient\Exception" name="ClientException"/><extender full="Symfony\Component\HttpClient\Exception\TimeoutException" namespace="Symfony\Component\HttpClient\Exception" name="TimeoutException"/><extender full="Symfony\Component\HttpClient\Exception\RedirectionException" namespace="Symfony\Component\HttpClient\Exception" name="RedirectionException"/><extender full="Symfony\Component\HttpClient\Exception\ServerException" namespace="Symfony\Component\HttpClient\Exception" name="ServerException"/><extender full="Symfony\Component\HttpClient\Exception\EventSourceException" namespace="Symfony\Component\HttpClient\Exception" name="EventSourceException"/><extender full="Symfony\Component\HttpClient\Exception\TransportException" namespace="Symfony\Component\HttpClient\Exception" name="TransportException"/><extender full="Symfony\Component\HttpClient\Psr18NetworkException" namespace="Symfony\Component\HttpClient" name="Psr18NetworkException"/><extender full="Symfony\Component\String\Exception\RuntimeException" namespace="Symfony\Component\String\Exception" name="RuntimeException"/><extender full="Symfony\Component\Console\Exception\MissingInputException" namespace="Symfony\Component\Console\Exception" name="MissingInputException"/><extender full="Symfony\Component\Console\Exception\RuntimeException" namespace="Symfony\Component\Console\Exception" name="RuntimeException"/><extender full="Symfony\Component\Filesystem\Exception\IOException" namespace="Symfony\Component\Filesystem\Exception" name="IOException"/><extender full="Symfony\Component\Filesystem\Exception\FileNotFoundException" namespace="Symfony\Component\Filesystem\Exception" name="FileNotFoundException"/><extender full="Symfony\Component\Filesystem\Exception\RuntimeException" namespace="Symfony\Component\Filesystem\Exception" name="RuntimeException"/><extender full="Symfony\Component\Finder\Exception\AccessDeniedException" namespace="Symfony\Component\Finder\Exception" name="AccessDeniedException"/></extenders></class>
