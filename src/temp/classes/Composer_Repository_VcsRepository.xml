<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Repository\VcsRepository" namespace="Composer\Repository" name="VcsRepository" abstract="false" final="false" start="34" end="551">
  <file path="//var/www/html/vendor/composer/composer/src/Composer/Repository" file="VcsRepository.php" realpath="/var/www/html/vendor/composer/composer/src/Composer/Repository/VcsRepository.php" size="20989" time="2022-04-13T14:43:00+00:00" unixtime="1649860980" sha1="ab62fbc6c639f742923752bc391c9f80b97678a8" relative="ar/www/html/vendor/composer/composer/src/Composer/Repository/VcsRepository.php"/>
  <docblock>
    <description/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <extends full="Composer\Repository\ArrayRepository" namespace="Composer\Repository" name="ArrayRepository"/>
  <implements full="Composer\Repository\ConfigurableRepositoryInterface" namespace="Composer\Repository" name="ConfigurableRepositoryInterface"/>
  <member name="url" visibility="protected" static="false" line="37">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="packageName" visibility="protected" static="false" line="39">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\?string" namespace="Composer\Repository" name="?string"/>
      </var>
    </docblock>
  </member>
  <member name="isVerbose" visibility="protected" static="false" line="41">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="isVeryVerbose" visibility="protected" static="false" line="43">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="io" visibility="protected" static="false" line="45">
    <docblock>
      <var type="object">
        <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
      </var>
    </docblock>
  </member>
  <member name="config" visibility="protected" static="false" line="47">
    <docblock>
      <var type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </var>
    </docblock>
  </member>
  <member name="versionParser" visibility="protected" static="false" line="49">
    <docblock>
      <var type="object">
        <type full="Composer\Package\Version\VersionParser" namespace="Composer\Package\Version" name="VersionParser"/>
      </var>
    </docblock>
  </member>
  <member name="type" visibility="protected" static="false" line="51">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="loader" visibility="protected" static="false" line="53">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\?LoaderInterface" namespace="Composer\Repository" name="?LoaderInterface"/>
      </var>
    </docblock>
  </member>
  <member name="repoConfig" visibility="protected" static="false" line="55">
    <docblock>
      <var description="mixed&gt;" type="object">
        <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="httpDownloader" visibility="protected" static="false" line="57">
    <docblock>
      <var type="object">
        <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
      </var>
    </docblock>
  </member>
  <member name="processExecutor" visibility="protected" static="false" line="59">
    <docblock>
      <var type="object">
        <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
      </var>
    </docblock>
  </member>
  <member name="branchErrorOccurred" default="false" type="boolean" visibility="protected" static="false" line="61">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="drivers" visibility="private" static="false" line="63">
    <docblock>
      <var description="class-string&lt;VcsDriverInterface&gt;&gt;" type="object">
        <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="driver" visibility="private" static="false" line="65">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\?VcsDriverInterface" namespace="Composer\Repository" name="?VcsDriverInterface"/>
      </var>
    </docblock>
  </member>
  <member name="versionCache" visibility="private" static="false" line="67">
    <docblock>
      <var type="object">
        <type full="Composer\Repository\?VersionCacheInterface" namespace="Composer\Repository" name="?VersionCacheInterface"/>
      </var>
    </docblock>
  </member>
  <member name="emptyReferences" default="" type="array" visibility="private" static="false" line="69">
    <docblock>
      <var type="array" of="object">
        <type full="Composer\Repository\string" namespace="Composer\Repository" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="versionTransportExceptions" default="" type="array" visibility="private" static="false" line="71">
    <docblock>
      <var description="array&lt;string, TransportException&gt;&gt;" type="object">
        <type full="Composer\Repository\array&lt;'tags'|'branches'" namespace="Composer\Repository" name="array&lt;'tags'|'branches'"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="77" end="103" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="string type?: string}&amp;array&lt;string, mixed&gt; $repoConfig" type="object">
        <type full="Composer\Repository\array{url:" namespace="Composer\Repository" name="array{url:"/>
      </param>
      <param description="class-string&lt;VcsDriverInterface&gt;&gt;|null $drivers" type="object">
        <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
      </param>
    </docblock>
    <parameter name="repoConfig" byreference="false" type="array"/>
    <parameter name="io" byreference="false" type="object">
      <type full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    </parameter>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
    <parameter name="httpDownloader" byreference="false" type="object">
      <type full="Composer\Util\HttpDownloader" namespace="Composer\Util" name="HttpDownloader"/>
    </parameter>
    <parameter name="dispatcher" byreference="false" type="object" default="NULL">
      <type full="Composer\EventDispatcher\EventDispatcher" namespace="Composer\EventDispatcher" name="EventDispatcher"/>
    </parameter>
    <parameter name="process" byreference="false" type="object" default="NULL">
      <type full="Composer\Util\ProcessExecutor" namespace="Composer\Util" name="ProcessExecutor"/>
    </parameter>
    <parameter name="drivers" byreference="false" type="array" default="NULL"/>
    <parameter name="versionCache" byreference="false" type="object" default="NULL">
      <type full="Composer\Repository\VersionCacheInterface" namespace="Composer\Repository" name="VersionCacheInterface"/>
    </parameter>
  </constructor>
  <method name="getRepoName" start="105" end="114" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getRepoConfig" start="116" end="119" abstract="false" final="false" static="false" visibility="public"/>
  <method name="setLoader" start="124" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
      </return>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="loader" byreference="false" type="object">
      <type full="Composer\Package\Loader\LoaderInterface" namespace="Composer\Package\Loader" name="LoaderInterface"/>
    </parameter>
  </method>
  <method name="getDriver" start="132" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\VcsDriverInterface|null" namespace="Composer\Repository" name="VcsDriverInterface|null"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="Composer\Repository\Vcs\VcsDriverInterface" namespace="Composer\Repository\Vcs" name="VcsDriverInterface"/>
    </return>
  </method>
  <method name="hadInvalidBranches" start="170" end="173" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="getEmptyReferences" start="178" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="Composer\Repository\string" namespace="Composer\Repository" name="string"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getVersionTransportExceptions" start="186" end="189" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="array&lt;string, TransportException&gt;&gt;" type="object">
        <type full="Composer\Repository\array&lt;'tags'|'branches'" namespace="Composer\Repository" name="array&lt;'tags'|'branches'"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="initialize" start="191" end="430" abstract="false" final="false" static="false" visibility="protected">
    <inline>
      <comment value="make sure the root identifier branch gets loaded first" line="329"/>
    </inline>
  </method>
  <method name="preProcess" start="439" end="455" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$driver">
        <type full="Composer\Repository\Vcs\VcsDriverInterface" namespace="Composer\Repository\Vcs" name="VcsDriverInterface"/>
      </param>
      <param description="string dist?: array{type: string, url: string, reference: string, shasum: string}, source?: array{type: string, url: string, reference: string}} $data" type="object">
        <type full="Composer\Repository\array{name?:" namespace="Composer\Repository" name="array{name?:"/>
      </param>
      <param type="string" variable="$identifier"/>
      <return description="string|null, dist: array{type: string, url: string, reference: string, shasum: string}|null, source: array{type: string, url: string, reference: string}}" type="object">
        <type full="Composer\Repository\array{name:" namespace="Composer\Repository" name="array{name:"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="driver" byreference="false" type="object">
      <type full="Composer\Repository\Vcs\VcsDriverInterface" namespace="Composer\Repository\Vcs" name="VcsDriverInterface"/>
    </parameter>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="identifier" byreference="false" type="string"/>
    <inline>
      <comment value="keep the name of the main identifier for all packages" line="441"/>
      <comment value="this ensures that a package can be renamed in one place and that all old tags" line="442"/>
      <comment value="will still be installable using that new name without requiring re-tagging" line="443"/>
    </inline>
  </method>
  <method name="validateBranch" start="462" end="475" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$branch"/>
      <return type="object">
        <type full="Composer\Repository\string|false" namespace="Composer\Repository" name="string|false"/>
      </return>
    </docblock>
    <parameter name="branch" byreference="false" type="string"/>
  </method>
  <method name="validateTag" start="482" end="490" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$version"/>
      <return type="object">
        <type full="Composer\Repository\string|false" namespace="Composer\Repository" name="string|false"/>
      </return>
    </docblock>
    <parameter name="version" byreference="false" type="string"/>
  </method>
  <method name="getCachedPackageVersion" start="501" end="542" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$version"/>
      <param type="string" variable="$identifier"/>
      <param type="object" variable="$isVerbose">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </param>
      <param type="object" variable="$isVeryVerbose">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </param>
      <param type="object" variable="$isDefaultBranch">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </param>
      <return description="null if no cache present, false if the absence of a version was cached" type="object">
        <type full="\Composer\Package\CompletePackage|\Composer\Package\CompleteAliasPackage|null|false" namespace="\Composer\Package\CompletePackage|\Composer\Package" name="CompleteAliasPackage|null|false"/>
      </return>
    </docblock>
    <parameter name="version" byreference="false" type="string"/>
    <parameter name="identifier" byreference="false" type="string"/>
    <parameter name="isVerbose" byreference="false" type="bool"/>
    <parameter name="isVeryVerbose" byreference="false" type="bool"/>
    <parameter name="isDefaultBranch" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="shouldRethrowTransportException" start="547" end="550" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return type="object">
        <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="e" byreference="false" type="object">
      <type full="Composer\Downloader\TransportException" namespace="Composer\Downloader" name="TransportException"/>
    </parameter>
  </method>
  <parent full="Composer\Repository\ArrayRepository" namespace="Composer\Repository" name="ArrayRepository">
    <implements full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface"/>
    <member name="packages" default="NULL" visibility="protected" static="false" line="35">
      <docblock>
        <var type="object">
          <type full="Composer\Repository\?array&lt;BasePackage&gt;" namespace="Composer\Repository" name="?array&lt;BasePackage&gt;"/>
        </var>
      </docblock>
    </member>
    <member name="packageMap" default="NULL" visibility="protected" static="false" line="40">
      <docblock>
        <description/>
        <var description="indexed by package unique name and used to cache hasPackage calls" type="object">
          <type full="Composer\Repository\?array&lt;BasePackage&gt;" namespace="Composer\Repository" name="?array&lt;BasePackage&gt;"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="45" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param type="object" variable="$packages">
          <type full="Composer\Repository\array&lt;PackageInterface&gt;" namespace="Composer\Repository" name="array&lt;PackageInterface&gt;"/>
        </param>
      </docblock>
      <parameter name="packages" byreference="false" type="array" default=""/>
    </constructor>
    <method name="getRepoName" start="52" end="55" abstract="false" final="false" static="false" visibility="public"/>
    <method name="loadPackages" start="60" end="95" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="packageNameMap" byreference="false" type="array"/>
      <parameter name="acceptableStabilities" byreference="false" type="array"/>
      <parameter name="stabilityFlags" byreference="false" type="array"/>
      <parameter name="alreadyLoaded" byreference="false" type="array" default=""/>
      <inline>
        <comment value="add aliases of packages that were selected, even if the aliases did not match" line="85"/>
      </inline>
    </method>
    <method name="findPackage" start="100" end="119" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="constraint" byreference="false" type="{unknown}"/>
    </method>
    <method name="findPackages" start="124" end="144" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="constraint" byreference="false" type="{unknown}" default="NULL"/>
      <inline>
        <comment value="normalize name" line="126"/>
      </inline>
    </method>
    <method name="search" start="149" end="193" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="query" byreference="false" type="string"/>
      <parameter name="mode" byreference="false" type="integer" default="0"/>
      <parameter name="type" byreference="false" nullable="true" type="string" default="NULL"/>
    </method>
    <method name="hasPackage" start="198" end="208" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="addPackage" start="215" end="235" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Adds a new package to the repository"/>
        <return type="object">
          <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
        </return>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
      <inline>
        <comment value="invalidate package map cache" line="233"/>
      </inline>
    </method>
    <method name="getProviders" start="240" end="261" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
      <parameter name="packageName" byreference="false" type="string"/>
    </method>
    <method name="createAliasPackage" start="269" end="280" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$alias"/>
        <param type="string" variable="$prettyAlias"/>
        <return type="object">
          <type full="Composer\Repository\AliasPackage|CompleteAliasPackage" namespace="Composer\Repository" name="AliasPackage|CompleteAliasPackage"/>
        </return>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\BasePackage" namespace="Composer\Package" name="BasePackage"/>
      </parameter>
      <parameter name="alias" byreference="false" type="string"/>
      <parameter name="prettyAlias" byreference="false" type="string"/>
    </method>
    <method name="removePackage" start="289" end="303" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Removes package from repository."/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
        </return>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="getPackages" start="308" end="319" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <inheritdoc/>
      </docblock>
    </method>
    <method name="count" start="326" end="333" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the number of packages in this repository"/>
        <return description="Number of packages" type="int"/>
      </docblock>
      <return type="int" nullable="false"/>
    </method>
    <method name="initialize" start="340" end="343" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Initializes the packages array. Mostly meant as an extension point."/>
        <return type="object">
          <type full="Composer\Repository\void" namespace="Composer\Repository" name="void"/>
        </return>
      </docblock>
    </method>
  </parent>
  <interface full="Composer\Repository\RepositoryInterface" namespace="Composer\Repository" name="RepositoryInterface">
    <extends full="Countable" namespace="" name="Countable"/>
    <constant type="{unknown}" name="SEARCH_FULLTEXT" value="0"/>
    <constant type="{unknown}" name="SEARCH_NAME" value="1"/>
    <constant type="{unknown}" name="SEARCH_VENDOR" value="2"/>
    <method name="hasPackage" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks if specified package registered (installed)."/>
        <param description="package instance" type="object" variable="$package">
          <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Repository\bool" namespace="Composer\Repository" name="bool"/>
        </return>
      </docblock>
      <parameter name="package" byreference="false" type="object">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </parameter>
    </method>
    <method name="findPackage" start="49" end="49" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Searches for the first match of a package by name and version."/>
        <param description="package name" type="string" variable="$name"/>
        <param description="package version or version constraint to match against" type="object" variable="$constraint">
          <type full="Composer\Repository\string|ConstraintInterface" namespace="Composer\Repository" name="string|ConstraintInterface"/>
        </param>
        <return type="object">
          <type full="Composer\Repository\BasePackage|null" namespace="Composer\Repository" name="BasePackage|null"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="constraint" byreference="false" type="{unknown}"/>
    </method>
    <method name="findPackages" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Searches for all packages matching a name and optionally a version."/>
        <param description="package name" type="string" variable="$name"/>
        <param description="package version or version constraint to match against" type="object" variable="$constraint">
          <type full="Composer\Repository\string|ConstraintInterface" namespace="Composer\Repository" name="string|ConstraintInterface"/>
        </param>
        <return type="array" of="object">
          <type full="Composer\Repository\BasePackage" namespace="Composer\Repository" name="BasePackage"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="constraint" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="getPackages" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns list of registered packages."/>
        <return type="array" of="object">
          <type full="Composer\Repository\BasePackage" namespace="Composer\Repository" name="BasePackage"/>
        </return>
      </docblock>
    </method>
    <method name="loadPackages" start="84" end="84" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns list of registered packages with the supplied name">- The packages returned are the packages found which match the constraints, acceptable stability and stability flags provided
- The namesFound returned are names which should be considered as canonically found in this repository, that should not be looked up in any further lower priority repositories</description>
        <param description="package names pointing to constraints" type="array" variable="$packageNameMap" of="object">
          <type full="Composer\Repository\ConstraintInterface" namespace="Composer\Repository" name="ConstraintInterface"/>
        </param>
        <param description="BasePackage::STABILITY_*&gt; $acceptableStabilities array of stability =&gt; BasePackage::STABILITY_* value" type="object">
          <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
        </param>
        <param description="BasePackage::STABILITY_*&gt; $stabilityFlags        an array of package name =&gt; BasePackage::STABILITY_* value" type="object">
          <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
        </param>
        <param description="array&lt;string PackageInterface&gt;&gt; $alreadyLoaded         an array of package name =&gt; package version =&gt; package" type="object">
          <type full="Composer\Repository\array&lt;string" namespace="Composer\Repository" name="array&lt;string"/>
        </param>
        <return type="array"/>
        <phpstan value="-param  array&lt;string, ConstraintInterface|null&gt; $packageNameMap"/>
        <phpstan value="-return array{namesFound: array&lt;string&gt;, packages: array&lt;BasePackage&gt;}"/>
      </docblock>
      <parameter name="packageNameMap" byreference="false" type="array"/>
      <parameter name="acceptableStabilities" byreference="false" type="array"/>
      <parameter name="stabilityFlags" byreference="false" type="array"/>
      <parameter name="alreadyLoaded" byreference="false" type="array" default=""/>
    </method>
    <method name="search" start="96" end="96" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Searches the repository for packages containing the query"/>
        <param description="search query, for SEARCH_NAME and SEARCH_VENDOR regular expressions metacharacters are supported by implementations, and user input should be escaped through preg_quote by callers" type="string" variable="$query"/>
        <param description="a set of SEARCH_* constants to search on, implementations should do a best effort only, default is SEARCH_FULLTEXT" type="int" variable="$mode"/>
        <param description="The type of package to search for. Defaults to all types of packages" type="object" variable="$type">
          <type full="Composer\Repository\?string" namespace="Composer\Repository" name="?string"/>
        </param>
        <return description="an array of array('name' =&gt; '...', 'description' =&gt; '...'|null, 'abandoned' =&gt; 'string'|true|unset) For SEARCH_VENDOR the name will be in &quot;vendor&quot; form" type="array" of="object">
          <type full="Composer\Repository\array" namespace="Composer\Repository" name="array"/>
        </return>
        <phpstan value="-return list&lt;array{name: string, description: ?string, abandoned?: string|true, url?: string}&gt;"/>
      </docblock>
      <parameter name="query" byreference="false" type="string"/>
      <parameter name="mode" byreference="false" type="integer" default="0"/>
      <parameter name="type" byreference="false" nullable="true" type="string" default="NULL"/>
    </method>
    <method name="getProviders" start="108" end="108" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a list of packages providing a given package name">Packages which have the same name as $packageName should not be returned, only those that have a "provide" on it.</description>
        <param description="package name which must be provided" type="string" variable="$packageName"/>
        <return description="an array with the provider name as key and value of array('name' =&gt; '...', 'description' =&gt; '...', 'type' =&gt; '...')" type="array" of="object">
          <type full="Composer\Repository\array" namespace="Composer\Repository" name="array"/>
        </return>
        <phpstan value="-return array&lt;string, array{name: string, description: string, type: string}&gt;"/>
      </docblock>
      <parameter name="packageName" byreference="false" type="string"/>
    </method>
    <method name="getRepoName" start="117" end="117" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a name representing this repository to the user">This is best effort and definitely can not always be very precise</description>
        <return type="string"/>
      </docblock>
    </method>
  </interface>
  <interface full="Composer\Repository\ConfigurableRepositoryInterface" namespace="Composer\Repository" name="ConfigurableRepositoryInterface">
    <method name="getRepoConfig" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="array" of="object">
          <type full="Composer\Repository\mixed" namespace="Composer\Repository" name="mixed"/>
        </return>
      </docblock>
    </method>
  </interface>
</class>
