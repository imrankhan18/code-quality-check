<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Tests\FileList" namespace="PHP_CodeSniffer\Tests" name="FileList" abstract="false" final="false" start="12" end="94">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/tests" file="FileList.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/tests/FileList.php" size="2339" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="c04dc4407a666eed95775dd6597cff2fc25a694d" relative="ar/www/html/vendor/squizlabs/php_codesniffer/tests/FileList.php"/>
  <member name="rootPath" visibility="protected" static="false" line="20">
    <docblock>
      <description compact="The path to the project root directory."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="fileIterator" visibility="public" static="false" line="27">
    <docblock>
      <description compact="Recursive directory iterator."/>
      <var type="object">
        <type full="\DirectoryIterator" namespace="" name="DirectoryIterator"/>
      </var>
    </docblock>
  </member>
  <member name="baseRegex" default="'`^%s(?!\.git/)(?!(.*/)?\.+$)(?!.*\.(bak|orig)).*$`Dix'" type="string" visibility="private" static="false" line="41">
    <docblock>
      <description compact="Base regex to use if no filter regex is provided.">Matches based on:
- File path starts with the project root (replacement done in constructor).
- Don't match .git/ files.
- Don't match dot files, i.e. "." or "..".
- Don't match backup files.
- Match everything else in a case-insensitive manner.</description>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="51" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="The directory to examine." type="string" variable="$directory"/>
      <param description="Path to the project root." type="string" variable="$rootPath"/>
      <param description="PCRE regular expression to filter the file list with." type="string" variable="$filter"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}"/>
    <parameter name="rootPath" byreference="false" type="string" default="''"/>
    <parameter name="filter" byreference="false" type="string" default="''"/>
  </constructor>
  <method name="getList" start="81" end="91" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve the filtered file list as an array."/>
      <return type="array"/>
    </docblock>
  </method>
</class>
