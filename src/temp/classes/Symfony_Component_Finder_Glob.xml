<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Finder\Glob" namespace="Symfony\Component\Finder" name="Glob" abstract="false" final="false" start="36" end="111">
  <file path="//var/www/html/vendor/symfony/finder" file="Glob.php" realpath="/var/www/html/vendor/symfony/finder/Glob.php" size="3620" time="2022-04-15T08:07:45+00:00" unixtime="1650010065" sha1="c3790810cef503a99d883b9353bc7fa278b5b04f" relative="ar/www/html/vendor/symfony/finder/Glob.php"/>
  <docblock>
    <description compact="Glob matches globbing patterns against text.">if match_glob("foo.*", "foo.bar") echo "matched\n";

    // prints foo.bar and foo.baz
    $regex = glob_to_regex("foo.*");
    for (['foo.bar', 'foo.baz', 'foo', 'bar'] as $t)
    {
        if (/$regex/) echo "matched: $car\n";
    }

Glob implements glob(3) style matching that can be used to match
against text, rather than fetching names from a filesystem.

Based on the Perl Text::Glob module.</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt; PHP port"/>
    <author value="Richard Clamp &lt;richardc@unixbeard.net&gt; Perl version"/>
    <copyright value="2004-2005 Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <copyright value="2002 Richard Clamp &lt;richardc@unixbeard.net&gt;"/>
  </docblock>
  <method name="toRegex" start="43" end="110" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns a regexp which is the equivalent of the glob pattern."/>
      <return type="string"/>
    </docblock>
    <parameter name="glob" byreference="false" type="string"/>
    <parameter name="strictLeadingDot" byreference="false" type="boolean" default="true"/>
    <parameter name="strictWildcardSlash" byreference="false" type="boolean" default="true"/>
    <parameter name="delimiter" byreference="false" type="string" default="'#'"/>
  </method>
</class>
