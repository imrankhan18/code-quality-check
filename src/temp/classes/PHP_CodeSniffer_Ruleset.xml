<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Ruleset" namespace="PHP_CodeSniffer" name="Ruleset" abstract="false" final="false" start="17" end="1383">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/src" file="Ruleset.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/src/Ruleset.php" size="50807" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="8806d2179be44e1ed69c0065c1e8fbe92ae5debb" relative="ar/www/html/vendor/squizlabs/php_codesniffer/src/Ruleset.php"/>
  <member name="name" default="''" type="string" visibility="public" static="false" line="33">
    <docblock>
      <description compact="The name of the coding standard being used.">If a top-level standard includes other standards, or sniffs
from other standards, only the name of the top-level standard
will be stored in here.

If multiple top-level standards are being loaded into
a single ruleset object, this will store a comma separated list
of the top-level standard names.</description>
      <var type="string"/>
    </docblock>
  </member>
  <member name="paths" default="" type="array" visibility="public" static="false" line="40">
    <docblock>
      <description compact="A list of file paths for the ruleset files being used."/>
      <var type="array" of="object">
        <type full="PHP_CodeSniffer\string" namespace="PHP_CodeSniffer" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="ignorePatterns" default="" type="array" visibility="public" static="false" line="51">
    <docblock>
      <description compact="A list of regular expressions used to ignore specific sniffs for files and folders.">Is also used to set global exclude patterns.
The key is the regular expression and the value is the type
of ignore pattern (absolute or relative).</description>
      <var description="string&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;string" namespace="PHP_CodeSniffer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="includePatterns" default="" type="array" visibility="public" static="false" line="62">
    <docblock>
      <description compact="A list of regular expressions used to include specific sniffs for files and folders.">The key is the sniff code and the value is an array with
the key being a regular expression and the value is the type
of ignore pattern (absolute or relative).</description>
      <var description="array&lt;string, string&gt;&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;string" namespace="PHP_CodeSniffer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="sniffs" default="" type="array" visibility="public" static="false" line="72">
    <docblock>
      <description compact="An array of sniff objects that are being used to check files.">The key is the fully qualified name of the sniff class
and the value is the sniff object.</description>
      <var description="\PHP_CodeSniffer\Sniffs\Sniff&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;string" namespace="PHP_CodeSniffer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="sniffCodes" default="" type="array" visibility="public" static="false" line="82">
    <docblock>
      <description compact="A mapping of sniff codes to fully qualified class names.">The key is the sniff code and the value
is the fully qualified name of the sniff class.</description>
      <var description="string&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;string" namespace="PHP_CodeSniffer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="tokenListeners" default="" type="array" visibility="public" static="false" line="92">
    <docblock>
      <description compact="An array of token types and the sniffs that are listening for them.">The key is the token name being listened for and the value
is the sniff object.</description>
      <var description="\PHP_CodeSniffer\Sniffs\Sniff&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;int" namespace="PHP_CodeSniffer" name="array&lt;int"/>
      </var>
    </docblock>
  </member>
  <member name="ruleset" default="" type="array" visibility="public" static="false" line="102">
    <docblock>
      <description compact="An array of rules from the ruleset.xml file.">It may be empty, indicating that the ruleset does not override
any of the default sniff settings.</description>
      <var description="mixed&gt;" type="object">
        <type full="PHP_CodeSniffer\array&lt;string" namespace="PHP_CodeSniffer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <member name="rulesetDirs" default="" type="array" visibility="protected" static="false" line="109">
    <docblock>
      <description compact="The directories that the processed rulesets are in."/>
      <var type="array" of="object">
        <type full="PHP_CodeSniffer\string" namespace="PHP_CodeSniffer" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="config" default="NULL" visibility="private" static="false" line="116">
    <docblock>
      <description compact="The config data for the run."/>
      <var type="object">
        <type full="\PHP_CodeSniffer\Config" namespace="\PHP_CodeSniffer" name="Config"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="127" end="229" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initialise the ruleset that the run will use."/>
      <param description="The config data for the run." type="object" variable="$config">
        <type full="\PHP_CodeSniffer\Config" namespace="\PHP_CodeSniffer" name="Config"/>
      </param>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
      <throws description="If no sniffs were registered." type="object">
        <type full="\PHP_CodeSniffer\Exceptions\RuntimeException" namespace="\PHP_CodeSniffer\Exceptions" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Config" namespace="PHP_CodeSniffer" name="Config"/>
    </parameter>
    <inline>
      <comment value="end foreach" line="195"/>
      <comment value="Ignore sniff restrictions if caching is on." line="197"/>
    </inline>
  </constructor>
  <method name="explain" start="237" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Prints a report showing the sniffs contained in a standard."/>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
    </docblock>
    <inline>
      <comment value="Add a dummy entry to the end so we loop" line="248"/>
      <comment value="one last time and clear the output buffer." line="249"/>
      <comment value="end foreach" line="292"/>
    </inline>
  </method>
  <method name="processRuleset" start="311" end="604" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes a single ruleset and returns a list of the sniffs it represents.">Rules founds within the ruleset are processed immediately, but sniff classes
are not registered by this method.</description>
      <param description="The path to a ruleset XML file." type="string" variable="$rulesetPath"/>
      <param description="How many nested processing steps we are in. This" type="int" variable="$depth">is only used for debug output.</param>
      <return type="array" of="object">
        <type full="PHP_CodeSniffer\string" namespace="PHP_CodeSniffer" name="string"/>
      </return>
      <throws description="- If the ruleset path is invalid." type="object">- If a specified autoload file could not be found.<type full="\PHP_CodeSniffer\Exceptions\RuntimeException" namespace="\PHP_CodeSniffer\Exceptions" name="RuntimeException"/></throws>
    </docblock>
    <parameter name="rulesetPath" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="Include custom autoloaders." line="352"/>
      <comment value="end foreach" line="375"/>
      <comment value="Process custom sniff config settings." line="377"/>
      <comment value="end foreach" line="481"/>
      <comment value="Process custom command line arguments." line="483"/>
      <comment value="end foreach" line="505"/>
      <comment value="Set custom php ini values as CLI args." line="507"/>
      <comment value="end foreach" line="533"/>
      <comment value="Process custom ignore pattern rules." line="564"/>
      <comment value="Merge our own sniff list with our externally included" line="591"/>
      <comment value="sniff list, but filter out any excluded sniffs." line="592"/>
    </inline>
  </method>
  <method name="expandSniffDirectory" start="616" end="664" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Expands a directory into a list of sniff files within."/>
      <param description="The path to a directory." type="string" variable="$directory"/>
      <param description="How many nested processing steps we are in. This" type="int" variable="$depth">is only used for debug output.</param>
      <return type="array"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="end foreach" line="660"/>
    </inline>
  </method>
  <method name="expandRulesetReference" start="679" end="847" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Expands a ruleset reference into a list of sniff files."/>
      <param description="The reference from the ruleset XML file." type="string" variable="$ref"/>
      <param description="The directory of the ruleset XML file, used to" type="string" variable="$rulesetDir">evaluate relative paths.</param>
      <param description="How many nested processing steps we are in. This" type="int" variable="$depth">is only used for debug output.</param>
      <return type="array"/>
      <throws description="If the reference is invalid." type="object">
        <type full="\PHP_CodeSniffer\Exceptions\RuntimeException" namespace="\PHP_CodeSniffer\Exceptions" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="ref" byreference="false" type="{unknown}"/>
    <parameter name="rulesetDir" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="Ignore internal sniffs codes as they are used to only" line="681"/>
      <comment value="hide and change internal messages." line="682"/>
      <comment value="As sniffs can't begin with a full stop, assume references in" line="692"/>
      <comment value="this format are relative paths and attempt to convert them" line="693"/>
      <comment value="to absolute paths. If this fails, let the reference run through" line="694"/>
      <comment value="the normal checks and have it fail as normal." line="695"/>
      <comment value="As sniffs can't begin with a tilde, assume references in" line="707"/>
      <comment value="this format are relative to the user's home directory." line="708"/>
      <comment value="end if" line="805"/>
      <comment value="end if" line="845"/>
    </inline>
  </method>
  <method name="processRule" start="861" end="1093" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Processes a rule from a ruleset XML file, overriding built-in defaults."/>
      <param description="The rule object from a ruleset XML file." type="object" variable="$rule">
        <type full="\SimpleXMLElement" namespace="" name="SimpleXMLElement"/>
      </param>
      <param description="An array of sniffs that got included by this rule." type="array" variable="$newSniffs" of="object">
        <type full="PHP_CodeSniffer\string" namespace="PHP_CodeSniffer" name="string"/>
      </param>
      <param description="How many nested processing steps we are in." type="int" variable="$depth">This is only used for debug output.</param>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
      <throws description="If rule settings are invalid." type="object">
        <type full="\PHP_CodeSniffer\Exceptions\RuntimeException" namespace="\PHP_CodeSniffer\Exceptions" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="newSniffs" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="end foreach" line="1091"/>
    </inline>
  </method>
  <method name="shouldProcessElement" start="1103" end="1128" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Determine if an element should be processed or ignored."/>
      <param description="An object from a ruleset XML file." type="object" variable="$element">
        <type full="\SimpleXMLElement" namespace="" name="SimpleXMLElement"/>
      </param>
      <return type="object">
        <type full="PHP_CodeSniffer\bool" namespace="PHP_CodeSniffer" name="bool"/>
      </return>
    </docblock>
    <parameter name="element" byreference="false" type="{unknown}"/>
  </method>
  <method name="registerSniffs" start="1142" end="1193" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Loads and stores sniffs objects used for sniffing files."/>
      <param description="Paths to the sniff files to register." type="array" variable="$files"/>
      <param description="The sniff class names to restrict the allowed" type="array" variable="$restrictions">listeners to.</param>
      <param description="The sniff class names to exclude from the" type="array" variable="$exclusions">listeners list.</param>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
    </docblock>
    <parameter name="files" byreference="false" type="{unknown}"/>
    <parameter name="restrictions" byreference="false" type="{unknown}"/>
    <parameter name="exclusions" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="end foreach" line="1189"/>
    </inline>
  </method>
  <method name="populateTokenListeners" start="1202" end="1276" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Populates the array of PHP_CodeSniffer_Sniff objects for this file."/>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
      <throws description="If sniff registration fails." type="object">
        <type full="\PHP_CodeSniffer\Exceptions\RuntimeException" namespace="\PHP_CodeSniffer\Exceptions" name="RuntimeException"/>
      </throws>
    </docblock>
    <inline>
      <comment value="Construct a list of listeners indexed by token being listened for." line="1204"/>
      <comment value="end foreach" line="1274"/>
    </inline>
  </method>
  <method name="setSniffProperty" start="1288" end="1328" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a single property for a sniff."/>
      <param description="The class name of the sniff." type="string" variable="$sniffClass"/>
      <param description="The name of the property to change." type="string" variable="$name"/>
      <param description="The new value of the property." type="string" variable="$value"/>
      <return type="object">
        <type full="PHP_CodeSniffer\void" namespace="PHP_CodeSniffer" name="void"/>
      </return>
    </docblock>
    <parameter name="sniffClass" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Setting a property for a sniff we are not using." line="1290"/>
      <comment value="Special case for booleans." line="1304"/>
    </inline>
  </method>
  <method name="getIgnorePatterns" start="1342" end="1354" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the array of ignore patterns.">Optionally takes a listener to get ignore patterns specified
for that sniff only.</description>
      <param description="The listener to get patterns for. If NULL, all" type="string" variable="$listener">patterns are returned.</param>
      <return type="array"/>
    </docblock>
    <parameter name="listener" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="getIncludePatterns" start="1368" end="1380" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the array of include patterns.">Optionally takes a listener to get include patterns specified
for that sniff only.</description>
      <param description="The listener to get patterns for. If NULL, all" type="string" variable="$listener">patterns are returned.</param>
      <return type="array"/>
    </docblock>
    <parameter name="listener" byreference="false" type="{unknown}" default="NULL"/>
  </method>
</class>
