<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\AbstractNoUselessElseFixer" namespace="PhpCsFixer" name="AbstractNoUselessElseFixer" abstract="true" final="false" start="19" end="207">
  <file path="//var/www/html/vendor/friendsofphp/php-cs-fixer/src" file="AbstractNoUselessElseFixer.php" realpath="/var/www/html/vendor/friendsofphp/php-cs-fixer/src/AbstractNoUselessElseFixer.php" size="6949" time="2022-03-18T17:20:59+00:00" unixtime="1647624059" sha1="57487316526ad42cd0372534ce33013358552ba5" relative="ar/www/html/vendor/friendsofphp/php-cs-fixer/src/AbstractNoUselessElseFixer.php"/>
  <extends full="PhpCsFixer\AbstractFixer" namespace="PhpCsFixer" name="AbstractFixer"/>
  <method name="getPriority" start="24" end="28" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="int" nullable="false"/>
    <inline>
      <comment value="should be run before NoWhitespaceInBlankLineFixer, NoExtraBlankLinesFixer, BracesFixer and after NoEmptyStatementFixer." line="26"/>
    </inline>
  </method>
  <method name="isSuperfluousElse" start="30" end="89" abstract="false" final="false" static="false" visibility="protected">
    <return type="bool" nullable="false"/>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="int"/>
  </method>
  <method name="getPreviousBlock" start="101" end="118" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Return the first and last token index of the previous block.">[0] First is either T_IF, T_ELSE or T_ELSEIF
[1] Last is either '}' or ';' / T_CLOSE_TAG for short notation blocks</description>
      <param description="T_IF, T_ELSE, T_ELSEIF" type="int" variable="$index"/>
      <return type="array" of="object">
        <type full="PhpCsFixer\int" namespace="PhpCsFixer" name="int"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="int"/>
    <inline>
      <comment value="short 'if' detection" line="104"/>
    </inline>
  </method>
  <method name="isInConditional" start="124" end="141" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param description="Index of the token to check" type="int" variable="$index"/>
      <param description="Lower limit index. Since the token to check will always be in a conditional we must stop checking at this index" type="int" variable="$lowerLimitIndex"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="int"/>
    <parameter name="lowerLimitIndex" byreference="false" type="int"/>
    <inline>
      <comment value="token is always ')' here." line="135"/>
      <comment value="If it is part of the condition the token is always in, return false." line="136"/>
      <comment value="If it is not it is a nested condition so return true" line="137"/>
    </inline>
  </method>
  <method name="isInConditionWithoutBraces" start="152" end="206" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="For internal use only, as it is not perfect.">Returns if the token at given index is part of an if/elseif/else statement
without {}. Assumes not passing the last `;`/close tag of the statement, not
out of range index, etc.</description>
      <param description="Index of the token to check" type="int" variable="$index"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="int"/>
    <parameter name="lowerLimitIndex" byreference="false" type="int"/>
  </method>
  <extenders>
    <extender full="PhpCsFixer\Fixer\ControlStructure\NoUselessElseFixer" namespace="PhpCsFixer\Fixer\ControlStructure" name="NoUselessElseFixer"/>
    <extender full="PhpCsFixer\Fixer\ControlStructure\NoSuperfluousElseifFixer" namespace="PhpCsFixer\Fixer\ControlStructure" name="NoSuperfluousElseifFixer"/>
  </extenders>
  <parent full="PhpCsFixer\AbstractFixer" namespace="PhpCsFixer" name="AbstractFixer">
    <implements full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface"/>
    <member name="configuration" visibility="protected" static="false" line="41">
      <docblock>
        <description/>
        <var description="mixed&gt;" type="object">
          <type full="PhpCsFixer\null|array&lt;string" namespace="PhpCsFixer" name="null|array&lt;string"/>
        </var>
      </docblock>
    </member>
    <member name="whitespacesConfig" visibility="protected" static="false" line="46">
      <docblock>
        <description/>
        <var type="object">
          <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="53" end="66" abstract="false" final="false" static="false" visibility="public"/>
    <method name="fix" start="68" end="77" abstract="false" final="true" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="isRisky" start="82" end="85" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
    <method name="getName" start="90" end="96" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="getPriority" start="101" end="104" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="int" nullable="false"/>
    </method>
    <method name="supports" start="109" end="112" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
    </method>
    <method name="configure" start="114" end="158" abstract="false" final="false" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="configuration" byreference="false" type="array"/>
    </method>
    <method name="getConfigurationDefinition" start="160" end="171" abstract="false" final="false" static="false" visibility="public">
      <return type="object" nullable="false">
        <type full="PhpCsFixer\FixerConfiguration\FixerConfigurationResolverInterface" namespace="PhpCsFixer\FixerConfiguration" name="FixerConfigurationResolverInterface"/>
      </return>
    </method>
    <method name="setWhitespacesConfig" start="173" end="180" abstract="false" final="false" static="false" visibility="public">
      <return type="void" nullable="false"/>
      <parameter name="config" byreference="false" type="object">
        <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
      </parameter>
    </method>
    <method name="applyFix" start="182" end="182" abstract="true" final="false" static="false" visibility="protected">
      <return type="void" nullable="false"/>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="createConfigurationDefinition" start="184" end="191" abstract="false" final="false" static="false" visibility="protected">
      <return type="object" nullable="false">
        <type full="PhpCsFixer\FixerConfiguration\FixerConfigurationResolverInterface" namespace="PhpCsFixer\FixerConfiguration" name="FixerConfigurationResolverInterface"/>
      </return>
    </method>
  </parent>
  <interface full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface">
    <method name="isCandidate" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if the fixer is a candidate for given Tokens collection.">Fixer is a candidate when the collection contains tokens that may be fixed
during fixer work. This could be considered as some kind of bloom filter.
When this method returns true then to the Tokens collection may or may not
need a fixing, but when this method returns false then the Tokens collection
need no fixing for sure.</description>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="isRisky" start="42" end="42" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if fixer is risky or not.">Risky fixer could change code behavior!</description>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
    <method name="fix" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Fixes a file."/>
        <param description="A \SplFileInfo instance" type="object" variable="$file">
          <type full="\SplFileInfo" namespace="" name="SplFileInfo"/>
        </param>
        <param description="Tokens collection" type="object" variable="$tokens">
          <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
        </param>
      </docblock>
      <return type="void" nullable="false"/>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="getDefinition" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the definition of the fixer."/>
      </docblock>
      <return type="object" nullable="false">
        <type full="PhpCsFixer\FixerDefinition\FixerDefinitionInterface" namespace="PhpCsFixer\FixerDefinition" name="FixerDefinitionInterface"/>
      </return>
    </method>
    <method name="getName" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the name of the fixer.">The name must be all lowercase and without any spaces.</description>
        <return description="The name of the fixer" type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="getPriority" start="71" end="71" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the priority of the fixer.">The default priority is 0 and higher priorities are executed first.</description>
      </docblock>
      <return type="int" nullable="false"/>
    </method>
    <method name="supports" start="78" end="78" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the file is supported by this fixer."/>
        <return description="true if the file is supported by this fixer, false otherwise" type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
    </method>
  </interface>
</class>
