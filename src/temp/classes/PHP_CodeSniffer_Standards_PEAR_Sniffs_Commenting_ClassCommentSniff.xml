<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\ClassCommentSniff" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="ClassCommentSniff" abstract="false" final="false" start="15" end="118">
  <file path="//var/www/html/vendor/squizlabs/php_codesniffer/src/Standards/PEAR/Sniffs/Commenting" file="ClassCommentSniff.php" realpath="/var/www/html/vendor/squizlabs/php_codesniffer/src/Standards/PEAR/Sniffs/Commenting/ClassCommentSniff.php" size="3661" time="2021-12-12T21:44:58+00:00" unixtime="1639345498" sha1="13e9ab21605e4a03f3ca4112d0fea3e76bbd2f3a" relative="ar/www/html/vendor/squizlabs/php_codesniffer/src/Standards/PEAR/Sniffs/Commenting/ClassCommentSniff.php"/>
  <extends full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\FileCommentSniff" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="FileCommentSniff"/>
  <method name="register" start="24" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="44" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Check each tag." line="84"/>
    </inline>
  </method>
  <method name="processVersion" start="98" end="115" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Process the version tag."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
      </param>
      <param description="The tokens for these tags." type="array" variable="$tags"/>
      <return type="object">
        <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
    <parameter name="tags" byreference="false" type="array"/>
  </method>
  <parent full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\FileCommentSniff" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="FileCommentSniff">
    <implements full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff"/>
    <member name="tags" default="" type="array" visibility="protected" static="false" line="24">
      <docblock>
        <description compact="Tags in correct order and related info."/>
        <var type="array"/>
      </docblock>
    </member>
    <method name="register" start="77" end="81" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns an array of tokens this test wants to listen for."/>
        <return type="array"/>
      </docblock>
    </method>
    <method name="process" start="93" end="208" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Processes this test, when one of its tokens is encountered."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
        <return type="int"/>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="object">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </parameter>
      <parameter name="stackPtr" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="Find the next non whitespace token." line="97"/>
        <comment value="Allow declare() statements at the top of the file." line="100"/>
        <comment value="Ignore vim header." line="106"/>
        <comment value="Check the PHP Version, which should be in some text before the first tag." line="184"/>
        <comment value="Check each tag." line="202"/>
        <comment value="Ignore the rest of the file." line="205"/>
      </inline>
    </method>
    <method name="processTags" start="221" end="307" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Processes each required or optional tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
        <param description="Position in the stack where the comment started." type="int" variable="$commentStart"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="stackPtr" byreference="false" type="{unknown}"/>
      <parameter name="commentStart" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="end foreach" line="263"/>
        <comment value="Check if the tags are in the correct position." line="265"/>
        <comment value="end foreach" line="305"/>
      </inline>
    </method>
    <method name="processCategory" start="318" end="349" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the category tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
      <inline>
        <comment value="end foreach" line="347"/>
      </inline>
    </method>
    <method name="processPackage" start="360" end="402" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the package tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
      <inline>
        <comment value="end foreach" line="400"/>
      </inline>
    </method>
    <method name="processSubpackage" start="413" end="446" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the subpackage tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
      <inline>
        <comment value="end foreach" line="444"/>
      </inline>
    </method>
    <method name="processAuthor" start="457" end="476" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the author tag(s) that this header comment has."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
    </method>
    <method name="processCopyright" start="487" end="517" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the copyright tags."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
      <inline>
        <comment value="end foreach" line="515"/>
      </inline>
    </method>
    <method name="processLicense" start="528" end="546" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the license tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
    </method>
    <method name="processVersion" start="557" end="578" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Process the version tag."/>
        <param description="The file being scanned." type="object" variable="$phpcsFile">
          <type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/>
        </param>
        <param description="The tokens for these tags." type="array" variable="$tags"/>
        <return type="object">
          <type full="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\void" namespace="PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting" name="void"/>
        </return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="{unknown}"/>
      <parameter name="tags" byreference="false" type="array"/>
    </method>
  </parent>
  <interface full="PHP_CodeSniffer\Sniffs\Sniff" namespace="PHP_CodeSniffer\Sniffs" name="Sniff">
    <method name="register" start="40" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Registers the tokens that this sniff wants to listen for.">An example return value for a sniff that wants to listen for whitespace
and any comments would be:

&lt;code&gt;
   return array(
           T_WHITESPACE,
           T_DOC_COMMENT,
           T_COMMENT,
          );
&lt;/code&gt;</description>
        <return type="array" of="object">
          <type full="PHP_CodeSniffer\Sniffs\mixed" namespace="PHP_CodeSniffer\Sniffs" name="mixed"/>
        </return>
        <see value="Tokens.php"/>
      </docblock>
    </method>
    <method name="process" start="77" end="77" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Called when one of the token types that this sniff is listening for is found.">The stackPtr variable indicates where in the stack the token was found.
A sniff can acquire information this token, along with all the other
tokens within the stack by first acquiring the token stack:

&lt;code&gt;
   $tokens = $phpcsFile-&gt;getTokens();
   echo 'Encountered a '.$tokens[$stackPtr]['type'].' token';
   echo 'token information: ';
   print_r($tokens[$stackPtr]);
&lt;/code&gt;

If the sniff discovers an anomaly in the code, they can raise an error
by calling addError() on the \PHP_CodeSniffer\Files\File object, specifying an error
message and the position of the offending token:

&lt;code&gt;
   $phpcsFile-&gt;addError('Encountered an error', $stackPtr);
&lt;/code&gt;</description>
        <param description="The PHP_CodeSniffer file where the" type="object" variable="$phpcsFile">token was found.<type full="\PHP_CodeSniffer\Files\File" namespace="\PHP_CodeSniffer\Files" name="File"/></param>
        <param description="The position in the PHP_CodeSniffer" type="int" variable="$stackPtr">file's token stack where the token
                                              was found.</param>
        <return description="Optionally returns a stack pointer. The sniff will not be" type="object">called again on the current file until the returned stack
                 pointer is reached. Return (count($tokens) + 1) to skip
                 the rest of the file.<type full="PHP_CodeSniffer\Sniffs\void|int" namespace="PHP_CodeSniffer\Sniffs" name="void|int"/></return>
      </docblock>
      <parameter name="phpcsFile" byreference="false" type="object">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </parameter>
      <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
